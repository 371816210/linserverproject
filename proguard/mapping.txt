android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> b
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> a
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> a
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitAllowingStateLoss() -> b
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> c
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.e:
    int mStyle -> a
    int mTheme -> b
    boolean mCancelable -> c
    boolean mShowsDialog -> d
    int mBackStackId -> e
    android.app.Dialog mDialog -> f
    boolean mViewDestroyed -> g
    boolean mDismissed -> h
    boolean mShownByMe -> i
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> a
    void dismissAllowingStateLoss() -> a
    void dismissInternal(boolean) -> a
    android.app.Dialog getDialog() -> b
    int getTheme() -> c
    void onAttach(android.app.Activity) -> a
    void onDetach() -> d
    void onCreate(android.os.Bundle) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    android.app.Dialog onCreateDialog(android.os.Bundle) -> c
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> d
    void onStart() -> e
    void onSaveInstanceState(android.os.Bundle) -> e
    void onStop() -> f
    void onDestroyView() -> g
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> a
    int mState -> j
    android.view.View mAnimatingAway -> k
    int mStateAfterAnimating -> l
    android.os.Bundle mSavedFragmentState -> m
    android.util.SparseArray mSavedViewState -> n
    int mIndex -> o
    java.lang.String mWho -> p
    android.os.Bundle mArguments -> q
    android.support.v4.app.Fragment mTarget -> r
    int mTargetIndex -> s
    int mTargetRequestCode -> t
    boolean mAdded -> u
    boolean mRemoving -> v
    boolean mResumed -> w
    boolean mFromLayout -> x
    boolean mInLayout -> y
    boolean mRestored -> z
    int mBackStackNesting -> A
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> B
    android.support.v4.app.FragmentActivity mActivity -> C
    int mFragmentId -> D
    int mContainerId -> E
    java.lang.String mTag -> F
    boolean mHidden -> G
    boolean mDetached -> H
    boolean mRetainInstance -> I
    boolean mRetaining -> J
    boolean mHasMenu -> K
    boolean mMenuVisible -> L
    boolean mCalled -> M
    int mNextAnim -> N
    android.view.ViewGroup mContainer -> O
    android.view.View mView -> P
    android.view.View mInnerView -> Q
    boolean mDeferStart -> R
    boolean mUserVisibleHint -> S
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> T
    boolean mLoadersStarted -> U
    boolean mCheckedForLoaderManager -> V
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState() -> h
    void setIndex(int) -> a
    boolean isInBackStack() -> i
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void setArguments(android.os.Bundle) -> f
    android.os.Bundle getArguments() -> j
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> a
    android.support.v4.app.FragmentActivity getActivity() -> k
    android.content.res.Resources getResources() -> l
    java.lang.String getString(int) -> b
    android.support.v4.app.FragmentManager getFragmentManager() -> m
    boolean isAdded() -> n
    boolean isVisible() -> o
    boolean isHidden() -> p
    void onHiddenChanged(boolean) -> b
    void startActivity(android.content.Intent) -> a
    void startActivityForResult(android.content.Intent,int) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    android.view.View getView() -> q
    void onActivityCreated(android.os.Bundle) -> d
    void onStart() -> e
    void onResume() -> r
    void onSaveInstanceState(android.os.Bundle) -> e
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> s
    void onStop() -> f
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> g
    void onDestroy() -> t
    void initState() -> u
    void onDetach() -> d
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> v
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> a
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void performStart() -> w
    void performStop() -> x
    void performReallyStop() -> y
    void performDestroyView() -> z
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.h:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    boolean mCreated -> c
    boolean mResumed -> d
    boolean mStopped -> e
    boolean mReallyStopped -> f
    boolean mRetaining -> g
    boolean mOptionsMenuInvalidated -> h
    boolean mCheckedForLoaderManager -> i
    boolean mLoadersStarted -> j
    android.support.v4.util.SparseArrayCompat mAllLoaderManagers -> k
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> l
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> e
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> a
    void invalidateSupportFragmentIndex(int) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(int,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.i:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.j:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.k:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.util.SparseArrayCompat loaders -> e
android.support.v4.app.FragmentManager -> android.support.v4.app.l:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentById(int) -> a
    boolean popBackStackImmediate() -> c
    boolean popBackStackImmediate(java.lang.String,int) -> a
    void popBackStack(int,int) -> a
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.m:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.n:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    boolean mNeedMenuInvalidate -> p
    boolean mStateSaved -> q
    boolean mDestroyed -> r
    java.lang.String mNoTransactionsBecause -> s
    boolean mHavePendingDeferredStart -> t
    android.os.Bundle mStateBundle -> u
    android.util.SparseArray mStateArray -> v
    java.lang.Runnable mExecCommit -> w
    android.view.animation.Interpolator DECELERATE_QUINT -> x
    android.view.animation.Interpolator DECELERATE_CUBIC -> y
    android.view.animation.Interpolator ACCELERATE_QUINT -> z
    android.view.animation.Interpolator ACCELERATE_CUBIC -> A
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    boolean popBackStackImmediate(java.lang.String,int) -> a
    void popBackStack(int,int) -> a
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> b
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> c
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> d
    void makeInactive(android.support.v4.app.Fragment) -> e
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> s
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> f
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> g
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroy() -> q
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> r
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.o:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.p:
    int val$id -> a
    int val$flags -> b
    android.support.v4.app.FragmentManagerImpl this$0 -> c
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.q:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.r:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.s:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTransaction -> android.support.v4.app.t:
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> b
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> a
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> a
    int commit() -> a
    int commitAllowingStateLoss() -> b
android.support.v4.app.ListFragment -> android.support.v4.app.u:
    android.os.Handler mHandler -> i
    java.lang.Runnable mRequestFocus -> W
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> X
    android.widget.ListAdapter mAdapter -> a
    android.widget.ListView mList -> b
    android.view.View mEmptyView -> c
    android.widget.TextView mStandardEmptyView -> d
    android.view.View mProgressContainer -> e
    android.view.View mListContainer -> f
    java.lang.CharSequence mEmptyText -> g
    boolean mListShown -> h
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onDestroyView() -> g
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> a
    void setListAdapter(android.widget.ListAdapter) -> a
    void setListShown(boolean,boolean) -> a
    void ensureList() -> a
android.support.v4.app.ListFragment$1 -> android.support.v4.app.v:
    android.support.v4.app.ListFragment this$0 -> a
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.w:
    android.support.v4.app.ListFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.x:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.y:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.z:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    android.support.v4.app.FragmentActivity mActivity -> d
    boolean mStarted -> e
    boolean mRetaining -> f
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.aa:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> a
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> b
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.ab:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ac:
android.support.v4.content.AsyncTaskLoader -> android.support.v4.a.a:
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> a
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> b
    long mUpdateThrottle -> c
    long mLastLoadCompleteTime -> d
    android.os.Handler mHandler -> e
    void onForceLoad() -> a
    boolean cancelLoad() -> b
    void onCanceled(java.lang.Object) -> a
    void executePendingTask() -> c
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> a
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> b
    java.lang.Object loadInBackground() -> d
    java.lang.Object onLoadInBackground() -> e
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.a.b:
    java.lang.Object result -> a
    boolean waiting -> b
    java.util.concurrent.CountDownLatch done -> e
    android.support.v4.content.AsyncTaskLoader this$0 -> c
    java.lang.Object doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Object) -> a
    void onCancelled() -> a
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> a
android.support.v4.content.CursorLoader -> android.support.v4.a.c:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> f
    android.net.Uri mUri -> g
    java.lang.String[] mProjection -> h
    java.lang.String mSelection -> i
    java.lang.String[] mSelectionArgs -> j
    java.lang.String mSortOrder -> k
    android.database.Cursor mCursor -> l
    android.database.Cursor loadInBackground() -> f
    void registerContentObserver(android.database.Cursor,android.database.ContentObserver) -> a
    void deliverResult(android.database.Cursor) -> a
    void onStartLoading() -> g
    void onStopLoading() -> h
    void onCanceled(android.database.Cursor) -> b
    void onReset() -> i
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    java.lang.Object loadInBackground() -> d
    void onCanceled(java.lang.Object) -> a
    void deliverResult(java.lang.Object) -> b
android.support.v4.content.Loader -> android.support.v4.a.d:
    int mId -> m
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> n
    android.content.Context mContext -> o
    boolean mStarted -> p
    boolean mAbandoned -> q
    boolean mReset -> r
    boolean mContentChanged -> s
    void deliverResult(java.lang.Object) -> b
    android.content.Context getContext() -> j
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    boolean isStarted() -> k
    boolean isAbandoned() -> l
    boolean isReset() -> m
    void startLoading() -> n
    void onStartLoading() -> g
    void forceLoad() -> o
    void onForceLoad() -> a
    void stopLoading() -> p
    void onStopLoading() -> h
    void reset() -> q
    void onReset() -> i
    boolean takeContentChanged() -> r
    void onContentChanged() -> s
    java.lang.String dataToString(java.lang.Object) -> c
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.a.e:
    android.support.v4.content.Loader this$0 -> a
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.f:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> a
android.support.v4.content.ModernAsyncTask -> android.support.v4.a.g:
    java.util.concurrent.ThreadFactory sThreadFactory -> a
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> b
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> d
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> c
    java.util.concurrent.Executor sDefaultExecutor -> e
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> f
    java.util.concurrent.FutureTask mFuture -> g
    android.support.v4.content.ModernAsyncTask$Status mStatus -> h
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> i
    void postResultIfNotInvoked(java.lang.Object) -> c
    java.lang.Object postResult(java.lang.Object) -> d
    java.lang.Object doInBackground(java.lang.Object[]) -> a
    void onPreExecute() -> b
    void onPostExecute(java.lang.Object) -> a
    void onProgressUpdate(java.lang.Object[]) -> b
    void onCancelled(java.lang.Object) -> b
    void onCancelled() -> a
    boolean isCancelled() -> c
    boolean cancel(boolean) -> a
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> a
    void finish(java.lang.Object) -> e
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> a
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> a
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> b
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> c
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.a.h:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.a.i:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.a.j:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.a.k:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> a
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.a.l:
    android.support.v4.content.ModernAsyncTask mTask -> a
    java.lang.Object[] mData -> b
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.a.m:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.a.n:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> a
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> b
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> c
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> d
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.a.o:
    java.lang.Object[] mParams -> b
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    java.lang.Object get(int) -> a
    java.lang.Object get(int,java.lang.Object) -> a
    void delete(int) -> b
    void remove(int) -> c
    void removeAt(int) -> d
    void gc() -> c
    void put(int,java.lang.Object) -> b
    int size() -> a
    int keyAt(int) -> e
    java.lang.Object valueAt(int) -> f
    void clear() -> b
    int binarySearch(int[],int,int,int) -> a
    int idealByteArraySize(int) -> g
    int idealIntArraySize(int) -> h
android.support.v4.util.TimeUtils -> android.support.v4.c.d:
    java.lang.Object sFormatSync -> a
    char[] sFormatStr -> b
    int accumField(int,int,boolean,int) -> a
    int printField(char[],int,char,int,boolean,int) -> a
    int formatDurationLocked(long,int) -> a
    void formatDuration(long,java.io.PrintWriter,int) -> a
    void formatDuration(long,java.io.PrintWriter) -> a
    void formatDuration(long,long,java.io.PrintWriter) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.a:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.b:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.c:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.d:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.e:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> a
android.support.v4.view.MotionEventCompat -> android.support.v4.view.f:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionIndex(android.view.MotionEvent) -> a
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.g:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.h:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.i:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.j:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> android.support.v4.view.k:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.l:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.m:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.n:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.o:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.p:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.ViewCompat -> android.support.v4.view.q:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.r:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    long getFrameTime() -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.s:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.t:
    long getFrameTime() -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.u:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.v:
    void postInvalidateOnAnimation(android.view.View) -> b
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.w:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.x:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.y:
    long getFrameTime() -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.z:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.aa:
    void postInvalidateOnAnimation(android.view.View) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> e
    android.graphics.Rect mTempRect -> f
    android.support.v4.view.PagerAdapter mAdapter -> g
    int mCurItem -> h
    int mRestoredCurItem -> i
    android.os.Parcelable mRestoredAdapterState -> j
    java.lang.ClassLoader mRestoredClassLoader -> k
    android.widget.Scroller mScroller -> l
    android.support.v4.view.ViewPager$PagerObserver mObserver -> m
    int mPageMargin -> n
    android.graphics.drawable.Drawable mMarginDrawable -> o
    int mTopPageBounds -> p
    int mBottomPageBounds -> q
    float mFirstOffset -> r
    float mLastOffset -> s
    int mChildWidthMeasureSpec -> t
    int mChildHeightMeasureSpec -> u
    boolean mInLayout -> v
    boolean mScrollingCacheEnabled -> w
    boolean mPopulatePending -> x
    int mOffscreenPageLimit -> y
    boolean mIsBeingDragged -> z
    boolean mIsUnableToDrag -> A
    int mDefaultGutterSize -> B
    int mGutterSize -> C
    int mTouchSlop -> D
    float mInitialMotionX -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    int mActivePointerId -> H
    android.view.VelocityTracker mVelocityTracker -> I
    int mMinimumVelocity -> J
    int mMaximumVelocity -> K
    int mFlingDistance -> L
    int mCloseEnough -> M
    boolean mFakeDragging -> N
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> O
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> P
    boolean mFirstLayout -> Q
    boolean mNeedCalculatePageOffsets -> R
    boolean mCalledSuper -> S
    int mDecorChildCount -> T
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> U
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> V
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> W
    int mScrollState -> Z
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> f
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> a
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll() -> g
    boolean isGutterDrag(float,float) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> h
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> i
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> c
    boolean pageRight() -> d
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$300() -> e
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ab:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ac:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ad:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ae:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.af:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ag:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ah:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ai:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.aj:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.d.a:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.d.b:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.d.c:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.d.d:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.d.e:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
com.google.android.gcm.GCMBaseIntentService -> com.a.a.a.a:
    android.os.PowerManager$WakeLock sWakeLock -> a
    java.lang.Object LOCK -> b
    java.lang.String[] mSenderIds -> c
    int sCounter -> d
    java.util.Random sRandom -> e
    int MAX_BACKOFF_MS -> f
    java.lang.String TOKEN -> g
    java.lang.String getName(java.lang.String) -> a
    java.lang.String getName(java.lang.String[]) -> a
    java.lang.String[] getSenderIds(android.content.Context) -> a
    void onMessage(android.content.Context,android.content.Intent) -> a
    void onDeletedMessages(android.content.Context,int) -> a
    boolean onRecoverableError(android.content.Context,java.lang.String) -> a
    void onError(android.content.Context,java.lang.String) -> b
    void onRegistered(android.content.Context,java.lang.String) -> c
    void onUnregistered(android.content.Context,java.lang.String) -> d
    void onHandleIntent(android.content.Intent) -> onHandleIntent
    void runIntentInService(android.content.Context,android.content.Intent,java.lang.String) -> a
    void handleRegistration(android.content.Context,android.content.Intent) -> b
com.google.android.gcm.GCMBroadcastReceiver -> com.a.a.a.b:
    boolean mReceiverSet -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    java.lang.String getGCMIntentServiceClassName(android.content.Context) -> a
    java.lang.String getDefaultIntentServiceClassName(android.content.Context) -> b
com.google.android.gcm.GCMRegistrar -> com.a.a.a.c:
    com.google.android.gcm.GCMBroadcastReceiver sRetryReceiver -> a
    java.lang.String sRetryReceiverClassName -> b
    void checkDevice(android.content.Context) -> a
    void checkManifest(android.content.Context) -> b
    void checkReceiver(android.content.Context,java.util.Set,java.lang.String) -> a
    void register(android.content.Context,java.lang.String[]) -> a
    void internalRegister(android.content.Context,java.lang.String[]) -> b
    java.lang.String getFlatSenderIds(java.lang.String[]) -> a
    void internalUnregister(android.content.Context) -> c
    void setRetryBroadcastReceiver(android.content.Context) -> d
    void setRetryReceiverClassName(java.lang.String) -> a
    java.lang.String getRegistrationId(android.content.Context) -> e
    boolean isRegistered(android.content.Context) -> f
    java.lang.String clearRegistrationId(android.content.Context) -> g
    java.lang.String setRegistrationId(android.content.Context,java.lang.String) -> a
    int getAppVersion(android.content.Context) -> j
    void resetBackoff(android.content.Context) -> h
    int getBackoff(android.content.Context) -> i
    void setBackoff(android.content.Context,int) -> a
    android.content.SharedPreferences getGCMPreferences(android.content.Context) -> k
com.inhuasoft.smart.server.AboutFragment -> com.inhuasoft.smart.server.a:
    com.inhuasoft.smart.server.FragmentsAvailable about -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onResume() -> r
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.AccountPreferencesFragment -> com.inhuasoft.smart.server.b:
    int n -> aj
    com.inhuasoft.smart.server.LinphonePreferences mPrefs -> ak
    android.preference.EditTextPreference mProxyPreference -> al
    android.preference.ListPreference mTransportPreference -> am
    android.preference.Preference$OnPreferenceChangeListener usernameChangedListener -> i
    android.preference.Preference$OnPreferenceChangeListener useridChangedListener -> W
    android.preference.Preference$OnPreferenceChangeListener passwordChangedListener -> X
    android.preference.Preference$OnPreferenceChangeListener domainChangedListener -> Y
    android.preference.Preference$OnPreferenceChangeListener displayNameChangedListener -> Z
    android.preference.Preference$OnPreferenceChangeListener proxyChangedListener -> aa
    android.preference.Preference$OnPreferenceChangeListener outboundProxyChangedListener -> ab
    android.preference.Preference$OnPreferenceChangeListener expiresChangedListener -> ac
    android.preference.Preference$OnPreferenceChangeListener prefixChangedListener -> ad
    android.preference.Preference$OnPreferenceChangeListener avpfChangedListener -> ae
    android.preference.Preference$OnPreferenceChangeListener avpfRRIntervalChangedListener -> af
    android.preference.Preference$OnPreferenceChangeListener escapeChangedListener -> ag
    android.preference.Preference$OnPreferenceChangeListener disableChangedListener -> ah
    android.preference.Preference$OnPreferenceChangeListener transportChangedListener -> ai
    void onDestroy() -> t
    void onCreate(android.os.Bundle) -> a
    void manageAccountPreferencesFields(android.preference.PreferenceScreen) -> b
    void initializeTransportPreference(android.preference.ListPreference) -> a
    void setListPreferenceValues(android.preference.ListPreference,java.util.List,java.util.List) -> a
    com.inhuasoft.smart.server.LinphonePreferences access$0(com.inhuasoft.smart.server.AccountPreferencesFragment) -> a
    int access$1(com.inhuasoft.smart.server.AccountPreferencesFragment) -> b
    android.preference.ListPreference access$2(com.inhuasoft.smart.server.AccountPreferencesFragment) -> c
    android.preference.EditTextPreference access$3(com.inhuasoft.smart.server.AccountPreferencesFragment) -> d
com.inhuasoft.smart.server.AccountPreferencesFragment$1 -> com.inhuasoft.smart.server.c:
    com.inhuasoft.smart.server.AccountPreferencesFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.AccountPreferencesFragment$10 -> com.inhuasoft.smart.server.d:
    com.inhuasoft.smart.server.AccountPreferencesFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.AccountPreferencesFragment$11 -> com.inhuasoft.smart.server.e:
    com.inhuasoft.smart.server.AccountPreferencesFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.AccountPreferencesFragment$12 -> com.inhuasoft.smart.server.f:
    com.inhuasoft.smart.server.AccountPreferencesFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.AccountPreferencesFragment$13 -> com.inhuasoft.smart.server.g:
    com.inhuasoft.smart.server.AccountPreferencesFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.AccountPreferencesFragment$14 -> com.inhuasoft.smart.server.h:
    com.inhuasoft.smart.server.AccountPreferencesFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.AccountPreferencesFragment$15 -> com.inhuasoft.smart.server.i:
    com.inhuasoft.smart.server.AccountPreferencesFragment this$0 -> a
    android.preference.CheckBoxPreference val$disable -> b
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.inhuasoft.smart.server.AccountPreferencesFragment$16 -> com.inhuasoft.smart.server.j:
    com.inhuasoft.smart.server.AccountPreferencesFragment this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.inhuasoft.smart.server.AccountPreferencesFragment$2 -> com.inhuasoft.smart.server.k:
    com.inhuasoft.smart.server.AccountPreferencesFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.AccountPreferencesFragment$3 -> com.inhuasoft.smart.server.l:
    com.inhuasoft.smart.server.AccountPreferencesFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.AccountPreferencesFragment$4 -> com.inhuasoft.smart.server.m:
    com.inhuasoft.smart.server.AccountPreferencesFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.AccountPreferencesFragment$5 -> com.inhuasoft.smart.server.n:
    com.inhuasoft.smart.server.AccountPreferencesFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.AccountPreferencesFragment$6 -> com.inhuasoft.smart.server.o:
    com.inhuasoft.smart.server.AccountPreferencesFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.AccountPreferencesFragment$7 -> com.inhuasoft.smart.server.p:
    com.inhuasoft.smart.server.AccountPreferencesFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.AccountPreferencesFragment$8 -> com.inhuasoft.smart.server.q:
    com.inhuasoft.smart.server.AccountPreferencesFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.AccountPreferencesFragment$9 -> com.inhuasoft.smart.server.r:
    com.inhuasoft.smart.server.AccountPreferencesFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.AudioCallFragment -> com.inhuasoft.smart.server.s:
    com.inhuasoft.smart.server.InCallActivity incallActvityInstance -> b
    android.widget.ImageButton btnHangUp -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void registerCallDurationTimer(android.view.View,org.linphone.core.LinphoneCall) -> a
    void onAttach(android.app.Activity) -> a
    void onStart() -> e
    void hangUp() -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.BandwidthManager -> com.inhuasoft.smart.server.t:
    com.inhuasoft.smart.server.BandwidthManager instance -> a
    int currentProfile -> b
    com.inhuasoft.smart.server.BandwidthManager getInstance() -> a
    void updateWithProfileSettings(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCallParams) -> a
    boolean isVideoPossible() -> b
com.inhuasoft.smart.server.BluetoothManager -> com.inhuasoft.smart.server.BluetoothManager:
    int PLANTRONICS_BUTTON_PRESS -> a
    int PLANTRONICS_BUTTON_LONG_PRESS -> b
    int PLANTRONICS_BUTTON_DOUBLE_PRESS -> c
    int PLANTRONICS_BUTTON_CALL -> d
    int PLANTRONICS_BUTTON_MUTE -> e
    com.inhuasoft.smart.server.BluetoothManager instance -> f
    android.content.Context mContext -> g
    android.media.AudioManager mAudioManager -> h
    android.bluetooth.BluetoothAdapter mBluetoothAdapter -> i
    android.bluetooth.BluetoothHeadset mBluetoothHeadset -> j
    android.bluetooth.BluetoothDevice mBluetoothDevice -> k
    android.bluetooth.BluetoothProfile$ServiceListener mProfileListener -> l
    boolean isBluetoothConnected -> m
    boolean isScoConnected -> n
    com.inhuasoft.smart.server.BluetoothManager getInstance() -> a
    void initBluetooth() -> b
    void startBluetooth() -> i
    boolean routeAudioToBluetooth() -> c
    boolean isUsingBluetoothAudioRoute() -> d
    boolean isBluetoothHeadsetAvailable() -> e
    void disableBluetoothSCO() -> f
    void stopBluetooth() -> g
    void destroy() -> h
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void access$0(com.inhuasoft.smart.server.BluetoothManager,android.bluetooth.BluetoothHeadset) -> a
    void access$1(com.inhuasoft.smart.server.BluetoothManager,boolean) -> a
com.inhuasoft.smart.server.BluetoothManager$1 -> com.inhuasoft.smart.server.u:
    com.inhuasoft.smart.server.BluetoothManager this$0 -> a
    void onServiceConnected(int,android.bluetooth.BluetoothProfile) -> onServiceConnected
    void onServiceDisconnected(int) -> onServiceDisconnected
com.inhuasoft.smart.server.BootReceiver -> com.inhuasoft.smart.server.BootReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.inhuasoft.smart.server.CallManager -> com.inhuasoft.smart.server.v:
    com.inhuasoft.smart.server.CallManager instance -> a
    com.inhuasoft.smart.server.CallManager getInstance() -> a
    com.inhuasoft.smart.server.BandwidthManager bm() -> d
    void inviteAddress(org.linphone.core.LinphoneAddress,boolean,boolean) -> a
    boolean reinviteWithVideo() -> b
    void updateCall() -> c
com.inhuasoft.smart.server.ChatFragment -> com.inhuasoft.smart.server.w:
    org.linphone.core.LinphoneChatRoom chatRoom -> a
    android.view.View view -> b
    java.lang.String sipUri -> c
    android.widget.EditText message -> d
    android.widget.ImageView cancelUpload -> e
    android.widget.TextView sendImage -> f
    android.widget.TextView sendMessage -> g
    android.widget.TextView contactName -> h
    android.widget.TextView remoteComposing -> i
    com.inhuasoft.smart.server.ui.AvatarWithShadow contactPicture -> W
    android.widget.RelativeLayout messagesLayout -> X
    android.widget.RelativeLayout uploadLayout -> Y
    android.widget.RelativeLayout textLayout -> Z
    com.inhuasoft.smart.server.ui.LinphoneScrollView messagesScrollView -> aa
    int previousMessageID -> ab
    android.os.Handler mHandler -> ac
    java.util.List lastSentMessagesBubbles -> ad
    java.util.HashMap latestImageMessages -> ae
    int messagesFilterLimit -> af
    boolean useLinphoneMessageStorage -> ag
    boolean messagesArePresentButHidden -> ah
    android.widget.ProgressBar progressBar -> ai
    int bytesSent -> aj
    java.lang.String uploadServerUri -> ak
    java.lang.String fileToUploadPath -> al
    android.graphics.Bitmap imageToUpload -> am
    android.net.Uri imageToUploadUri -> an
    java.lang.Thread uploadThread -> ao
    android.text.TextWatcher textWatcher -> ap
    android.view.ViewTreeObserver$OnGlobalLayoutListener keyboardListener -> aq
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onSaveInstanceState(android.os.Bundle) -> e
    void addVirtualKeyboardVisiblityListener() -> A
    void removeVirtualKeyboardVisiblityListener() -> B
    void showKeyboardVisibleMode() -> a
    void hideKeyboardVisibleMode() -> b
    void invalidate() -> C
    void invalidate(int) -> c
    void displayChatHeader(java.lang.String,java.lang.String) -> a
    int checkId(int) -> d
    com.inhuasoft.smart.server.ui.BubbleChat displayMessage(int,java.lang.String,long,boolean,org.linphone.core.LinphoneChatMessage$State,android.widget.RelativeLayout) -> a
    com.inhuasoft.smart.server.ui.BubbleChat displayMessage(int,java.lang.String,long,boolean,org.linphone.core.LinphoneChatMessage$State,android.widget.RelativeLayout,boolean) -> a
    com.inhuasoft.smart.server.ui.BubbleChat displayImageMessage(int,android.graphics.Bitmap,long,boolean,org.linphone.core.LinphoneChatMessage$State,android.widget.RelativeLayout,java.lang.String) -> a
    com.inhuasoft.smart.server.ui.BubbleChat displayImageMessage(int,android.graphics.Bitmap,long,boolean,org.linphone.core.LinphoneChatMessage$State,android.widget.RelativeLayout,java.lang.String,boolean) -> a
    void changeDisplayedChat(java.lang.String,java.lang.String,java.lang.String) -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void onPause() -> s
    void onResume() -> r
    void onClick(android.view.View) -> onClick
    void displayMessages() -> D
    void sendTextMessage() -> E
    void sendTextMessage(java.lang.String) -> b
    void sendImageMessage(java.lang.String,android.graphics.Bitmap) -> a
    org.linphone.core.LinphoneChatMessage getMessageForId(int) -> e
    void hideMessageBubble(int) -> f
    void resendMessage(int) -> g
    void scrollToEnd() -> F
    void copyTextMessageToClipboard(int) -> h
    void onMessageReceived(int,org.linphone.core.LinphoneAddress,org.linphone.core.LinphoneChatMessage) -> a
    void onLinphoneChatMessageStateChanged(org.linphone.core.LinphoneChatMessage,org.linphone.core.LinphoneChatMessage$State) -> onLinphoneChatMessageStateChanged
    java.lang.String getSipUri() -> c
    void pickImage() -> G
    android.graphics.Bitmap downloadImage(java.lang.String) -> a
    void saveImage(int) -> i
    java.lang.String saveImage(android.graphics.Bitmap,int,org.linphone.core.LinphoneChatMessage) -> a
    long hashBitmap(android.graphics.Bitmap) -> a
    java.lang.String uploadImage(java.lang.String,android.graphics.Bitmap,int,int) -> a
    java.lang.String getRealPathFromURI(android.net.Uri) -> a
    void showPopupMenuAskingImageSize(java.lang.String,android.graphics.Bitmap) -> b
    void uploadAndSendImage(java.lang.String,android.graphics.Bitmap,com.inhuasoft.smart.server.ChatFragment$ImageSize) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    void onComposingReceived(org.linphone.core.LinphoneChatRoom) -> a
    void access$0(com.inhuasoft.smart.server.ChatFragment) -> a
    java.lang.Thread access$1(com.inhuasoft.smart.server.ChatFragment) -> b
    android.widget.RelativeLayout access$2(com.inhuasoft.smart.server.ChatFragment) -> c
    android.widget.RelativeLayout access$3(com.inhuasoft.smart.server.ChatFragment) -> d
    android.widget.ProgressBar access$4(com.inhuasoft.smart.server.ChatFragment) -> e
    android.widget.EditText access$5(com.inhuasoft.smart.server.ChatFragment) -> f
    android.widget.TextView access$6(com.inhuasoft.smart.server.ChatFragment) -> g
    org.linphone.core.LinphoneChatRoom access$7(com.inhuasoft.smart.server.ChatFragment) -> h
    android.widget.TextView access$8(com.inhuasoft.smart.server.ChatFragment) -> i
    android.view.View access$9(com.inhuasoft.smart.server.ChatFragment) -> j
    android.widget.RelativeLayout access$10(com.inhuasoft.smart.server.ChatFragment) -> k
    int access$11(com.inhuasoft.smart.server.ChatFragment) -> l
    com.inhuasoft.smart.server.ui.LinphoneScrollView access$12(com.inhuasoft.smart.server.ChatFragment) -> m
    void access$13(com.inhuasoft.smart.server.ChatFragment) -> n
    android.os.Handler access$14(com.inhuasoft.smart.server.ChatFragment) -> o
    boolean access$15(com.inhuasoft.smart.server.ChatFragment) -> p
    java.lang.String access$16(com.inhuasoft.smart.server.ChatFragment,android.graphics.Bitmap,int,org.linphone.core.LinphoneChatMessage) -> a
    com.inhuasoft.smart.server.ui.BubbleChat access$17(com.inhuasoft.smart.server.ChatFragment,int,java.lang.String,long,boolean,org.linphone.core.LinphoneChatMessage$State,android.widget.RelativeLayout) -> a
    com.inhuasoft.smart.server.ui.BubbleChat access$18(com.inhuasoft.smart.server.ChatFragment,int,android.graphics.Bitmap,long,boolean,org.linphone.core.LinphoneChatMessage$State,android.widget.RelativeLayout,java.lang.String) -> a
    java.lang.String access$19(com.inhuasoft.smart.server.ChatFragment) -> q
    java.util.HashMap access$20(com.inhuasoft.smart.server.ChatFragment) -> r
    java.util.List access$21(com.inhuasoft.smart.server.ChatFragment) -> s
    int access$22(com.inhuasoft.smart.server.ChatFragment) -> t
    void access$23(com.inhuasoft.smart.server.ChatFragment,int) -> a
    java.lang.String access$24(com.inhuasoft.smart.server.ChatFragment,java.lang.String,android.graphics.Bitmap,int,int) -> a
    void access$25(com.inhuasoft.smart.server.ChatFragment,java.lang.String,android.graphics.Bitmap) -> a
    android.widget.TextView access$26(com.inhuasoft.smart.server.ChatFragment) -> u
com.inhuasoft.smart.server.ChatFragment$1 -> com.inhuasoft.smart.server.x:
    com.inhuasoft.smart.server.ChatFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.ChatFragment$10 -> com.inhuasoft.smart.server.y:
    com.inhuasoft.smart.server.ChatFragment this$0 -> a
    int val$id -> b
    org.linphone.core.LinphoneChatMessage val$message -> c
    void run() -> run
com.inhuasoft.smart.server.ChatFragment$11 -> com.inhuasoft.smart.server.z:
    com.inhuasoft.smart.server.ChatFragment this$0 -> a
    int val$id -> b
    android.graphics.Bitmap val$fbm -> c
    org.linphone.core.LinphoneChatMessage val$message -> d
    void run() -> run
com.inhuasoft.smart.server.ChatFragment$12 -> com.inhuasoft.smart.server.aa:
    com.inhuasoft.smart.server.ChatFragment this$0 -> a
    org.linphone.core.LinphoneChatMessage val$finalMessage -> b
    org.linphone.core.LinphoneChatMessage$State val$finalState -> c
    java.lang.String val$finalImage -> d
    void run() -> run
com.inhuasoft.smart.server.ChatFragment$13 -> com.inhuasoft.smart.server.ab:
    com.inhuasoft.smart.server.ChatFragment this$0 -> a
    int val$imageSize -> b
    void onBytesWrite(int) -> a
com.inhuasoft.smart.server.ChatFragment$14 -> com.inhuasoft.smart.server.ac:
    com.inhuasoft.smart.server.ChatFragment this$0 -> a
    java.lang.String val$filePath -> b
    com.inhuasoft.smart.server.ChatFragment$ImageSize val$size -> c
    android.graphics.Bitmap val$image -> d
    void run() -> run
    com.inhuasoft.smart.server.ChatFragment access$0(com.inhuasoft.smart.server.ChatFragment$14) -> a
com.inhuasoft.smart.server.ChatFragment$14$1 -> com.inhuasoft.smart.server.ad:
    com.inhuasoft.smart.server.ChatFragment$14 this$1 -> a
    java.lang.String val$furl -> b
    android.graphics.Bitmap val$fbm -> c
    void run() -> run
com.inhuasoft.smart.server.ChatFragment$15 -> com.inhuasoft.smart.server.ae:
    com.inhuasoft.smart.server.ChatFragment this$0 -> a
    void run() -> run
com.inhuasoft.smart.server.ChatFragment$2 -> com.inhuasoft.smart.server.af:
    com.inhuasoft.smart.server.ChatFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.ChatFragment$3 -> com.inhuasoft.smart.server.ag:
    com.inhuasoft.smart.server.ChatFragment this$0 -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.inhuasoft.smart.server.ChatFragment$4 -> com.inhuasoft.smart.server.ah:
    com.inhuasoft.smart.server.ChatFragment this$0 -> a
    void run() -> run
com.inhuasoft.smart.server.ChatFragment$5 -> com.inhuasoft.smart.server.ai:
    com.inhuasoft.smart.server.ChatFragment this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
com.inhuasoft.smart.server.ChatFragment$6 -> com.inhuasoft.smart.server.aj:
    com.inhuasoft.smart.server.ChatFragment this$0 -> a
    void run() -> run
    com.inhuasoft.smart.server.ChatFragment access$0(com.inhuasoft.smart.server.ChatFragment$6) -> a
com.inhuasoft.smart.server.ChatFragment$6$1 -> com.inhuasoft.smart.server.ak:
    com.inhuasoft.smart.server.ChatFragment$6 this$1 -> a
    void OnScrollToTop(int) -> a
    com.inhuasoft.smart.server.ChatFragment$6 access$0(com.inhuasoft.smart.server.ChatFragment$6$1) -> a
com.inhuasoft.smart.server.ChatFragment$6$1$1 -> com.inhuasoft.smart.server.al:
    com.inhuasoft.smart.server.ChatFragment$6$1 this$2 -> a
    void run() -> run
com.inhuasoft.smart.server.ChatFragment$7 -> com.inhuasoft.smart.server.am:
    com.inhuasoft.smart.server.ChatFragment this$0 -> a
    java.lang.String val$url -> b
    int val$finalId -> c
    com.inhuasoft.smart.server.ui.BubbleChat val$bubble -> d
    android.view.View val$v -> e
    void onClick(android.view.View) -> onClick
    com.inhuasoft.smart.server.ChatFragment access$0(com.inhuasoft.smart.server.ChatFragment$7) -> a
com.inhuasoft.smart.server.ChatFragment$7$1 -> com.inhuasoft.smart.server.an:
    com.inhuasoft.smart.server.ChatFragment$7 this$1 -> a
    java.lang.String val$url -> b
    int val$finalId -> c
    com.inhuasoft.smart.server.ui.BubbleChat val$bubble -> d
    android.view.View val$v -> e
    void run() -> run
    com.inhuasoft.smart.server.ChatFragment$7 access$0(com.inhuasoft.smart.server.ChatFragment$7$1) -> a
com.inhuasoft.smart.server.ChatFragment$7$1$1 -> com.inhuasoft.smart.server.ao:
    com.inhuasoft.smart.server.ChatFragment$7$1 this$2 -> a
    android.view.View val$v -> b
    android.graphics.Bitmap val$bm -> c
    void run() -> run
com.inhuasoft.smart.server.ChatFragment$7$1$2 -> com.inhuasoft.smart.server.ap:
    com.inhuasoft.smart.server.ChatFragment$7$1 this$2 -> a
    void run() -> run
com.inhuasoft.smart.server.ChatFragment$8 -> com.inhuasoft.smart.server.aq:
    com.inhuasoft.smart.server.ChatFragment this$0 -> a
    java.lang.String val$url -> b
    android.view.View val$v -> c
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.ChatFragment$9 -> com.inhuasoft.smart.server.ar:
    com.inhuasoft.smart.server.ChatFragment this$0 -> a
    void run() -> run
com.inhuasoft.smart.server.ChatFragment$ImageSize -> com.inhuasoft.smart.server.as:
    com.inhuasoft.smart.server.ChatFragment$ImageSize SMALL -> a
    com.inhuasoft.smart.server.ChatFragment$ImageSize MEDIUM -> b
    com.inhuasoft.smart.server.ChatFragment$ImageSize LARGE -> c
    com.inhuasoft.smart.server.ChatFragment$ImageSize REAL -> d
    com.inhuasoft.smart.server.ChatFragment$ImageSize[] ENUM$VALUES -> e
    com.inhuasoft.smart.server.ChatFragment$ImageSize[] values() -> values
    com.inhuasoft.smart.server.ChatFragment$ImageSize valueOf(java.lang.String) -> valueOf
com.inhuasoft.smart.server.ChatFragment$OutputStreamListener -> com.inhuasoft.smart.server.at:
    void onBytesWrite(int) -> a
com.inhuasoft.smart.server.ChatFragment$ProgressOutputStream -> com.inhuasoft.smart.server.au:
    java.io.OutputStream outputStream -> a
    com.inhuasoft.smart.server.ChatFragment$OutputStreamListener listener -> c
    com.inhuasoft.smart.server.ChatFragment this$0 -> b
    void setListener(com.inhuasoft.smart.server.ChatFragment$OutputStreamListener) -> a
    void write(int) -> write
    void write(byte[],int,int) -> write
com.inhuasoft.smart.server.ChatListFragment -> com.inhuasoft.smart.server.av:
    android.os.Handler mHandler -> a
    android.view.LayoutInflater mInflater -> b
    java.util.List mConversations -> c
    java.util.List mDrafts -> d
    android.widget.ListView chatList -> e
    android.widget.TextView edit -> f
    android.widget.TextView ok -> g
    android.widget.TextView newDiscussion -> h
    android.widget.TextView noChatHistory -> i
    android.widget.ImageView clearFastChat -> W
    android.widget.EditText fastNewChat -> X
    boolean isEditMode -> Y
    boolean useLinphoneStorage -> Z
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void hideAndDisplayMessageIfNoChat() -> b
    void refresh() -> a
    boolean isVersionUsingNewChatStorage() -> c
    void onResume() -> r
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void onClick(android.view.View) -> onClick
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean importAndroidStoredMessagedIntoLibLinphoneStorage() -> A
    java.lang.String saveImageAsFile(int,android.graphics.Bitmap) -> a
    java.util.List access$0(com.inhuasoft.smart.server.ChatListFragment) -> a
    java.util.List access$1(com.inhuasoft.smart.server.ChatListFragment) -> b
    android.view.LayoutInflater access$2(com.inhuasoft.smart.server.ChatListFragment) -> c
    boolean access$3(com.inhuasoft.smart.server.ChatListFragment) -> d
    void access$4(com.inhuasoft.smart.server.ChatListFragment,java.util.List) -> a
    void access$5(com.inhuasoft.smart.server.ChatListFragment,java.util.List) -> b
    void access$6(com.inhuasoft.smart.server.ChatListFragment) -> e
    boolean access$7(com.inhuasoft.smart.server.ChatListFragment) -> f
com.inhuasoft.smart.server.ChatListFragment$1 -> com.inhuasoft.smart.server.aw:
    com.inhuasoft.smart.server.ChatListFragment this$0 -> a
    void run() -> run
com.inhuasoft.smart.server.ChatListFragment$2 -> com.inhuasoft.smart.server.ax:
    android.app.ProgressDialog pd -> b
    com.inhuasoft.smart.server.ChatListFragment this$0 -> a
    android.content.SharedPreferences val$prefs -> c
    void onPreExecute() -> onPreExecute
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.inhuasoft.smart.server.ChatListFragment$ChatListAdapter -> com.inhuasoft.smart.server.ay:
    boolean useNativeAPI -> b
    com.inhuasoft.smart.server.ChatListFragment this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.inhuasoft.smart.server.ChatMessage -> com.inhuasoft.smart.server.az:
    java.lang.String message -> a
    java.lang.String timestamp -> b
    java.lang.String url -> c
    boolean incoming -> d
    int status -> e
    int id -> f
    android.graphics.Bitmap image -> g
    boolean isRead -> h
    int getId() -> a
    java.lang.String getMessage() -> b
    java.lang.String getTimestamp() -> c
    boolean isIncoming() -> d
    org.linphone.core.LinphoneChatMessage$State getStatus() -> e
    android.graphics.Bitmap getImage() -> f
    java.lang.String getUrl() -> g
    void setUrl(java.lang.String) -> a
    java.lang.String toString() -> toString
com.inhuasoft.smart.server.ChatStorage -> com.inhuasoft.smart.server.ba:
    com.inhuasoft.smart.server.ChatStorage instance -> a
    android.content.Context context -> b
    android.database.sqlite.SQLiteDatabase db -> c
    boolean useNativeAPI -> d
    com.inhuasoft.smart.server.ChatStorage getInstance() -> a
    void restartChatStorage() -> b
    boolean isVersionUsingNewChatStorage() -> g
    void close() -> c
    void updateMessageStatus(java.lang.String,java.lang.String,int) -> a
    void updateMessageStatus(java.lang.String,int,int) -> a
    int saveTextMessage(java.lang.String,java.lang.String,java.lang.String,long) -> a
    int saveImageMessage(java.lang.String,java.lang.String,android.graphics.Bitmap,java.lang.String,long) -> a
    void saveImage(int,android.graphics.Bitmap) -> a
    int saveDraft(java.lang.String,java.lang.String) -> a
    void updateDraft(java.lang.String,java.lang.String) -> b
    void deleteDraft(java.lang.String) -> a
    java.lang.String getDraft(java.lang.String) -> b
    java.util.List getDrafts() -> d
    java.util.List getMessages(java.lang.String) -> c
    java.lang.String getTextMessageForId(org.linphone.core.LinphoneChatRoom,int) -> a
    org.linphone.core.LinphoneChatMessage getMessage(org.linphone.core.LinphoneChatRoom,int) -> b
    void removeDiscussion(java.lang.String) -> d
    java.util.ArrayList getChatList() -> e
    void deleteMessage(org.linphone.core.LinphoneChatRoom,int) -> c
    void markMessageAsRead(int) -> a
    int getUnreadMessageCount() -> f
    int getUnreadMessageCount(java.lang.String) -> e
    byte[] getRawImageFromMessage(int) -> b
com.inhuasoft.smart.server.ChatStorage$ChatHelper -> com.inhuasoft.smart.server.bb:
    com.inhuasoft.smart.server.ChatStorage this$0 -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.inhuasoft.smart.server.Contact -> com.inhuasoft.smart.server.bc:
    java.lang.String id -> a
    java.lang.String name -> b
    android.net.Uri photoUri -> c
    android.graphics.Bitmap photo -> d
    java.util.List numerosOrAddresses -> e
    org.linphone.core.LinphoneFriend friend -> f
    void setFriend(org.linphone.core.LinphoneFriend) -> a
    org.linphone.core.LinphoneFriend getFriend() -> a
    java.lang.String getID() -> b
    java.lang.String getName() -> c
    android.net.Uri getPhotoUri() -> d
    android.graphics.Bitmap getPhoto() -> e
    java.util.List getNumerosOrAddresses() -> f
    void refresh(android.content.ContentResolver) -> a
com.inhuasoft.smart.server.ContactFragment -> com.inhuasoft.smart.server.bd:
    com.inhuasoft.smart.server.Contact contact -> a
    android.widget.TextView editContact -> b
    android.view.LayoutInflater inflater -> c
    android.view.View view -> d
    boolean displayChatAddressOnly -> e
    android.view.View$OnClickListener dialListener -> f
    android.view.View$OnClickListener chatListener -> g
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void changeDisplayedContact(com.inhuasoft.smart.server.Contact) -> a
    void displayContact(android.view.LayoutInflater,android.view.View) -> a
    void onResume() -> r
    void onClick(android.view.View) -> onClick
    com.inhuasoft.smart.server.Contact access$0(com.inhuasoft.smart.server.ContactFragment) -> a
    android.view.LayoutInflater access$1(com.inhuasoft.smart.server.ContactFragment) -> b
    android.view.View access$2(com.inhuasoft.smart.server.ContactFragment) -> c
    void access$3(com.inhuasoft.smart.server.ContactFragment,android.view.LayoutInflater,android.view.View) -> a
com.inhuasoft.smart.server.ContactFragment$1 -> com.inhuasoft.smart.server.be:
    com.inhuasoft.smart.server.ContactFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.ContactFragment$2 -> com.inhuasoft.smart.server.bf:
    com.inhuasoft.smart.server.ContactFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.ContactFragment$3 -> com.inhuasoft.smart.server.bg:
    com.inhuasoft.smart.server.ContactFragment this$0 -> a
    java.lang.String val$finalNumberOrAddress -> b
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.ContactFragment$4 -> com.inhuasoft.smart.server.bh:
    com.inhuasoft.smart.server.ContactFragment this$0 -> a
    java.lang.String val$finalNumberOrAddress -> b
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.ContactHelper -> com.inhuasoft.smart.server.bi:
    java.lang.String username -> a
    java.lang.String domain -> b
    android.content.ContentResolver resolver -> c
    android.net.Uri foundPhotoUri -> d
    java.lang.String displayName -> e
    org.linphone.core.LinphoneAddress address -> f
    android.net.Uri getUri() -> a
    boolean query() -> b
    boolean testPhotoUri(android.database.Cursor) -> a
    boolean testPhotoUriAndCloseCursor(android.database.Cursor) -> b
    boolean testPhotoUri(android.content.ContentResolver,android.net.Uri,java.lang.String) -> a
    boolean queryOldContactAPI() -> c
    void access$0(com.inhuasoft.smart.server.ContactHelper,android.net.Uri) -> a
    void access$1(com.inhuasoft.smart.server.ContactHelper,java.lang.String) -> a
    java.lang.String access$2(com.inhuasoft.smart.server.ContactHelper) -> a
    java.lang.String access$3(com.inhuasoft.smart.server.ContactHelper) -> b
    android.content.ContentResolver access$4(com.inhuasoft.smart.server.ContactHelper) -> c
com.inhuasoft.smart.server.ContactHelper$ContactHelperNew -> com.inhuasoft.smart.server.bj:
    com.inhuasoft.smart.server.ContactHelper this$0 -> a
    boolean checkPhotosUris(android.content.ContentResolver,android.database.Cursor,java.lang.String,java.lang.String) -> a
    boolean queryNewContactAPI() -> a
    boolean access$1(com.inhuasoft.smart.server.ContactHelper$ContactHelperNew) -> a
com.inhuasoft.smart.server.ContactsFragment -> com.inhuasoft.smart.server.bk:
    android.os.Handler mHandler -> a
    android.view.LayoutInflater mInflater -> b
    android.widget.ListView contactsList -> c
    android.widget.TextView allContacts -> d
    android.widget.TextView linphoneContacts -> e
    android.widget.TextView newContact -> f
    android.widget.TextView noSipContact -> g
    android.widget.TextView noContact -> h
    boolean onlyDisplayLinphoneContacts -> i
    int lastKnownPosition -> W
    android.widget.AlphabetIndexer indexer -> X
    boolean editOnClick -> Y
    boolean editConsumed -> Z
    boolean onlyDisplayChatAddress -> aa
    java.lang.String sipAddressToAdd -> ab
    android.widget.ImageView clearSearchField -> ac
    android.widget.EditText searchField -> ad
    android.database.Cursor searchCursor -> ae
    com.inhuasoft.smart.server.ContactsFragment instance -> af
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onClick(android.view.View) -> onClick
    void searchContacts() -> b
    void searchContacts(java.lang.String) -> a
    void changeContactsAdapter() -> c
    void changeContactsToggle() -> A
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onResume() -> r
    void onPause() -> s
    void invalidate() -> a
    android.view.LayoutInflater access$0(com.inhuasoft.smart.server.ContactsFragment) -> a
    android.widget.AlphabetIndexer access$1(com.inhuasoft.smart.server.ContactsFragment) -> b
    android.widget.EditText access$2(com.inhuasoft.smart.server.ContactsFragment) -> c
    void access$3(com.inhuasoft.smart.server.ContactsFragment,java.lang.String) -> a
    void access$4(com.inhuasoft.smart.server.ContactsFragment) -> d
    android.widget.ListView access$5(com.inhuasoft.smart.server.ContactsFragment) -> e
    int access$6(com.inhuasoft.smart.server.ContactsFragment) -> f
com.inhuasoft.smart.server.ContactsFragment$1 -> com.inhuasoft.smart.server.bl:
    com.inhuasoft.smart.server.ContactsFragment this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.inhuasoft.smart.server.ContactsFragment$2 -> com.inhuasoft.smart.server.bm:
    com.inhuasoft.smart.server.ContactsFragment this$0 -> a
    void run() -> run
com.inhuasoft.smart.server.ContactsFragment$ContactsListAdapter -> com.inhuasoft.smart.server.bn:
    int margin -> b
    android.graphics.Bitmap bitmapUnknown -> c
    java.util.List contacts -> d
    android.database.Cursor cursor -> e
    com.inhuasoft.smart.server.ContactsFragment this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getPositionForSection(int) -> getPositionForSection
    int getSectionForPosition(int) -> getSectionForPosition
    java.lang.Object[] getSections() -> getSections
com.inhuasoft.smart.server.CustomDialog -> com.inhuasoft.smart.server.bo:
    android.app.AlertDialog create(android.content.Context,int,java.lang.String,java.lang.String,java.lang.String,android.content.DialogInterface$OnClickListener,java.lang.String,android.content.DialogInterface$OnClickListener) -> a
com.inhuasoft.smart.server.DialerFragment -> com.inhuasoft.smart.server.bp:
    com.inhuasoft.smart.server.DialerFragment instance -> a
    boolean isCallTransferOngoing -> b
    com.inhuasoft.smart.server.ui.AddressText mAddress -> c
    com.inhuasoft.smart.server.ui.CallButton mCall -> d
    android.widget.ImageView mAddContact -> e
    android.view.View$OnClickListener addContactListener -> f
    android.view.View$OnClickListener cancelListener -> g
    android.view.View$OnClickListener transferListener -> h
    boolean shouldEmptyAddressField -> i
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onResume() -> r
    void resetLayout(boolean) -> a
    void enableDisableAddContact() -> a
    void displayTextInAddressBar(java.lang.String) -> a
    void newOutgoingCall(java.lang.String) -> b
    void newOutgoingCall(android.content.Intent) -> b
    com.inhuasoft.smart.server.ui.AddressText access$0(com.inhuasoft.smart.server.DialerFragment) -> a
    void access$1(boolean) -> c
com.inhuasoft.smart.server.DialerFragment$1 -> com.inhuasoft.smart.server.bq:
    com.inhuasoft.smart.server.DialerFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.DialerFragment$2 -> com.inhuasoft.smart.server.br:
    com.inhuasoft.smart.server.DialerFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.DialerFragment$3 -> com.inhuasoft.smart.server.bs:
    com.inhuasoft.smart.server.DialerFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.EditContactFragment -> com.inhuasoft.smart.server.bt:
    android.view.View view -> a
    android.widget.TextView ok -> b
    android.widget.EditText firstName -> c
    android.widget.EditText lastName -> d
    android.view.LayoutInflater inflater -> e
    android.view.View deleteContact -> f
    boolean isNewContact -> g
    com.inhuasoft.smart.server.Contact contact -> h
    int contactID -> i
    java.util.List numbersAndAddresses -> W
    java.util.ArrayList ops -> X
    int firstSipAddressIndex -> Y
    java.lang.String newSipOrNumberToAdd -> Z
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onResume() -> r
    void initNumbersFields(android.widget.TableLayout,com.inhuasoft.smart.server.Contact) -> a
    android.view.View displayNumberOrAddress(android.widget.TableLayout,java.lang.String) -> a
    android.view.View displayNumberOrAddress(android.widget.TableLayout,java.lang.String,boolean) -> a
    void addEmptyRowToAllowNewNumberOrAddress(android.widget.TableLayout,boolean) -> a
    void createNewContact() -> a
    void updateExistingContact() -> b
    void deleteExistingContact() -> c
    java.lang.String getDisplayName() -> A
    java.lang.String findRawContactID(java.lang.String) -> a
    java.lang.String findContactFirstName(java.lang.String) -> b
    java.lang.String findContactLastName(java.lang.String) -> c
    java.util.ArrayList access$0(com.inhuasoft.smart.server.EditContactFragment) -> a
    int access$1(com.inhuasoft.smart.server.EditContactFragment) -> b
    boolean access$2(com.inhuasoft.smart.server.EditContactFragment) -> c
    java.lang.String access$3(com.inhuasoft.smart.server.EditContactFragment,java.lang.String) -> a
    java.util.List access$4(com.inhuasoft.smart.server.EditContactFragment) -> d
    void access$5(com.inhuasoft.smart.server.EditContactFragment) -> e
    void access$6(com.inhuasoft.smart.server.EditContactFragment) -> f
    android.widget.EditText access$7(com.inhuasoft.smart.server.EditContactFragment) -> g
    android.widget.EditText access$8(com.inhuasoft.smart.server.EditContactFragment) -> h
    android.widget.TextView access$9(com.inhuasoft.smart.server.EditContactFragment) -> i
    void access$10(com.inhuasoft.smart.server.EditContactFragment) -> j
    int access$11(com.inhuasoft.smart.server.EditContactFragment) -> k
    void access$12(com.inhuasoft.smart.server.EditContactFragment,int) -> a
    void access$13(com.inhuasoft.smart.server.EditContactFragment,android.widget.TableLayout,boolean) -> a
com.inhuasoft.smart.server.EditContactFragment$1 -> com.inhuasoft.smart.server.bu:
    com.inhuasoft.smart.server.EditContactFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.EditContactFragment$10 -> com.inhuasoft.smart.server.bv:
    com.inhuasoft.smart.server.EditContactFragment this$0 -> a
    android.widget.ImageView val$add -> b
    boolean val$isSip -> c
    android.widget.TableLayout val$controls -> d
    com.inhuasoft.smart.server.EditContactFragment$NewOrUpdatedNumberOrAddress val$nounoa -> e
    android.view.View val$view -> f
    void onClick(android.view.View) -> onClick
    com.inhuasoft.smart.server.EditContactFragment access$0(com.inhuasoft.smart.server.EditContactFragment$10) -> a
com.inhuasoft.smart.server.EditContactFragment$10$1 -> com.inhuasoft.smart.server.bw:
    com.inhuasoft.smart.server.EditContactFragment$10 this$1 -> a
    com.inhuasoft.smart.server.EditContactFragment$NewOrUpdatedNumberOrAddress val$nounoa -> b
    android.view.View val$view -> c
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.EditContactFragment$2 -> com.inhuasoft.smart.server.bx:
    com.inhuasoft.smart.server.EditContactFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.EditContactFragment$3 -> com.inhuasoft.smart.server.by:
    com.inhuasoft.smart.server.EditContactFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.EditContactFragment$4 -> com.inhuasoft.smart.server.bz:
    com.inhuasoft.smart.server.EditContactFragment this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.inhuasoft.smart.server.EditContactFragment$5 -> com.inhuasoft.smart.server.ca:
    com.inhuasoft.smart.server.EditContactFragment this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.inhuasoft.smart.server.EditContactFragment$6 -> com.inhuasoft.smart.server.cb:
    com.inhuasoft.smart.server.EditContactFragment this$0 -> a
    com.inhuasoft.smart.server.Contact val$contact -> b
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.EditContactFragment$7 -> com.inhuasoft.smart.server.cc:
    com.inhuasoft.smart.server.EditContactFragment this$0 -> a
    com.inhuasoft.smart.server.EditContactFragment$NewOrUpdatedNumberOrAddress val$nounoa -> b
    android.widget.EditText val$noa -> c
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.inhuasoft.smart.server.EditContactFragment$8 -> com.inhuasoft.smart.server.cd:
    com.inhuasoft.smart.server.EditContactFragment this$0 -> a
    com.inhuasoft.smart.server.EditContactFragment$NewOrUpdatedNumberOrAddress val$nounoa -> b
    android.view.View val$view -> c
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.EditContactFragment$9 -> com.inhuasoft.smart.server.ce:
    com.inhuasoft.smart.server.EditContactFragment this$0 -> a
    com.inhuasoft.smart.server.EditContactFragment$NewOrUpdatedNumberOrAddress val$nounoa -> b
    android.widget.EditText val$noa -> c
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.inhuasoft.smart.server.EditContactFragment$NewOrUpdatedNumberOrAddress -> com.inhuasoft.smart.server.cf:
    java.lang.String oldNumberOrAddress -> b
    java.lang.String newNumberOrAddress -> c
    boolean isSipAddress -> d
    com.inhuasoft.smart.server.EditContactFragment this$0 -> a
    void setNewNumberOrAddress(java.lang.String) -> a
    void save() -> a
    void delete() -> b
    void addNewNumber() -> c
    void updateNumber() -> d
    java.lang.String access$0(com.inhuasoft.smart.server.EditContactFragment$NewOrUpdatedNumberOrAddress) -> a
com.inhuasoft.smart.server.FragmentsAvailable -> com.inhuasoft.smart.server.cg:
    com.inhuasoft.smart.server.FragmentsAvailable UNKNOW -> a
    com.inhuasoft.smart.server.FragmentsAvailable DIALER -> b
    com.inhuasoft.smart.server.FragmentsAvailable HISTORY -> c
    com.inhuasoft.smart.server.FragmentsAvailable HISTORY_DETAIL -> d
    com.inhuasoft.smart.server.FragmentsAvailable CONTACTS -> e
    com.inhuasoft.smart.server.FragmentsAvailable CONTACT -> f
    com.inhuasoft.smart.server.FragmentsAvailable EDIT_CONTACT -> g
    com.inhuasoft.smart.server.FragmentsAvailable ABOUT -> h
    com.inhuasoft.smart.server.FragmentsAvailable ABOUT_INSTEAD_OF_SETTINGS -> i
    com.inhuasoft.smart.server.FragmentsAvailable ABOUT_INSTEAD_OF_CHAT -> j
    com.inhuasoft.smart.server.FragmentsAvailable ACCOUNT_SETTINGS -> k
    com.inhuasoft.smart.server.FragmentsAvailable SETTINGS -> l
    com.inhuasoft.smart.server.FragmentsAvailable CHATLIST -> m
    com.inhuasoft.smart.server.FragmentsAvailable CHAT -> n
    int[] $SWITCH_TABLE$com$inhuasoft$smart$server$FragmentsAvailable -> o
    com.inhuasoft.smart.server.FragmentsAvailable[] ENUM$VALUES -> p
    boolean shouldAnimate() -> a
    boolean isRightOf(com.inhuasoft.smart.server.FragmentsAvailable) -> a
    boolean shouldAddItselfToTheRightOf(com.inhuasoft.smart.server.FragmentsAvailable) -> b
    com.inhuasoft.smart.server.FragmentsAvailable[] values() -> values
    com.inhuasoft.smart.server.FragmentsAvailable valueOf(java.lang.String) -> valueOf
    int[] $SWITCH_TABLE$com$inhuasoft$smart$server$FragmentsAvailable() -> b
com.inhuasoft.smart.server.HistoryDetailFragment -> com.inhuasoft.smart.server.ch:
    android.widget.ImageView dialBack -> a
    android.widget.ImageView chat -> b
    android.widget.ImageView addToContacts -> c
    android.view.View view -> d
    android.widget.TextView contactName -> e
    android.widget.TextView contactAddress -> f
    android.widget.TextView callDirection -> g
    android.widget.TextView time -> h
    android.widget.TextView date -> i
    java.lang.String sipUri -> W
    java.lang.String displayName -> X
    java.lang.String pictureUri -> Y
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void displayHistory(java.lang.String,java.lang.String,java.lang.String) -> a
    void changeDisplayedHistory(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void onResume() -> r
    void onClick(android.view.View) -> onClick
    java.lang.String timestampToHumanDate(java.lang.String) -> a
com.inhuasoft.smart.server.HistoryFragment -> com.inhuasoft.smart.server.ci:
    android.os.Handler mHandler -> a
    android.widget.ExpandableListView historyList -> b
    android.view.LayoutInflater mInflater -> c
    android.widget.TextView allCalls -> d
    android.widget.TextView missedCalls -> e
    android.widget.TextView edit -> f
    android.widget.TextView ok -> g
    android.widget.TextView deleteAll -> h
    android.widget.TextView noCallHistory -> i
    android.widget.TextView noMissedCallHistory -> W
    boolean onlyDisplayMissedCalls -> X
    boolean isEditMode -> Y
    android.util.SparseArray mLogs -> Z
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    boolean hideHistoryListAndDisplayMessageIfEmpty() -> a
    void onResume() -> r
    void initLogsLists(java.util.List) -> a
    void initMissedLogsLists(java.util.List) -> b
    void expandAllGroups() -> b
    java.lang.String getCorrespondentDisplayName(org.linphone.core.LinphoneCallLog) -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void onClick(android.view.View) -> onClick
    boolean onGroupClick(android.widget.ExpandableListView,android.view.View,int,long) -> onGroupClick
    boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long) -> onChildClick
    void hideDeleteAllButton() -> c
    void showDeleteAllButton() -> A
    boolean access$0(com.inhuasoft.smart.server.HistoryFragment) -> a
    android.util.SparseArray access$1(com.inhuasoft.smart.server.HistoryFragment) -> b
    android.view.LayoutInflater access$2(com.inhuasoft.smart.server.HistoryFragment) -> c
    boolean access$3(com.inhuasoft.smart.server.HistoryFragment) -> d
    java.lang.String access$4(com.inhuasoft.smart.server.HistoryFragment,org.linphone.core.LinphoneCallLog) -> a
    android.widget.ExpandableListView access$5(com.inhuasoft.smart.server.HistoryFragment) -> e
    android.widget.TextView access$6(com.inhuasoft.smart.server.HistoryFragment) -> f
com.inhuasoft.smart.server.HistoryFragment$1 -> com.inhuasoft.smart.server.cj:
    com.inhuasoft.smart.server.HistoryFragment this$0 -> a
    void run() -> run
com.inhuasoft.smart.server.HistoryFragment$2 -> com.inhuasoft.smart.server.ck:
    com.inhuasoft.smart.server.HistoryFragment this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.inhuasoft.smart.server.HistoryFragment$3 -> com.inhuasoft.smart.server.cl:
    com.inhuasoft.smart.server.HistoryFragment this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.inhuasoft.smart.server.HistoryFragment$CallHistoryAdapter -> com.inhuasoft.smart.server.cm:
    android.graphics.Bitmap missedCall -> b
    android.graphics.Bitmap outgoingCall -> c
    android.graphics.Bitmap incomingCall -> d
    com.inhuasoft.smart.server.HistoryFragment this$0 -> a
    java.lang.Object getChild(int,int) -> getChild
    long getChildId(int,int) -> getChildId
    android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup) -> getChildView
    int getChildrenCount(int) -> getChildrenCount
    java.lang.Object getGroup(int) -> getGroup
    int getGroupCount() -> getGroupCount
    long getGroupId(int) -> getGroupId
    android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup) -> getGroupView
    boolean hasStableIds() -> hasStableIds
    boolean isChildSelectable(int,int) -> isChildSelectable
com.inhuasoft.smart.server.HistoryFragment$CallHistoryAdapter$1 -> com.inhuasoft.smart.server.cn:
    com.inhuasoft.smart.server.HistoryFragment$CallHistoryAdapter this$1 -> a
    org.linphone.core.LinphoneAddress val$address -> b
    org.linphone.core.LinphoneCallLog val$log -> c
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.HistorySimpleFragment -> com.inhuasoft.smart.server.co:
    android.widget.ListView historyList -> a
    android.view.LayoutInflater mInflater -> b
    android.widget.TextView allCalls -> c
    android.widget.TextView missedCalls -> d
    android.widget.TextView edit -> e
    android.widget.TextView ok -> f
    android.widget.TextView deleteAll -> g
    android.widget.TextView noCallHistory -> h
    android.widget.TextView noMissedCallHistory -> i
    boolean onlyDisplayMissedCalls -> W
    boolean isEditMode -> X
    java.util.List mLogs -> Y
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void removeNotMissedCallsFromLogs() -> a
    boolean hideHistoryListAndDisplayMessageIfEmpty() -> b
    void onResume() -> r
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void onClick(android.view.View) -> onClick
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void hideDeleteAllButton() -> c
    void showDeleteAllButton() -> A
    boolean access$0(com.inhuasoft.smart.server.HistorySimpleFragment) -> a
    java.util.List access$1(com.inhuasoft.smart.server.HistorySimpleFragment) -> b
    android.view.LayoutInflater access$2(com.inhuasoft.smart.server.HistorySimpleFragment) -> c
    boolean access$3(com.inhuasoft.smart.server.HistorySimpleFragment) -> d
    android.widget.TextView access$4(com.inhuasoft.smart.server.HistorySimpleFragment) -> e
com.inhuasoft.smart.server.HistorySimpleFragment$1 -> com.inhuasoft.smart.server.cp:
    com.inhuasoft.smart.server.HistorySimpleFragment this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.inhuasoft.smart.server.HistorySimpleFragment$2 -> com.inhuasoft.smart.server.cq:
    com.inhuasoft.smart.server.HistorySimpleFragment this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.inhuasoft.smart.server.HistorySimpleFragment$CallHistoryAdapter -> com.inhuasoft.smart.server.cr:
    android.graphics.Bitmap missedCall -> b
    android.graphics.Bitmap outgoingCall -> c
    android.graphics.Bitmap incomingCall -> d
    com.inhuasoft.smart.server.HistorySimpleFragment this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    java.lang.String timestampToHumanDate(java.util.Calendar) -> a
    boolean isSameDay(java.util.Calendar,java.util.Calendar) -> a
    boolean isToday(java.util.Calendar) -> b
    boolean isYesterday(java.util.Calendar) -> c
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.inhuasoft.smart.server.HistorySimpleFragment$CallHistoryAdapter$1 -> com.inhuasoft.smart.server.cs:
    com.inhuasoft.smart.server.HistorySimpleFragment$CallHistoryAdapter this$1 -> a
    org.linphone.core.LinphoneAddress val$address -> b
    org.linphone.core.LinphoneCallLog val$log -> c
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.InCallActivity -> com.inhuasoft.smart.server.InCallActivity:
    com.inhuasoft.smart.server.InCallActivity instance -> m
    android.os.Handler mHandler -> n
    android.os.Handler mControlsHandler -> o
    java.lang.Runnable mControls -> p
    com.inhuasoft.smart.server.AudioCallFragment audioCallFragment -> q
    com.inhuasoft.smart.server.VideoCallFragment videoCallFragment -> r
    boolean isSpeakerEnabled -> s
    boolean isMicMuted -> t
    boolean isVideoEnabled -> u
    boolean isTransferAllowed -> v
    int cameraNumber -> w
    android.os.CountDownTimer timer -> x
    com.inhuasoft.smart.server.InCallActivity$AcceptCallUpdateDialog callUpdateDialog -> y
    boolean isVideoCallPaused -> z
    android.widget.TableLayout callsList -> A
    android.view.LayoutInflater inflater -> B
    android.view.ViewGroup container -> C
    boolean isConferenceRunning -> D
    boolean showCallListInVideo -> E
    com.inhuasoft.smart.server.InCallActivity instance() -> f
    boolean isInstanciated() -> g
    void onCreate(android.os.Bundle) -> onCreate
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void initUI() -> l
    void onClick(android.view.View) -> onClick
    void displayCustomToast(java.lang.String,int) -> a
    void switchVideo(boolean,boolean) -> a
    void showAudioView() -> m
    void showVideoView() -> n
    void replaceFragmentVideoByAudio() -> o
    void replaceFragmentAudioByVideo() -> p
    void toggleMicro() -> q
    void toggleSpeaker() -> r
    void pauseOrResumeCall() -> s
    void pauseOrResumeCall(org.linphone.core.LinphoneCall) -> a
    void hangUp() -> t
    void enterConference() -> u
    void pauseOrResumeConference() -> h
    void setCallControlsVisibleAndRemoveCallbacks() -> i
    void goBackToDialer() -> j
    void goBackToDialerAndDisplayTransferButton() -> v
    void acceptCallUpdate(boolean) -> b
    void startIncomingCallActivity() -> k
    void onCallStateChanged(org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCall$State,java.lang.String) -> a
    void showAcceptCallUpdateDialog() -> w
    void onCallEncryptionChanged(org.linphone.core.LinphoneCall,boolean,java.lang.String) -> a
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void bindAudioFragment(com.inhuasoft.smart.server.AudioCallFragment) -> a
    void bindVideoFragment(com.inhuasoft.smart.server.VideoCallFragment) -> a
    void displayConferenceHeader() -> x
    void displayCall(android.content.res.Resources,org.linphone.core.LinphoneCall,int) -> a
    void setContactName(android.widget.LinearLayout,org.linphone.core.LinphoneAddress,java.lang.String,android.content.res.Resources) -> a
    boolean displayCallStatusIconAndReturnCallPaused(android.widget.LinearLayout,org.linphone.core.LinphoneCall) -> a
    void displayOrHideContactPicture(android.widget.LinearLayout,android.net.Uri,boolean) -> a
    void setRowBackground(android.widget.LinearLayout,int) -> a
    void registerCallDurationTimer(android.view.View,org.linphone.core.LinphoneCall) -> a
    void refreshCallList(android.content.res.Resources) -> a
    void access$0(com.inhuasoft.smart.server.InCallActivity,boolean) -> a
    void access$1(com.inhuasoft.smart.server.InCallActivity,com.inhuasoft.smart.server.InCallActivity$AcceptCallUpdateDialog) -> a
    com.inhuasoft.smart.server.InCallActivity$AcceptCallUpdateDialog access$2(com.inhuasoft.smart.server.InCallActivity) -> a
    void access$3(com.inhuasoft.smart.server.InCallActivity) -> b
    void access$4(com.inhuasoft.smart.server.InCallActivity) -> c
    void access$5(com.inhuasoft.smart.server.InCallActivity) -> d
    void access$6(com.inhuasoft.smart.server.InCallActivity,android.os.CountDownTimer) -> a
    android.widget.TableLayout access$7(com.inhuasoft.smart.server.InCallActivity) -> e
com.inhuasoft.smart.server.InCallActivity$1 -> com.inhuasoft.smart.server.ct:
    com.inhuasoft.smart.server.InCallActivity this$0 -> a
    java.lang.String val$message -> b
    int val$duration -> c
    void run() -> run
com.inhuasoft.smart.server.InCallActivity$2 -> com.inhuasoft.smart.server.cu:
    com.inhuasoft.smart.server.InCallActivity this$0 -> a
    boolean val$displayVideo -> b
    boolean val$isInitiator -> c
    org.linphone.core.LinphoneCall val$call -> d
    void run() -> run
com.inhuasoft.smart.server.InCallActivity$3 -> com.inhuasoft.smart.server.cv:
    com.inhuasoft.smart.server.InCallActivity this$0 -> a
    void run() -> run
com.inhuasoft.smart.server.InCallActivity$4 -> com.inhuasoft.smart.server.cw:
    com.inhuasoft.smart.server.InCallActivity this$0 -> a
    void run() -> run
    com.inhuasoft.smart.server.InCallActivity access$0(com.inhuasoft.smart.server.InCallActivity$4) -> a
com.inhuasoft.smart.server.InCallActivity$4$1 -> com.inhuasoft.smart.server.cx:
    com.inhuasoft.smart.server.InCallActivity$4 this$1 -> a
    void onTick(long) -> onTick
    void onFinish() -> onFinish
com.inhuasoft.smart.server.InCallActivity$5 -> com.inhuasoft.smart.server.cy:
    com.inhuasoft.smart.server.InCallActivity this$0 -> a
    void run() -> run
com.inhuasoft.smart.server.InCallActivity$6 -> com.inhuasoft.smart.server.cz:
    com.inhuasoft.smart.server.InCallActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.InCallActivity$AcceptCallUpdateDialog -> com.inhuasoft.smart.server.da:
    com.inhuasoft.smart.server.InCallActivity this$0 -> W
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onCancel(android.content.DialogInterface) -> onCancel
    com.inhuasoft.smart.server.InCallActivity access$0(com.inhuasoft.smart.server.InCallActivity$AcceptCallUpdateDialog) -> a
com.inhuasoft.smart.server.InCallActivity$AcceptCallUpdateDialog$1 -> com.inhuasoft.smart.server.db:
    com.inhuasoft.smart.server.InCallActivity$AcceptCallUpdateDialog this$1 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.InCallActivity$AcceptCallUpdateDialog$2 -> com.inhuasoft.smart.server.dc:
    com.inhuasoft.smart.server.InCallActivity$AcceptCallUpdateDialog this$1 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.IncomingCallActivity -> com.inhuasoft.smart.server.IncomingCallActivity:
    com.inhuasoft.smart.server.IncomingCallActivity instance -> a
    android.widget.TextView mNameView -> b
    android.widget.TextView mNumberView -> c
    com.inhuasoft.smart.server.ui.AvatarWithShadow mPictureView -> d
    org.linphone.core.LinphoneCall mCall -> e
    com.inhuasoft.smart.server.ui.LinphoneSliders mIncomingCallWidget -> f
    com.inhuasoft.smart.server.IncomingCallActivity instance() -> a
    boolean isInstanciated() -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onCallStateChanged(org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCall$State,java.lang.String) -> a
    void decline() -> e
    void answer() -> f
    void onLeftHandleTriggered() -> c
    void onRightHandleTriggered() -> d
com.inhuasoft.smart.server.KeepAliveHandler -> com.inhuasoft.smart.server.KeepAliveHandler:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.inhuasoft.smart.server.KeepAliveReceiver -> com.inhuasoft.smart.server.dd:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.inhuasoft.smart.server.LinphoneActivity -> com.inhuasoft.smart.server.LinphoneActivity:
    com.inhuasoft.smart.server.LinphoneActivity instance -> m
    com.inhuasoft.smart.server.StatusFragment statusFragment -> n
    android.widget.TextView missedCalls -> o
    android.widget.TextView missedChats -> p
    android.widget.ImageView dialer -> q
    android.widget.LinearLayout menu -> r
    android.widget.LinearLayout mark -> s
    android.widget.RelativeLayout contacts -> t
    android.widget.RelativeLayout history -> u
    android.widget.RelativeLayout settings -> v
    android.widget.RelativeLayout chat -> w
    android.widget.RelativeLayout aboutChat -> x
    android.widget.RelativeLayout aboutSettings -> y
    com.inhuasoft.smart.server.FragmentsAvailable currentFragment -> z
    com.inhuasoft.smart.server.FragmentsAvailable nextFragment -> A
    java.util.List fragmentsHistory -> B
    android.support.v4.app.Fragment dialerFragment -> C
    android.support.v4.app.Fragment messageListenerFragment -> D
    android.support.v4.app.Fragment messageListFragment -> E
    android.support.v4.app.Fragment friendStatusListenerFragment -> F
    android.support.v4.app.Fragment$SavedState dialerSavedState -> G
    boolean preferLinphoneContacts -> H
    boolean isAnimationDisabled -> I
    boolean isContactPresenceDisabled -> J
    android.os.Handler mHandler -> K
    java.util.List contactList -> L
    java.util.List sipContactList -> M
    android.database.Cursor contactCursor -> N
    android.database.Cursor sipContactCursor -> O
    android.view.OrientationEventListener mOrientationHelper -> P
    int mAlwaysChangingPhoneAngle -> Q
    com.inhuasoft.smart.server.LinphoneActivity$AcceptNewFriendDialog acceptNewFriendDialog -> R
    int[] $SWITCH_TABLE$com$inhuasoft$smart$server$FragmentsAvailable -> S
    boolean isInstanciated() -> f
    com.inhuasoft.smart.server.LinphoneActivity instance() -> g
    void onCreate(android.os.Bundle) -> onCreate
    void initButtons() -> B
    boolean isTablet() -> C
    void hideStatusBar() -> h
    void showStatusBar() -> i
    void changeCurrentFragment(com.inhuasoft.smart.server.FragmentsAvailable,android.os.Bundle) -> a
    void changeCurrentFragment(com.inhuasoft.smart.server.FragmentsAvailable,android.os.Bundle,boolean) -> a
    void updateAnimationsState() -> D
    boolean isAnimationDisabled() -> j
    boolean isContactPresenceDisabled() -> k
    void changeFragment(android.support.v4.app.Fragment,com.inhuasoft.smart.server.FragmentsAvailable,boolean) -> a
    void changeFragmentForTablets(android.support.v4.app.Fragment,com.inhuasoft.smart.server.FragmentsAvailable,boolean) -> b
    void displayHistoryDetail(java.lang.String,org.linphone.core.LinphoneCallLog) -> a
    java.lang.String secondsToDisplayableString(int) -> c
    void displayContact(com.inhuasoft.smart.server.Contact,boolean) -> a
    void displayContacts(boolean) -> b
    void displayContactsForEdition(java.lang.String) -> a
    void displayAbout() -> l
    void displayChat(java.lang.String) -> b
    void onClick(android.view.View) -> onClick
    void resetSelection() -> E
    void selectMenu(com.inhuasoft.smart.server.FragmentsAvailable) -> a
    void updateDialerFragment(com.inhuasoft.smart.server.DialerFragment) -> a
    void updateChatFragment(com.inhuasoft.smart.server.ChatFragment) -> a
    void updateChatListFragment(com.inhuasoft.smart.server.ChatListFragment) -> a
    void hideMenu(boolean) -> c
    void updateStatusFragment(com.inhuasoft.smart.server.StatusFragment) -> a
    void displaySettings() -> m
    void displayAccountSettings(int) -> b
    com.inhuasoft.smart.server.StatusFragment getStatusFragment() -> n
    java.util.List getChatList() -> o
    java.util.List getDraftChatList() -> p
    java.util.List getChatMessages(java.lang.String) -> c
    void removeFromChatList(java.lang.String) -> d
    void removeFromDrafts(java.lang.String) -> e
    void onMessageReceived(org.linphone.core.LinphoneAddress,org.linphone.core.LinphoneChatMessage,int) -> a
    void updateMissedChatCount() -> q
    int onMessageSent(java.lang.String,java.lang.String) -> a
    int onMessageSent(java.lang.String,android.graphics.Bitmap,java.lang.String) -> a
    void onMessageStateChanged(java.lang.String,java.lang.String,int) -> a
    void onImageMessageStateChanged(java.lang.String,int,int) -> a
    void onRegistrationStateChanged(org.linphone.core.LinphoneCore$RegistrationState) -> a
    void displayMissedCalls(int) -> d
    void displayMissedChats(int) -> e
    void onCallStateChanged(org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCall$State,java.lang.String) -> a
    void displayCustomToast(java.lang.String,int) -> a
    void setAddresGoToDialerAndCall(java.lang.String,java.lang.String,android.net.Uri) -> a
    void startVideoActivity(org.linphone.core.LinphoneCall) -> a
    void startIncallActivity(org.linphone.core.LinphoneCall) -> b
    void startOrientationSensor() -> F
    java.util.List getAllContacts() -> r
    java.util.List getSIPContacts() -> s
    android.database.Cursor getAllContactsCursor() -> t
    android.database.Cursor getSIPContactsCursor() -> u
    void setLinphoneContactsPrefered(boolean) -> d
    boolean isLinphoneContactsPrefered() -> v
    void onNewSubscriptionRequestReceived(org.linphone.core.LinphoneFriend,java.lang.String) -> a
    com.inhuasoft.smart.server.Contact findContactWithSipAddress(java.lang.String) -> f
    void onNotifyPresenceReceived(org.linphone.core.LinphoneFriend) -> a
    boolean newFriend(com.inhuasoft.smart.server.Contact,java.lang.String) -> a
    void acceptNewFriend(com.inhuasoft.smart.server.Contact,java.lang.String,boolean) -> a
    boolean removeFriend(com.inhuasoft.smart.server.Contact,java.lang.String) -> b
    void searchFriendAndAddToContact(com.inhuasoft.smart.server.Contact) -> c
    void removeContactFromLists(com.inhuasoft.smart.server.Contact) -> a
    void prepareContactsInBackground() -> w
    void initInCallMenuLayout(boolean) -> e
    void resetClassicMenuLayoutAndGoBackToCallIfStillRunning() -> x
    com.inhuasoft.smart.server.ChatStorage getChatStorage() -> y
    void addContact(java.lang.String,java.lang.String) -> b
    void editContact(com.inhuasoft.smart.server.Contact) -> b
    void editContact(com.inhuasoft.smart.server.Contact,java.lang.String) -> c
    void exit() -> z
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void unbindDrawables(android.view.View) -> a
    void onNewIntent(android.content.Intent) -> onNewIntent
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    int access$0(com.inhuasoft.smart.server.LinphoneActivity) -> a
    void access$1(com.inhuasoft.smart.server.LinphoneActivity,int) -> a
    void access$2(com.inhuasoft.smart.server.LinphoneActivity,com.inhuasoft.smart.server.Contact,java.lang.String,boolean) -> a
    int[] $SWITCH_TABLE$com$inhuasoft$smart$server$FragmentsAvailable() -> A
    android.widget.TextView access$4(com.inhuasoft.smart.server.LinphoneActivity) -> b
    boolean access$5(com.inhuasoft.smart.server.LinphoneActivity) -> c
    android.widget.TextView access$6(com.inhuasoft.smart.server.LinphoneActivity) -> d
    android.database.Cursor access$7(com.inhuasoft.smart.server.LinphoneActivity) -> e
    boolean access$8(com.inhuasoft.smart.server.LinphoneActivity) -> f
    void access$9(com.inhuasoft.smart.server.LinphoneActivity,com.inhuasoft.smart.server.Contact) -> a
    java.util.List access$10(com.inhuasoft.smart.server.LinphoneActivity) -> g
    android.database.Cursor access$11(com.inhuasoft.smart.server.LinphoneActivity) -> h
    java.util.List access$12(com.inhuasoft.smart.server.LinphoneActivity) -> i
    android.support.v4.app.Fragment access$13(com.inhuasoft.smart.server.LinphoneActivity) -> j
com.inhuasoft.smart.server.LinphoneActivity$1 -> com.inhuasoft.smart.server.de:
    com.inhuasoft.smart.server.LinphoneActivity this$0 -> a
    int val$missedCallsCount -> b
    void run() -> run
com.inhuasoft.smart.server.LinphoneActivity$2 -> com.inhuasoft.smart.server.df:
    com.inhuasoft.smart.server.LinphoneActivity this$0 -> a
    int val$missedChatCount -> b
    void run() -> run
com.inhuasoft.smart.server.LinphoneActivity$3 -> com.inhuasoft.smart.server.dg:
    com.inhuasoft.smart.server.LinphoneActivity this$0 -> a
    java.lang.String val$message -> b
    int val$duration -> c
    void run() -> run
com.inhuasoft.smart.server.LinphoneActivity$4 -> com.inhuasoft.smart.server.dh:
    com.inhuasoft.smart.server.LinphoneActivity this$0 -> a
    void run() -> run
com.inhuasoft.smart.server.LinphoneActivity$5 -> com.inhuasoft.smart.server.di:
    com.inhuasoft.smart.server.LinphoneActivity this$0 -> a
    void run() -> run
com.inhuasoft.smart.server.LinphoneActivity$AcceptNewFriendDialog -> com.inhuasoft.smart.server.dj:
    com.inhuasoft.smart.server.Contact contact -> X
    java.lang.String sipUri -> Y
    com.inhuasoft.smart.server.LinphoneActivity this$0 -> W
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    com.inhuasoft.smart.server.Contact access$0(com.inhuasoft.smart.server.LinphoneActivity$AcceptNewFriendDialog) -> a
    java.lang.String access$1(com.inhuasoft.smart.server.LinphoneActivity$AcceptNewFriendDialog) -> b
    com.inhuasoft.smart.server.LinphoneActivity access$2(com.inhuasoft.smart.server.LinphoneActivity$AcceptNewFriendDialog) -> c
com.inhuasoft.smart.server.LinphoneActivity$AcceptNewFriendDialog$1 -> com.inhuasoft.smart.server.dk:
    com.inhuasoft.smart.server.LinphoneActivity$AcceptNewFriendDialog this$1 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.LinphoneActivity$AcceptNewFriendDialog$2 -> com.inhuasoft.smart.server.dl:
    com.inhuasoft.smart.server.LinphoneActivity$AcceptNewFriendDialog this$1 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.LinphoneActivity$LocalOrientationEventListener -> com.inhuasoft.smart.server.dm:
    com.inhuasoft.smart.server.LinphoneActivity this$0 -> a
    void onOrientationChanged(int) -> onOrientationChanged
com.inhuasoft.smart.server.LinphoneLauncherActivity -> com.inhuasoft.smart.server.LinphoneLauncherActivity:
    android.os.Handler mHandler -> a
    com.inhuasoft.smart.server.LinphoneLauncherActivity$ServiceWaitThread mThread -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onServiceReady() -> a
    android.os.Handler access$0(com.inhuasoft.smart.server.LinphoneLauncherActivity) -> a
    void access$1(com.inhuasoft.smart.server.LinphoneLauncherActivity,com.inhuasoft.smart.server.LinphoneLauncherActivity$ServiceWaitThread) -> a
com.inhuasoft.smart.server.LinphoneLauncherActivity$1 -> com.inhuasoft.smart.server.dn:
    com.inhuasoft.smart.server.LinphoneLauncherActivity this$0 -> a
    java.lang.Class val$classToStart -> b
    void run() -> run
com.inhuasoft.smart.server.LinphoneLauncherActivity$ServiceWaitThread -> com.inhuasoft.smart.server.do:
    com.inhuasoft.smart.server.LinphoneLauncherActivity this$0 -> a
    void run() -> run
    com.inhuasoft.smart.server.LinphoneLauncherActivity access$1(com.inhuasoft.smart.server.LinphoneLauncherActivity$ServiceWaitThread) -> a
com.inhuasoft.smart.server.LinphoneLauncherActivity$ServiceWaitThread$1 -> com.inhuasoft.smart.server.dp:
    com.inhuasoft.smart.server.LinphoneLauncherActivity$ServiceWaitThread this$1 -> a
    void run() -> run
com.inhuasoft.smart.server.LinphoneManager -> com.inhuasoft.smart.server.dq:
    com.inhuasoft.smart.server.LinphoneManager instance -> c
    android.content.Context mServiceContext -> d
    android.media.AudioManager mAudioManager -> e
    android.os.PowerManager mPowerManager -> f
    android.content.res.Resources mR -> g
    com.inhuasoft.smart.server.LinphonePreferences mPrefs -> h
    org.linphone.core.LinphoneCore mLc -> i
    java.lang.String lastLcStatusMessage -> j
    java.lang.String basePath -> k
    boolean sExited -> l
    boolean mAudioFocused -> m
    int mLastNetworkType -> n
    android.net.ConnectivityManager mConnectivityManager -> o
    android.os.Handler mHandler -> p
    android.os.PowerManager$WakeLock mIncallWakeLock -> q
    java.lang.String wizardLoginViewDomain -> a
    java.util.List simpleListeners -> r
    java.lang.String mLPConfigXsd -> s
    java.lang.String mLinphoneFactoryConfigFile -> t
    java.lang.String mLinphoneRootCaFile -> u
    java.lang.String mLinphoneConfigFile -> b
    java.lang.String mRingSoundFile -> v
    java.lang.String mRingbackSoundFile -> w
    java.lang.String mPauseSoundFile -> x
    java.lang.String mChatDatabaseFile -> y
    java.lang.String mErrorToneFile -> z
    java.util.Timer mTimer -> A
    android.content.BroadcastReceiver mKeepAliveReceiver -> B
    com.inhuasoft.smart.server.LinphoneSimpleListener$ConnectivityChangedListener connectivityListener -> C
    com.inhuasoft.smart.server.LinphoneManager$ListenerDispatcher mListenerDispatcher -> D
    org.linphone.core.LinphoneCall ringingCall -> E
    android.media.MediaPlayer mRingerPlayer -> F
    android.os.Vibrator mVibrator -> G
    com.inhuasoft.smart.server.LinphoneSimpleListener$LinphoneOnDTMFReceivedListener dtmfReceivedListener -> H
    int savedMaxCallWhileGsmIncall -> I
    boolean isRinging -> J
    boolean disableRinging -> K
    boolean sLastProximitySensorValueNearby -> L
    java.util.Set sProximityDependentActivities -> M
    android.hardware.SensorEventListener sProximitySensorListener -> N
    com.inhuasoft.smart.server.LinphoneSimpleListener$LinphoneOnComposingReceivedListener composingReceivedListener -> O
    void addListener(com.inhuasoft.smart.server.LinphoneSimpleListener) -> a
    void removeListener(com.inhuasoft.smart.server.LinphoneSimpleListener) -> b
    void routeAudioToSpeakerHelper(boolean) -> c
    void audioStateChanged(com.inhuasoft.smart.server.LinphoneSimpleListener$LinphoneOnAudioChangedListener$AudioState) -> a
    void routeAudioToSpeaker() -> a
    java.lang.String getUserAgent() -> b
    void routeAudioToReceiver() -> c
    com.inhuasoft.smart.server.LinphoneManager createAndStart(android.content.Context,com.inhuasoft.smart.server.LinphoneSimpleListener$LinphoneServiceListener) -> a
    boolean isPresenceModelActivitySet() -> t
    void changeStatusToOnline() -> d
    void changeStatusToOnThePhone() -> e
    void changeStatusToOffline() -> f
    com.inhuasoft.smart.server.LinphoneManager getInstance() -> g
    org.linphone.core.LinphoneCore getLc() -> h
    void newOutgoingCall(com.inhuasoft.smart.server.LinphoneManager$AddressType) -> a
    void newOutgoingCall(java.lang.String,java.lang.String) -> a
    void resetCameraFromPreferences() -> u
    void enableCamera(org.linphone.core.LinphoneCall,boolean) -> a
    void playDtmf(android.content.ContentResolver,char) -> a
    void terminateCall() -> i
    void initTunnelFromConf() -> j
    boolean isTunnelNeeded(android.net.NetworkInfo) -> a
    void manageTunnelServer(android.net.NetworkInfo) -> b
    void startLibLinphone(android.content.Context) -> a
    void initLiblinphone() -> v
    void copyAssetsFromPackage() -> w
    void copyIfNotExist(int,java.lang.String) -> a
    void copyFromPackage(int,java.lang.String) -> b
    void updateNetworkReachability() -> k
    void doDestroy() -> x
    void destroy() -> l
    java.lang.String getString(int) -> b
    void connectivityChanged(android.net.ConnectivityManager,boolean) -> a
    void displayWarning(org.linphone.core.LinphoneCore,java.lang.String) -> displayWarning
    void authInfoRequested(org.linphone.core.LinphoneCore,java.lang.String,java.lang.String,java.lang.String) -> authInfoRequested
    void displayMessage(org.linphone.core.LinphoneCore,java.lang.String) -> displayMessage
    void show(org.linphone.core.LinphoneCore) -> show
    void newSubscriptionRequest(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneFriend,java.lang.String) -> newSubscriptionRequest
    void notifyPresenceReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneFriend) -> notifyPresenceReceived
    void textReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneChatRoom,org.linphone.core.LinphoneAddress,java.lang.String) -> textReceived
    void dtmfReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,int) -> dtmfReceived
    void messageReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneChatRoom,org.linphone.core.LinphoneChatMessage) -> messageReceived
    void displayStatus(org.linphone.core.LinphoneCore,java.lang.String) -> displayStatus
    void globalState(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCore$GlobalState,java.lang.String) -> globalState
    void registrationState(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneProxyConfig,org.linphone.core.LinphoneCore$RegistrationState,java.lang.String) -> registrationState
    void preventSIPCalls() -> y
    void allowSIPCalls() -> z
    void setGsmIdle(boolean) -> a
    android.content.Context getContext() -> m
    void callState(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCall$State,java.lang.String) -> callState
    void callStatsUpdated(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCallStats) -> callStatsUpdated
    void callEncryptionChanged(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,boolean,java.lang.String) -> callEncryptionChanged
    void ecCalibrationStatus(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCore$EcCalibratorStatus,int,java.lang.Object) -> ecCalibrationStatus
    void startEcCalibration(com.inhuasoft.smart.server.LinphoneManager$EcCalibrationListener) -> a
    void requestAudioFocus() -> A
    void startRinging() -> B
    void stopRinging() -> C
    boolean reinviteWithVideo() -> n
    boolean addVideo() -> o
    boolean acceptCallIfIncomingPending() -> p
    boolean acceptCallWithParams(org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCallParams) -> a
    void adjustVolume(int) -> a
    java.lang.Boolean isProximitySensorNearby(android.hardware.SensorEvent) -> a
    void simulateProximitySensorNearby(android.app.Activity,boolean) -> a
    void proximityNearbyChanged() -> D
    void startProximitySensorForActivity(android.app.Activity) -> a
    void stopProximitySensorForActivity(android.app.Activity) -> b
    org.linphone.core.LinphoneCore getLcIfManagerNotDestroyedOrNull() -> q
    java.util.List getSimpleListeners(java.lang.Class) -> a
    boolean isInstanciated() -> r
    void notifyReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,org.linphone.core.LinphoneAddress,byte[]) -> notifyReceived
    void transferState(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCall$State) -> transferState
    void infoReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,org.linphone.core.LinphoneInfoMessage) -> infoReceived
    void subscriptionStateChanged(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneEvent,org.linphone.core.SubscriptionState) -> subscriptionStateChanged
    void notifyReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneEvent,java.lang.String,org.linphone.core.LinphoneContent) -> notifyReceived
    void publishStateChanged(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneEvent,org.linphone.core.PublishState) -> publishStateChanged
    void setOnComposingReceivedListener(com.inhuasoft.smart.server.LinphoneSimpleListener$LinphoneOnComposingReceivedListener) -> a
    void isComposingReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneChatRoom) -> isComposingReceived
    void configuringStatus(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCore$RemoteProvisioningState,java.lang.String) -> configuringStatus
    void access$0(boolean) -> b
    void access$1() -> s
    java.util.List access$2(com.inhuasoft.smart.server.LinphoneManager,java.lang.Class) -> a
    org.linphone.core.LinphoneCore access$3(com.inhuasoft.smart.server.LinphoneManager) -> a
    void access$4(com.inhuasoft.smart.server.LinphoneManager) -> b
com.inhuasoft.smart.server.LinphoneManager$1 -> com.inhuasoft.smart.server.dr:
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
com.inhuasoft.smart.server.LinphoneManager$2 -> com.inhuasoft.smart.server.ds:
    com.inhuasoft.smart.server.LinphoneManager this$0 -> a
    void run() -> run
com.inhuasoft.smart.server.LinphoneManager$3 -> com.inhuasoft.smart.server.dt:
    com.inhuasoft.smart.server.LinphoneManager this$0 -> a
    void run() -> run
com.inhuasoft.smart.server.LinphoneManager$4 -> com.inhuasoft.smart.server.du:
    com.inhuasoft.smart.server.LinphoneManager this$0 -> a
    void run() -> run
com.inhuasoft.smart.server.LinphoneManager$AddressType -> com.inhuasoft.smart.server.dv:
    void setText(java.lang.CharSequence) -> setText
    java.lang.CharSequence getText() -> getText
    void setDisplayedName(java.lang.String) -> setDisplayedName
    java.lang.String getDisplayedName() -> getDisplayedName
com.inhuasoft.smart.server.LinphoneManager$EcCalibrationListener -> com.inhuasoft.smart.server.dw:
    void onEcCalibrationStatus(org.linphone.core.LinphoneCore$EcCalibratorStatus,int) -> a
com.inhuasoft.smart.server.LinphoneManager$ListenerDispatcher -> com.inhuasoft.smart.server.dx:
    com.inhuasoft.smart.server.LinphoneSimpleListener$LinphoneServiceListener serviceListener -> b
    com.inhuasoft.smart.server.LinphoneManager this$0 -> a
    void onCallEncryptionChanged(org.linphone.core.LinphoneCall,boolean,java.lang.String) -> a
    void onCallStateChanged(org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCall$State,java.lang.String) -> a
    void onDisplayStatus(java.lang.String) -> a
    void onGlobalStateChanged(org.linphone.core.LinphoneCore$GlobalState,java.lang.String) -> a
    void onRegistrationStateChanged(org.linphone.core.LinphoneCore$RegistrationState,java.lang.String) -> a
    void tryingNewOutgoingCallButCannotGetCallParameters() -> a
    void tryingNewOutgoingCallButWrongDestinationAddress() -> b
com.inhuasoft.smart.server.LinphonePreferences -> com.inhuasoft.smart.server.dy:
    com.inhuasoft.smart.server.LinphonePreferences instance -> a
    android.content.Context mContext -> b
    com.inhuasoft.smart.server.LinphonePreferences instance() -> a
    java.lang.String getString(int) -> u
    org.linphone.core.LinphoneCore getLc() -> P
    org.linphone.core.LpConfig getConfig() -> b
    void removePreviousVersionAuthInfoRemoval() -> c
    boolean isFirstLaunch() -> d
    void firstLaunchSuccessful() -> e
    java.lang.String getRingtone(java.lang.String) -> a
    boolean isReg() -> f
    void setReg(boolean) -> a
    boolean isLogin() -> g
    void setLogin(boolean) -> b
    void setUserSip(java.lang.String) -> b
    boolean shouldAutomaticallyAcceptFriendsRequests() -> h
    org.linphone.core.LinphoneProxyConfig getProxyConfig(int) -> v
    org.linphone.core.LinphoneAuthInfo getAuthInfo(int) -> w
    org.linphone.core.LinphoneAuthInfo getClonedAuthInfo(int) -> x
    void saveAuthInfo(org.linphone.core.LinphoneAuthInfo) -> a
    void CreatedAccount(java.lang.String,java.lang.String,java.lang.String) -> a
    void setAccountTransport(int,java.lang.String) -> a
    org.linphone.core.LinphoneAddress$TransportType getAccountTransport(int) -> a
    java.lang.String getAccountTransportKey(int) -> b
    java.lang.String getAccountTransportString(int) -> c
    void setAccountUsername(int,java.lang.String) -> b
    java.lang.String getAccountUsername(int) -> d
    void setAccountDisplayName(int,java.lang.String) -> c
    java.lang.String getAccountDisplayName(int) -> e
    void setAccountUserId(int,java.lang.String) -> d
    java.lang.String getAccountUserId(int) -> f
    void setAccountPassword(int,java.lang.String) -> e
    java.lang.String getAccountPassword(int) -> g
    void setAccountDomain(int,java.lang.String) -> f
    java.lang.String getAccountDomain(int) -> h
    void setAccountProxy(int,java.lang.String) -> g
    java.lang.String getAccountProxy(int) -> i
    void setAccountOutboundProxyEnabled(int,boolean) -> a
    boolean isAccountOutboundProxySet(int) -> j
    java.lang.String getExpires(int) -> k
    void setExpires(int,java.lang.String) -> h
    java.lang.String getPrefix(int) -> l
    void setPrefix(int,java.lang.String) -> i
    boolean avpfEnabled(int) -> m
    void enableAvpf(int,boolean) -> b
    java.lang.String getAvpfRRInterval(int) -> n
    void setAvpfRRInterval(int,java.lang.String) -> j
    boolean getReplacePlusByZeroZero(int) -> o
    void setReplacePlusByZeroZero(int,boolean) -> c
    void setDefaultAccount(int) -> p
    int getDefaultAccountIndex() -> i
    int getAccountCount() -> j
    void setAccountEnabled(int,boolean) -> d
    boolean isAccountEnabled(int) -> q
    void deleteAccount(int) -> r
    void setEchoCancellation(boolean) -> c
    boolean isEchoCancellationEnabled() -> k
    boolean useFrontCam() -> l
    void setFrontCamAsDefault(boolean) -> d
    boolean isVideoEnabled() -> m
    void enableVideo(boolean) -> e
    boolean shouldInitiateVideoCall() -> n
    void setInitiateVideoCall(boolean) -> f
    boolean shouldAutomaticallyAcceptVideoRequests() -> o
    void setAutomaticallyAcceptVideoRequests(boolean) -> g
    java.lang.String getPreferredVideoSize() -> p
    void setPreferredVideoSize(java.lang.String) -> c
    boolean useRfc2833Dtmfs() -> q
    void sendDtmfsAsRfc2833(boolean) -> h
    boolean useSipInfoDtmfs() -> r
    void sendDTMFsAsSipInfo(boolean) -> i
    void setWifiOnlyEnabled(java.lang.Boolean) -> a
    boolean isWifiOnlyEnabled() -> s
    java.lang.String getStunServer() -> t
    void setStunServer(java.lang.String) -> d
    void setIceEnabled(boolean) -> j
    void setUpnpEnabled(boolean) -> k
    void useRandomPort(boolean) -> l
    void useRandomPort(boolean,boolean) -> a
    boolean isUsingRandomPort() -> u
    java.lang.String getSipPort() -> v
    void setSipPort(int) -> s
    boolean isUpnpEnabled() -> w
    boolean isIceEnabled() -> x
    org.linphone.core.LinphoneCore$MediaEncryption getMediaEncryption() -> y
    void setMediaEncryption(org.linphone.core.LinphoneCore$MediaEncryption) -> a
    void setPushNotificationEnabled(boolean) -> m
    boolean isPushNotificationEnabled() -> z
    void setPushNotificationRegistrationID(java.lang.String) -> e
    java.lang.String getPushNotificationRegistrationID() -> A
    void useIpv6(java.lang.Boolean) -> b
    boolean isUsingIpv6() -> B
    void setDebugEnabled(boolean) -> n
    boolean isDebugEnabled() -> C
    void setBackgroundModeEnabled(boolean) -> o
    boolean isBackgroundModeEnabled() -> D
    void setAnimationsEnabled(boolean) -> p
    boolean areAnimationsEnabled() -> E
    boolean isAutoStartEnabled() -> F
    void setAutoStart(boolean) -> q
    java.lang.String getSharingPictureServerUrl() -> G
    void setSharingPictureServerUrl(java.lang.String) -> f
    void setRemoteProvisioningUrl(java.lang.String) -> g
    java.lang.String getRemoteProvisioningUrl() -> H
    void setDefaultDisplayName(java.lang.String) -> h
    java.lang.String getDefaultDisplayName() -> I
    void setDefaultUsername(java.lang.String) -> i
    java.lang.String getDefaultUsername() -> J
    java.lang.String getTunnelMode() -> K
    void setTunnelMode(java.lang.String) -> j
    java.lang.String getTunnelHost() -> L
    void setTunnelHost(java.lang.String) -> k
    int getTunnelPort() -> M
    void setTunnelPort(int) -> t
    boolean isProvisioningLoginViewEnabled() -> N
    void disableProvisioningLoginView() -> O
com.inhuasoft.smart.server.LinphonePreferences$AccountBuilder -> com.inhuasoft.smart.server.dz:
    org.linphone.core.LinphoneCore lc -> a
    java.lang.String tempUsername -> b
    java.lang.String tempDisplayName -> c
    java.lang.String tempUserId -> d
    java.lang.String tempPassword -> e
    java.lang.String tempDomain -> f
    java.lang.String tempProxy -> g
    boolean tempOutboundProxy -> h
    java.lang.String tempContactsParams -> i
    java.lang.String tempExpire -> j
    org.linphone.core.LinphoneAddress$TransportType tempTransport -> k
    boolean tempAvpfEnabled -> l
    int tempAvpfRRInterval -> m
    boolean tempEnabled -> n
    boolean tempNoDefault -> o
    com.inhuasoft.smart.server.LinphonePreferences$AccountBuilder setTransport(org.linphone.core.LinphoneAddress$TransportType) -> a
    com.inhuasoft.smart.server.LinphonePreferences$AccountBuilder setUsername(java.lang.String) -> a
    com.inhuasoft.smart.server.LinphonePreferences$AccountBuilder setPassword(java.lang.String) -> b
    com.inhuasoft.smart.server.LinphonePreferences$AccountBuilder setDomain(java.lang.String) -> c
    com.inhuasoft.smart.server.LinphonePreferences$AccountBuilder setProxy(java.lang.String) -> d
    com.inhuasoft.smart.server.LinphonePreferences$AccountBuilder setOutboundProxyEnabled(boolean) -> a
    com.inhuasoft.smart.server.LinphonePreferences$AccountBuilder setContactParameters(java.lang.String) -> e
    com.inhuasoft.smart.server.LinphonePreferences$AccountBuilder setExpires(java.lang.String) -> f
    com.inhuasoft.smart.server.LinphonePreferences$AccountBuilder setUserId(java.lang.String) -> g
    com.inhuasoft.smart.server.LinphonePreferences$AccountBuilder setAvpfEnabled(boolean) -> b
    com.inhuasoft.smart.server.LinphonePreferences$AccountBuilder setAvpfRRInterval(int) -> a
    void saveNewAccount() -> a
com.inhuasoft.smart.server.LinphoneService -> com.inhuasoft.smart.server.LinphoneService:
    com.inhuasoft.smart.server.LinphoneService instance -> b
    android.os.Handler mHandler -> a
    boolean mTestDelayElapsed -> c
    android.net.wifi.WifiManager mWifiManager -> d
    android.net.wifi.WifiManager$WifiLock mWifiLock -> e
    android.app.NotificationManager mNM -> f
    android.app.Notification mNotif -> g
    android.app.Notification mIncallNotif -> h
    android.app.Notification mMsgNotif -> i
    int mMsgNotifCount -> j
    android.app.PendingIntent mNotifContentIntent -> k
    android.app.PendingIntent mkeepAlivePendingIntent -> l
    java.lang.String mNotificationTitle -> m
    boolean mDisableRegistrationStatus -> n
    com.inhuasoft.smart.server.LinphoneService$IncallIconState mCurrentIncallIconState -> o
    java.lang.Class[] mSetFgSign -> p
    java.lang.Class[] mStartFgSign -> q
    java.lang.Class[] mStopFgSign -> r
    java.lang.reflect.Method mSetForeground -> s
    java.lang.reflect.Method mStartForeground -> t
    java.lang.reflect.Method mStopForeground -> u
    java.lang.Object[] mSetForegroundArgs -> v
    java.lang.Object[] mStartForegroundArgs -> w
    java.lang.Object[] mStopForegroundArgs -> x
    java.lang.Class incomingReceivedActivity -> y
    int[] $SWITCH_TABLE$com$inhuasoft$smart$server$LinphoneService$IncallIconState -> z
    boolean isReady() -> c
    com.inhuasoft.smart.server.LinphoneService instance() -> d
    void resetMessageNotifCount() -> e
    void onCreate() -> onCreate
    void startWifiLock() -> i
    void setIncallIcon(com.inhuasoft.smart.server.LinphoneService$IncallIconState) -> a
    void refreshIncallIcon(org.linphone.core.LinphoneCall) -> a
    void displayMessageNotification(java.lang.String,java.lang.String,java.lang.String) -> a
    void removeMessageNotification() -> f
    void invokeMethod(java.lang.reflect.Method,java.lang.Object[]) -> a
    void startForegroundCompat(int,android.app.Notification) -> a
    void stopForegroundCompat(int) -> a
    void dumpDeviceInformation() -> j
    void dumpInstalledLinphoneInformation() -> k
    void sendNotification(int,int) -> a
    void notifyWrapper(int,android.app.Notification) -> b
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onDestroy() -> onDestroy
    void onDisplayStatus(java.lang.String) -> a
    void onGlobalStateChanged(org.linphone.core.LinphoneCore$GlobalState,java.lang.String) -> a
    void onRegistrationStateChanged(org.linphone.core.LinphoneCore$RegistrationState,java.lang.String) -> a
    void setActivityToLaunchOnIncomingReceived(java.lang.Class) -> a
    void resetIntentLaunchedOnNotificationClick() -> l
    void onIncomingReceived() -> g
    void onCallStateChanged(org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCall$State,java.lang.String) -> a
    void tryingNewOutgoingCallButCannotGetCallParameters() -> a
    void tryingNewOutgoingCallButWrongDestinationAddress() -> b
    void onCallEncryptionChanged(org.linphone.core.LinphoneCall,boolean,java.lang.String) -> a
    void access$0(com.inhuasoft.smart.server.LinphoneService,boolean) -> a
    int[] $SWITCH_TABLE$com$inhuasoft$smart$server$LinphoneService$IncallIconState() -> h
com.inhuasoft.smart.server.LinphoneService$1 -> com.inhuasoft.smart.server.ea:
    com.inhuasoft.smart.server.LinphoneService this$0 -> a
    void run() -> run
com.inhuasoft.smart.server.LinphoneService$2 -> com.inhuasoft.smart.server.eb:
    com.inhuasoft.smart.server.LinphoneService this$0 -> a
    org.linphone.core.LinphoneCore$RegistrationState val$state -> b
    void run() -> run
com.inhuasoft.smart.server.LinphoneService$IncallIconState -> com.inhuasoft.smart.server.ec:
    com.inhuasoft.smart.server.LinphoneService$IncallIconState INCALL -> a
    com.inhuasoft.smart.server.LinphoneService$IncallIconState PAUSE -> b
    com.inhuasoft.smart.server.LinphoneService$IncallIconState VIDEO -> c
    com.inhuasoft.smart.server.LinphoneService$IncallIconState IDLE -> d
    com.inhuasoft.smart.server.LinphoneService$IncallIconState[] ENUM$VALUES -> e
    com.inhuasoft.smart.server.LinphoneService$IncallIconState[] values() -> values
    com.inhuasoft.smart.server.LinphoneService$IncallIconState valueOf(java.lang.String) -> valueOf
com.inhuasoft.smart.server.LinphoneSimpleListener -> com.inhuasoft.smart.server.ed:
com.inhuasoft.smart.server.LinphoneSimpleListener$ConnectivityChangedListener -> com.inhuasoft.smart.server.ee:
    void onConnectivityChanged(android.content.Context,android.net.NetworkInfo,android.net.ConnectivityManager) -> a
com.inhuasoft.smart.server.LinphoneSimpleListener$LinphoneOnAudioChangedListener -> com.inhuasoft.smart.server.ef:
    void onAudioStateChanged(com.inhuasoft.smart.server.LinphoneSimpleListener$LinphoneOnAudioChangedListener$AudioState) -> a
com.inhuasoft.smart.server.LinphoneSimpleListener$LinphoneOnAudioChangedListener$AudioState -> com.inhuasoft.smart.server.eg:
    com.inhuasoft.smart.server.LinphoneSimpleListener$LinphoneOnAudioChangedListener$AudioState EARPIECE -> a
    com.inhuasoft.smart.server.LinphoneSimpleListener$LinphoneOnAudioChangedListener$AudioState SPEAKER -> b
    com.inhuasoft.smart.server.LinphoneSimpleListener$LinphoneOnAudioChangedListener$AudioState BLUETOOTH -> c
    com.inhuasoft.smart.server.LinphoneSimpleListener$LinphoneOnAudioChangedListener$AudioState[] ENUM$VALUES -> d
    com.inhuasoft.smart.server.LinphoneSimpleListener$LinphoneOnAudioChangedListener$AudioState[] values() -> values
    com.inhuasoft.smart.server.LinphoneSimpleListener$LinphoneOnAudioChangedListener$AudioState valueOf(java.lang.String) -> valueOf
com.inhuasoft.smart.server.LinphoneSimpleListener$LinphoneOnCallEncryptionChangedListener -> com.inhuasoft.smart.server.eh:
    void onCallEncryptionChanged(org.linphone.core.LinphoneCall,boolean,java.lang.String) -> a
com.inhuasoft.smart.server.LinphoneSimpleListener$LinphoneOnCallStateChangedListener -> com.inhuasoft.smart.server.ei:
    void onCallStateChanged(org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCall$State,java.lang.String) -> a
com.inhuasoft.smart.server.LinphoneSimpleListener$LinphoneOnComposingReceivedListener -> com.inhuasoft.smart.server.ej:
    void onComposingReceived(org.linphone.core.LinphoneChatRoom) -> a
com.inhuasoft.smart.server.LinphoneSimpleListener$LinphoneOnDTMFReceivedListener -> com.inhuasoft.smart.server.ek:
    void onDTMFReceived(org.linphone.core.LinphoneCall,int) -> a
com.inhuasoft.smart.server.LinphoneSimpleListener$LinphoneOnGlobalStateChangedListener -> com.inhuasoft.smart.server.el:
    void onGlobalStateChanged(org.linphone.core.LinphoneCore$GlobalState,java.lang.String) -> a
com.inhuasoft.smart.server.LinphoneSimpleListener$LinphoneOnMessageReceivedListener -> com.inhuasoft.smart.server.em:
    void onMessageReceived(org.linphone.core.LinphoneAddress,org.linphone.core.LinphoneChatMessage,int) -> a
com.inhuasoft.smart.server.LinphoneSimpleListener$LinphoneOnRegistrationStateChangedListener -> com.inhuasoft.smart.server.en:
    void onRegistrationStateChanged(org.linphone.core.LinphoneCore$RegistrationState) -> a
com.inhuasoft.smart.server.LinphoneSimpleListener$LinphoneServiceListener -> com.inhuasoft.smart.server.eo:
    void tryingNewOutgoingCallButCannotGetCallParameters() -> a
    void tryingNewOutgoingCallButWrongDestinationAddress() -> b
    void onRegistrationStateChanged(org.linphone.core.LinphoneCore$RegistrationState,java.lang.String) -> a
    void onDisplayStatus(java.lang.String) -> a
com.inhuasoft.smart.server.LinphoneUtils -> com.inhuasoft.smart.server.ep:
    boolean isSipAddress(java.lang.String) -> a
    boolean isStrictSipAddress(java.lang.String) -> b
    java.lang.String getUsernameFromAddress(java.lang.String) -> c
    boolean onKeyBackGoHome(android.app.Activity,int,android.view.KeyEvent) -> a
    boolean onKeyVolumeAdjust(int) -> a
    android.net.Uri findUriPictureOfContactAndSetDisplayName(org.linphone.core.LinphoneAddress,android.content.ContentResolver) -> a
    android.graphics.Bitmap downloadBitmap(android.net.Uri) -> a
    void setImagePictureFromUri(android.content.Context,android.widget.ImageView,android.net.Uri,int) -> a
    java.util.List getLinphoneCalls(org.linphone.core.LinphoneCore) -> a
    java.util.List getCallsInState(org.linphone.core.LinphoneCore,java.util.Collection) -> a
    int pixelsToDpi(android.content.res.Resources,int) -> a
    boolean isCallRunning(org.linphone.core.LinphoneCall) -> a
    boolean isCallEstablished(org.linphone.core.LinphoneCall) -> b
    boolean isHightBandwidthConnection(android.content.Context) -> a
    boolean isConnectionFast(int,int) -> a
    boolean zipLogs(java.lang.StringBuilder,java.lang.String) -> a
    void collectLogs(android.content.Context,java.lang.String) -> a
com.inhuasoft.smart.server.LoginActivity -> com.inhuasoft.smart.server.LoginActivity:
    java.lang.String TAG -> g
    android.widget.Button btnSubmit -> a
    android.widget.EditText editUserName -> b
    android.widget.EditText editPassword -> c
    android.widget.EditText editRePassword -> d
    android.widget.TextView txtMsginfo -> e
    android.widget.CheckBox chkMsginfo -> f
    android.os.Handler mHandler -> h
    void SetSystemInfo() -> e
    void StartMain() -> f
    java.lang.String getDeviceNo() -> a
    java.lang.String getValByTagName(org.w3c.dom.Document,java.lang.String) -> a
    java.lang.String ParserXml(java.lang.String,java.lang.String) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void ResetInput() -> g
    void SetRegUI() -> b
    void SetLoginUI() -> c
    boolean ValidateRegInput() -> h
    boolean ValidateLoginInput() -> i
    void onClick(android.view.View) -> onClick
    void access$0(com.inhuasoft.smart.server.LoginActivity) -> a
    android.os.Handler access$1(com.inhuasoft.smart.server.LoginActivity) -> b
    void access$2(com.inhuasoft.smart.server.LoginActivity) -> c
    java.lang.String access$3() -> d
com.inhuasoft.smart.server.LoginActivity$1 -> com.inhuasoft.smart.server.eq:
    com.inhuasoft.smart.server.LoginActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    com.inhuasoft.smart.server.LoginActivity access$0(com.inhuasoft.smart.server.LoginActivity$1) -> a
com.inhuasoft.smart.server.LoginActivity$1$1 -> com.inhuasoft.smart.server.er:
    com.inhuasoft.smart.server.LoginActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.server.LoginActivity$1$10 -> com.inhuasoft.smart.server.es:
    com.inhuasoft.smart.server.LoginActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.server.LoginActivity$1$11 -> com.inhuasoft.smart.server.et:
    com.inhuasoft.smart.server.LoginActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.server.LoginActivity$1$12 -> com.inhuasoft.smart.server.eu:
    com.inhuasoft.smart.server.LoginActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.server.LoginActivity$1$13 -> com.inhuasoft.smart.server.ev:
    com.inhuasoft.smart.server.LoginActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.server.LoginActivity$1$2 -> com.inhuasoft.smart.server.ew:
    com.inhuasoft.smart.server.LoginActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.server.LoginActivity$1$3 -> com.inhuasoft.smart.server.ex:
    com.inhuasoft.smart.server.LoginActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.server.LoginActivity$1$4 -> com.inhuasoft.smart.server.ey:
    com.inhuasoft.smart.server.LoginActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.server.LoginActivity$1$5 -> com.inhuasoft.smart.server.ez:
    com.inhuasoft.smart.server.LoginActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.server.LoginActivity$1$6 -> com.inhuasoft.smart.server.fa:
    com.inhuasoft.smart.server.LoginActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.server.LoginActivity$1$7 -> com.inhuasoft.smart.server.fb:
    com.inhuasoft.smart.server.LoginActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.server.LoginActivity$1$8 -> com.inhuasoft.smart.server.fc:
    com.inhuasoft.smart.server.LoginActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.server.LoginActivity$1$9 -> com.inhuasoft.smart.server.fd:
    com.inhuasoft.smart.server.LoginActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.server.LoginActivity$2 -> com.inhuasoft.smart.server.fe:
    com.inhuasoft.smart.server.LoginActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.server.LoginActivity$3 -> com.inhuasoft.smart.server.ff:
    com.inhuasoft.smart.server.LoginActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.server.LoginActivity$4 -> com.inhuasoft.smart.server.fg:
    com.inhuasoft.smart.server.LoginActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.server.LoginActivity$5 -> com.inhuasoft.smart.server.fh:
    com.inhuasoft.smart.server.LoginActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.server.LoginActivity$6 -> com.inhuasoft.smart.server.fi:
    com.inhuasoft.smart.server.LoginActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.server.LoginActivity$BindUserDeviceThread -> com.inhuasoft.smart.server.fj:
    com.inhuasoft.smart.server.LoginActivity this$0 -> a
    void run() -> run
com.inhuasoft.smart.server.LoginActivity$DeviceRegThread -> com.inhuasoft.smart.server.fk:
    com.inhuasoft.smart.server.LoginActivity this$0 -> a
    void run() -> run
com.inhuasoft.smart.server.LoginActivity$GetUserByDeviceThread -> com.inhuasoft.smart.server.fl:
    com.inhuasoft.smart.server.LoginActivity this$0 -> a
    void run() -> run
com.inhuasoft.smart.server.LoginActivity$SipAddDeviceThread -> com.inhuasoft.smart.server.fm:
    com.inhuasoft.smart.server.LoginActivity this$0 -> a
    void run() -> run
com.inhuasoft.smart.server.LoginActivity$SipAddUserThread -> com.inhuasoft.smart.server.fn:
    com.inhuasoft.smart.server.LoginActivity this$0 -> a
    void run() -> run
com.inhuasoft.smart.server.LoginActivity$SipAdminLoginThread -> com.inhuasoft.smart.server.fo:
    com.inhuasoft.smart.server.LoginActivity this$0 -> a
    void run() -> run
com.inhuasoft.smart.server.LoginActivity$UserLoginThread -> com.inhuasoft.smart.server.fp:
    com.inhuasoft.smart.server.LoginActivity this$0 -> a
    void run() -> run
com.inhuasoft.smart.server.LoginActivity$UserRegThread -> com.inhuasoft.smart.server.fq:
    com.inhuasoft.smart.server.LoginActivity this$0 -> a
    void run() -> run
com.inhuasoft.smart.server.MD5 -> com.inhuasoft.smart.server.fr:
    java.lang.String getMD5(java.lang.String) -> a
    java.lang.String getString(byte[]) -> a
com.inhuasoft.smart.server.MainActivity -> com.inhuasoft.smart.server.MainActivity:
    android.os.Handler mHandler -> a
    android.view.OrientationEventListener mOrientationHelper -> b
    int mAlwaysChangingPhoneAngle -> c
    com.inhuasoft.smart.server.MainActivity instance -> d
    boolean isInstanciated() -> a
    com.inhuasoft.smart.server.MainActivity instance() -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onDestroy() -> onDestroy
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void exit() -> c
    void onCallStateChanged(org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCall$State,java.lang.String) -> a
    void startVideoActivity(org.linphone.core.LinphoneCall) -> a
    void startIncallActivity(org.linphone.core.LinphoneCall) -> b
    void startOrientationSensor() -> d
    void displayCustomToast(java.lang.String,int) -> a
    int access$0(com.inhuasoft.smart.server.MainActivity) -> a
    void access$1(com.inhuasoft.smart.server.MainActivity,int) -> a
com.inhuasoft.smart.server.MainActivity$1 -> com.inhuasoft.smart.server.fs:
    com.inhuasoft.smart.server.MainActivity this$0 -> a
    java.lang.String val$message -> b
    int val$duration -> c
    void run() -> run
com.inhuasoft.smart.server.MainActivity$LocalOrientationEventListener -> com.inhuasoft.smart.server.ft:
    com.inhuasoft.smart.server.MainActivity this$0 -> a
    void onOrientationChanged(int) -> onOrientationChanged
com.inhuasoft.smart.server.NetworkManager -> com.inhuasoft.smart.server.NetworkManager:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.inhuasoft.smart.server.PhoneStateChangedReceiver -> com.inhuasoft.smart.server.PhoneStateChangedReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.inhuasoft.smart.server.PreferencesMigrator -> com.inhuasoft.smart.server.fu:
    com.inhuasoft.smart.server.LinphonePreferences mNewPrefs -> a
    android.content.SharedPreferences mOldPrefs -> b
    android.content.res.Resources mResources -> c
    boolean isMigrationNeeded() -> a
    void doMigration() -> b
    void migrateRemoteProvisioningUriIfNeeded() -> c
    void doAccountsMigration() -> d
    void doAccountMigration(int,boolean) -> a
    void deleteAllOldPreferences() -> e
    java.lang.String getString(int) -> a
    boolean getPrefBoolean(int,boolean) -> b
    boolean getPrefBoolean(java.lang.String,boolean) -> a
    java.lang.String getPrefString(int,java.lang.String) -> a
    int getPrefInt(int,int) -> a
    java.lang.String getPrefString(java.lang.String,java.lang.String) -> a
com.inhuasoft.smart.server.R -> com.inhuasoft.smart.server.fv:
com.inhuasoft.smart.server.R$styleable -> com.inhuasoft.smart.server.fw:
    int[] AvatarWithShadow -> AvatarWithShadow
    int AvatarWithShadow_picture -> AvatarWithShadow_picture
    int[] Numpad -> Numpad
    int Numpad_play_dtmf -> Numpad_play_dtmf
    int[] SlidingDrawer -> SlidingDrawer
    int SlidingDrawer_content -> SlidingDrawer_content
    int SlidingDrawer_direction -> SlidingDrawer_direction
    int SlidingDrawer_handle -> SlidingDrawer_handle
    int[] SlidingTab -> SlidingTab
    int SlidingTab_orientation -> SlidingTab_orientation
com.inhuasoft.smart.server.RegexUtils -> com.inhuasoft.smart.server.fx:
    boolean checkUserName(java.lang.String) -> a
    boolean checkPassWord(java.lang.String) -> b
com.inhuasoft.smart.server.SettingsFragment -> com.inhuasoft.smart.server.fy:
    com.inhuasoft.smart.server.LinphonePreferences mPrefs -> i
    android.os.Handler mHandler -> W
    void onCreate(android.os.Bundle) -> a
    void initSettings() -> b
    void setListeners() -> c
    void hideSettings() -> A
    void uncheckAndHidePreference(int) -> d
    void emptyAndHidePreference(int) -> e
    void emptyAndHidePreferenceCategory(int) -> f
    void emptyAndHidePreferenceScreen(int) -> g
    void hidePreference(int) -> h
    void hidePreference(android.preference.Preference) -> a
    void setPreferenceDefaultValueAndSummary(int,java.lang.String) -> a
    void initTunnelSettings() -> B
    void setTunnelPreferencesListener() -> C
    void initAccounts() -> D
    void updateAccountLed(com.inhuasoft.smart.server.ui.LedPreference,java.lang.String,java.lang.String,boolean) -> a
    void initMediaEncryptionPreference(android.preference.ListPreference) -> a
    void initializePreferredVideoSizePreferences(android.preference.ListPreference) -> b
    void setListPreferenceValues(android.preference.ListPreference,java.util.List,java.util.List) -> a
    void initAudioSettings() -> E
    void setAudioPreferencesListener() -> F
    void initVideoSettings() -> G
    void setVideoPreferencesListener() -> H
    void initCallSettings() -> I
    void setCallPreferencesListener() -> J
    void initNetworkSettings() -> K
    void setNetworkPreferencesListener() -> L
    void initAdvancedSettings() -> M
    void setAdvancedPreferencesListener() -> N
    void onEcCalibrationStatus(org.linphone.core.LinphoneCore$EcCalibratorStatus,int) -> a
    void onResume() -> r
    com.inhuasoft.smart.server.LinphonePreferences access$0(com.inhuasoft.smart.server.SettingsFragment) -> a
    void access$1(com.inhuasoft.smart.server.SettingsFragment,com.inhuasoft.smart.server.ui.LedPreference,java.lang.String,java.lang.String,boolean) -> a
com.inhuasoft.smart.server.SettingsFragment$1 -> com.inhuasoft.smart.server.fz:
    com.inhuasoft.smart.server.SettingsFragment this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.inhuasoft.smart.server.SettingsFragment$10 -> com.inhuasoft.smart.server.ga:
    com.inhuasoft.smart.server.SettingsFragment this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.inhuasoft.smart.server.SettingsFragment$11 -> com.inhuasoft.smart.server.gb:
    com.inhuasoft.smart.server.SettingsFragment this$0 -> a
    org.linphone.core.PayloadType val$pt -> b
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.SettingsFragment$12 -> com.inhuasoft.smart.server.gc:
    com.inhuasoft.smart.server.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.SettingsFragment$13 -> com.inhuasoft.smart.server.gd:
    com.inhuasoft.smart.server.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.SettingsFragment$14 -> com.inhuasoft.smart.server.ge:
    com.inhuasoft.smart.server.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.SettingsFragment$15 -> com.inhuasoft.smart.server.gf:
    com.inhuasoft.smart.server.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.SettingsFragment$16 -> com.inhuasoft.smart.server.gg:
    com.inhuasoft.smart.server.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.SettingsFragment$17 -> com.inhuasoft.smart.server.gh:
    com.inhuasoft.smart.server.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.SettingsFragment$18 -> com.inhuasoft.smart.server.gi:
    com.inhuasoft.smart.server.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.SettingsFragment$19 -> com.inhuasoft.smart.server.gj:
    com.inhuasoft.smart.server.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.SettingsFragment$2 -> com.inhuasoft.smart.server.gk:
    com.inhuasoft.smart.server.SettingsFragment this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.inhuasoft.smart.server.SettingsFragment$20 -> com.inhuasoft.smart.server.gl:
    com.inhuasoft.smart.server.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.SettingsFragment$21 -> com.inhuasoft.smart.server.gm:
    com.inhuasoft.smart.server.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.SettingsFragment$22 -> com.inhuasoft.smart.server.gn:
    com.inhuasoft.smart.server.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.SettingsFragment$23 -> com.inhuasoft.smart.server.go:
    com.inhuasoft.smart.server.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.SettingsFragment$24 -> com.inhuasoft.smart.server.gp:
    com.inhuasoft.smart.server.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.SettingsFragment$25 -> com.inhuasoft.smart.server.gq:
    com.inhuasoft.smart.server.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.SettingsFragment$26 -> com.inhuasoft.smart.server.gr:
    com.inhuasoft.smart.server.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.SettingsFragment$27 -> com.inhuasoft.smart.server.gs:
    com.inhuasoft.smart.server.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.SettingsFragment$28 -> com.inhuasoft.smart.server.gt:
    com.inhuasoft.smart.server.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.SettingsFragment$29 -> com.inhuasoft.smart.server.gu:
    com.inhuasoft.smart.server.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.SettingsFragment$3 -> com.inhuasoft.smart.server.gv:
    com.inhuasoft.smart.server.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.SettingsFragment$30 -> com.inhuasoft.smart.server.gw:
    com.inhuasoft.smart.server.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.SettingsFragment$31 -> com.inhuasoft.smart.server.gx:
    com.inhuasoft.smart.server.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.SettingsFragment$32 -> com.inhuasoft.smart.server.gy:
    com.inhuasoft.smart.server.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.SettingsFragment$33 -> com.inhuasoft.smart.server.gz:
    com.inhuasoft.smart.server.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.SettingsFragment$34 -> com.inhuasoft.smart.server.ha:
    com.inhuasoft.smart.server.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.SettingsFragment$35 -> com.inhuasoft.smart.server.hb:
    com.inhuasoft.smart.server.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.SettingsFragment$36 -> com.inhuasoft.smart.server.hc:
    com.inhuasoft.smart.server.SettingsFragment this$0 -> a
    org.linphone.core.LinphoneCore$EcCalibratorStatus val$status -> b
    int val$delayMs -> c
    void run() -> run
com.inhuasoft.smart.server.SettingsFragment$4 -> com.inhuasoft.smart.server.hd:
    com.inhuasoft.smart.server.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.SettingsFragment$5 -> com.inhuasoft.smart.server.he:
    com.inhuasoft.smart.server.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.SettingsFragment$6 -> com.inhuasoft.smart.server.hf:
    com.inhuasoft.smart.server.SettingsFragment this$0 -> a
    int val$accountId -> b
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.inhuasoft.smart.server.SettingsFragment$7 -> com.inhuasoft.smart.server.hg:
    com.inhuasoft.smart.server.SettingsFragment this$0 -> a
    com.inhuasoft.smart.server.ui.LedPreference val$me -> b
    java.lang.String val$username -> c
    java.lang.String val$domain -> d
    void run() -> run
com.inhuasoft.smart.server.SettingsFragment$8 -> com.inhuasoft.smart.server.hh:
    com.inhuasoft.smart.server.SettingsFragment this$0 -> a
    org.linphone.core.PayloadType val$pt -> b
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.SettingsFragment$9 -> com.inhuasoft.smart.server.hi:
    com.inhuasoft.smart.server.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.inhuasoft.smart.server.SmartApplication -> com.inhuasoft.smart.server.SmartApplication:
    org.apache.http.client.CookieStore cookies -> a
    org.apache.http.client.CookieStore getCookie() -> a
    void setCookie(org.apache.http.client.CookieStore) -> a
com.inhuasoft.smart.server.StatusFragment -> com.inhuasoft.smart.server.StatusFragment:
    android.os.Handler mHandler -> a
    android.os.Handler refreshHandler -> b
    android.widget.TextView statusText -> c
    android.widget.TextView exit -> d
    android.widget.ImageView statusLed -> e
    android.widget.ImageView callQuality -> f
    android.widget.ImageView encryption -> g
    android.widget.ImageView background -> h
    android.widget.ListView sliderContentAccounts -> i
    android.widget.TableLayout callStats -> W
    com.inhuasoft.smart.server.ui.SlidingDrawer drawer -> X
    java.lang.Runnable mCallQualityUpdater -> Y
    boolean isInCall -> Z
    boolean isAttached -> aa
    java.util.Timer mTimer -> ab
    java.util.TimerTask mTask -> ac
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    void onDetach() -> d
    void openOrCloseStatusBar(boolean) -> a
    void closeStatusBar() -> a
    void populateSliderContent() -> b
    void registrationStateChanged(org.linphone.core.LinphoneCore$RegistrationState) -> a
    int getStatusIconResource(org.linphone.core.LinphoneCore$RegistrationState,boolean) -> a
    java.lang.String getStatusIconText(org.linphone.core.LinphoneCore$RegistrationState) -> b
    void startCallQuality() -> c
    void updateQualityOfSignalIcon(float) -> a
    void onResume() -> r
    void onPause() -> s
    void refreshStatusItems(org.linphone.core.LinphoneCall,boolean) -> a
    void showZRTPDialog(org.linphone.core.LinphoneCall) -> a
    void initCallStatsRefresher(org.linphone.core.LinphoneCall,android.view.View) -> a
    int access$0(com.inhuasoft.smart.server.StatusFragment,org.linphone.core.LinphoneCore$RegistrationState,boolean) -> a
    void access$1(com.inhuasoft.smart.server.StatusFragment) -> a
    android.widget.ImageView access$2(com.inhuasoft.smart.server.StatusFragment) -> b
    android.widget.TextView access$3(com.inhuasoft.smart.server.StatusFragment) -> c
    java.lang.String access$4(com.inhuasoft.smart.server.StatusFragment,org.linphone.core.LinphoneCore$RegistrationState) -> a
    android.widget.ListView access$5(com.inhuasoft.smart.server.StatusFragment) -> d
    void access$6(com.inhuasoft.smart.server.StatusFragment,java.lang.Runnable) -> a
    boolean access$7(com.inhuasoft.smart.server.StatusFragment) -> e
    android.os.Handler access$8(com.inhuasoft.smart.server.StatusFragment) -> f
    void access$9(com.inhuasoft.smart.server.StatusFragment,org.linphone.core.LinphoneCall) -> a
    android.widget.ImageView access$10(com.inhuasoft.smart.server.StatusFragment) -> g
    java.util.Timer access$11(com.inhuasoft.smart.server.StatusFragment) -> h
    android.os.Handler access$12(com.inhuasoft.smart.server.StatusFragment) -> i
com.inhuasoft.smart.server.StatusFragment$1 -> com.inhuasoft.smart.server.hj:
    com.inhuasoft.smart.server.StatusFragment this$0 -> a
    void onDrawerOpened() -> a
com.inhuasoft.smart.server.StatusFragment$2 -> com.inhuasoft.smart.server.hk:
    com.inhuasoft.smart.server.StatusFragment this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.inhuasoft.smart.server.StatusFragment$3 -> com.inhuasoft.smart.server.hl:
    com.inhuasoft.smart.server.StatusFragment this$0 -> a
    org.linphone.core.LinphoneCore$RegistrationState val$state -> b
    void run() -> run
com.inhuasoft.smart.server.StatusFragment$3$1 -> com.inhuasoft.smart.server.hm:
    com.inhuasoft.smart.server.StatusFragment$3 this$1 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.StatusFragment$4 -> com.inhuasoft.smart.server.hn:
    org.linphone.core.LinphoneCall mCurrentCall -> a
    com.inhuasoft.smart.server.StatusFragment this$0 -> b
    void run() -> run
com.inhuasoft.smart.server.StatusFragment$5 -> com.inhuasoft.smart.server.ho:
    com.inhuasoft.smart.server.StatusFragment this$0 -> a
    org.linphone.core.LinphoneCall val$call -> b
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.StatusFragment$6 -> com.inhuasoft.smart.server.hp:
    com.inhuasoft.smart.server.StatusFragment this$0 -> a
    org.linphone.core.LinphoneCall val$call -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.server.StatusFragment$7 -> com.inhuasoft.smart.server.hq:
    com.inhuasoft.smart.server.StatusFragment this$0 -> a
    org.linphone.core.LinphoneCall val$call -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.server.StatusFragment$8 -> com.inhuasoft.smart.server.hr:
    com.inhuasoft.smart.server.StatusFragment this$0 -> a
    org.linphone.core.LinphoneCall val$call -> b
    android.view.View val$view -> c
    void run() -> run
com.inhuasoft.smart.server.StatusFragment$8$1 -> com.inhuasoft.smart.server.hs:
    com.inhuasoft.smart.server.StatusFragment$8 this$1 -> a
    org.linphone.core.LinphoneCall val$call -> b
    android.widget.TextView val$title -> c
    android.widget.TextView val$codec -> d
    android.widget.TextView val$dl -> e
    android.widget.TextView val$ul -> f
    android.widget.TextView val$ice -> g
    android.view.View val$videoResolutionLayout -> h
    android.widget.TextView val$videoResolution -> i
    void run() -> run
com.inhuasoft.smart.server.StatusFragment$AccountsListAdapter -> com.inhuasoft.smart.server.ht:
    java.util.List checkboxes -> b
    android.view.View$OnClickListener defaultListener -> c
    com.inhuasoft.smart.server.StatusFragment this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.util.List access$0(com.inhuasoft.smart.server.StatusFragment$AccountsListAdapter) -> a
com.inhuasoft.smart.server.StatusFragment$AccountsListAdapter$1 -> com.inhuasoft.smart.server.hu:
    com.inhuasoft.smart.server.StatusFragment$AccountsListAdapter this$1 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.StatusFragment$AccountsListAdapter$2 -> com.inhuasoft.smart.server.hv:
    com.inhuasoft.smart.server.StatusFragment$AccountsListAdapter this$1 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.VideoCallFragment -> com.inhuasoft.smart.server.hw:
    android.view.SurfaceView mVideoView -> d
    android.view.SurfaceView mCaptureView -> e
    org.linphone.mediastream.video.AndroidVideoWindowImpl androidVideoWindowImpl -> f
    android.view.GestureDetector mGestureDetector -> g
    float mZoomFactor -> h
    float mZoomCenterX -> i
    float mZoomCenterY -> W
    com.inhuasoft.smart.server.compatibility.CompatibilityScaleGestureDetector mScaleDetector -> X
    com.inhuasoft.smart.server.InCallActivity inCallActivity -> Y
    android.widget.ImageButton imgbtn_hangup -> a
    android.widget.ImageButton imgbtn_capture_img -> b
    android.widget.ImageButton imgbtn_record_video -> c
    boolean IsRecord -> Z
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void fixZOrder(android.view.SurfaceView,android.view.SurfaceView) -> a
    void switchCamera() -> a
    void onResume() -> r
    void onPause() -> s
    boolean onScale(com.inhuasoft.smart.server.compatibility.CompatibilityScaleGestureDetector) -> a
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    void resetZoom() -> b
    void onDestroy() -> t
    void onAttach(android.app.Activity) -> a
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    void hangUp() -> c
    void takeSnapshot() -> A
    void startVideoRecord() -> B
    void stopVideoRecord() -> C
    void onClick(android.view.View) -> onClick
    void access$0(com.inhuasoft.smart.server.VideoCallFragment,android.view.SurfaceView) -> a
    void access$1(com.inhuasoft.smart.server.VideoCallFragment,android.view.SurfaceView) -> b
    android.view.SurfaceView access$2(com.inhuasoft.smart.server.VideoCallFragment) -> a
    com.inhuasoft.smart.server.compatibility.CompatibilityScaleGestureDetector access$3(com.inhuasoft.smart.server.VideoCallFragment) -> b
    android.view.GestureDetector access$4(com.inhuasoft.smart.server.VideoCallFragment) -> c
com.inhuasoft.smart.server.VideoCallFragment$1 -> com.inhuasoft.smart.server.hx:
    com.inhuasoft.smart.server.VideoCallFragment this$0 -> a
    void onVideoRenderingSurfaceReady(org.linphone.mediastream.video.AndroidVideoWindowImpl,android.view.SurfaceView) -> onVideoRenderingSurfaceReady
    void onVideoRenderingSurfaceDestroyed(org.linphone.mediastream.video.AndroidVideoWindowImpl) -> onVideoRenderingSurfaceDestroyed
    void onVideoPreviewSurfaceReady(org.linphone.mediastream.video.AndroidVideoWindowImpl,android.view.SurfaceView) -> onVideoPreviewSurfaceReady
    void onVideoPreviewSurfaceDestroyed(org.linphone.mediastream.video.AndroidVideoWindowImpl) -> onVideoPreviewSurfaceDestroyed
com.inhuasoft.smart.server.VideoCallFragment$2 -> com.inhuasoft.smart.server.hy:
    com.inhuasoft.smart.server.VideoCallFragment this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.inhuasoft.smart.server.compatibility.ApiEightPlus -> com.inhuasoft.smart.server.a.a:
    void initPushNotificationService(android.content.Context) -> a
    java.lang.String getAudioManagerEventForBluetoothConnectionStateChangedEvent() -> a
com.inhuasoft.smart.server.compatibility.ApiElevenPlus -> com.inhuasoft.smart.server.a.b:
    android.app.Notification createMessageNotification(android.content.Context,int,java.lang.String,java.lang.String,android.graphics.Bitmap,android.app.PendingIntent) -> a
    android.app.Notification createInCallNotification(android.content.Context,java.lang.String,java.lang.String,int,android.graphics.Bitmap,java.lang.String,android.app.PendingIntent) -> a
    android.app.Notification createNotification(android.content.Context,java.lang.String,java.lang.String,int,int,android.graphics.Bitmap,android.app.PendingIntent) -> a
    void copyTextToClipboard(android.content.Context,java.lang.String) -> a
    void setAudioManagerInCallMode(android.media.AudioManager) -> a
    android.content.Intent prepareAddContactIntent(java.lang.String,java.lang.String) -> a
    android.content.Intent prepareEditContactIntentWithSipAddress(int,java.lang.String) -> a
com.inhuasoft.smart.server.compatibility.ApiFivePlus -> com.inhuasoft.smart.server.a.c:
    android.content.Intent prepareAddContactIntent(java.lang.String,java.lang.String) -> a
    android.content.Intent prepareEditContactIntent(int) -> a
    java.util.List extractContactNumbersAndAddresses(java.lang.String,android.content.ContentResolver) -> a
    android.database.Cursor getContactsCursor(android.content.ContentResolver) -> a
    android.database.Cursor getSIPContactsCursor(android.content.ContentResolver) -> b
    android.database.Cursor getGeneralContactCursor(android.content.ContentResolver,java.lang.String,boolean) -> a
    int getCursorDisplayNameColumnIndex(android.database.Cursor) -> a
    com.inhuasoft.smart.server.Contact getContact(android.content.ContentResolver,android.database.Cursor,int) -> a
    java.io.InputStream getContactPictureInputStream(android.content.ContentResolver,java.lang.String) -> a
    java.lang.String getContactDisplayName(android.database.Cursor) -> b
    android.net.Uri getContactPictureUri(java.lang.String) -> a
    java.lang.String refreshContactName(android.content.ContentResolver,java.lang.String) -> b
    android.app.Notification createMessageNotification(android.content.Context,java.lang.String,java.lang.String,android.app.PendingIntent) -> a
    android.app.Notification createInCallNotification(android.content.Context,java.lang.String,java.lang.String,int,android.app.PendingIntent) -> a
    void copyTextToClipboard(android.content.Context,java.lang.String) -> a
    void addSipAddressToContact(android.content.Context,java.util.ArrayList,java.lang.String) -> a
    void addSipAddressToContact(android.content.Context,java.util.ArrayList,java.lang.String,java.lang.String) -> a
    void updateSipAddressForContact(java.util.ArrayList,java.lang.String,java.lang.String,java.lang.String) -> a
    void deleteSipAddressFromContact(java.util.ArrayList,java.lang.String,java.lang.String) -> a
    void removeGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> a
    void setAudioManagerInCallMode(android.media.AudioManager) -> a
    android.app.Notification createNotification(android.content.Context,java.lang.String,java.lang.String,int,int,android.app.PendingIntent) -> a
com.inhuasoft.smart.server.compatibility.ApiFourteenPlus -> com.inhuasoft.smart.server.a.d:
    void hideNavigationBar(android.app.Activity) -> a
    void showNavigationBar(android.app.Activity) -> b
    java.lang.String getAudioManagerEventForBluetoothConnectionStateChangedEvent() -> a
com.inhuasoft.smart.server.compatibility.ApiNinePlus -> com.inhuasoft.smart.server.a.e:
    void addSipAddressToContact(android.content.Context,java.util.ArrayList,java.lang.String) -> a
    void addSipAddressToContact(android.content.Context,java.util.ArrayList,java.lang.String,java.lang.String) -> a
    void updateSipAddressForContact(java.util.ArrayList,java.lang.String,java.lang.String,java.lang.String) -> a
    void deleteSipAddressFromContact(java.util.ArrayList,java.lang.String,java.lang.String) -> a
    java.util.List extractContactNumbersAndAddresses(java.lang.String,android.content.ContentResolver) -> a
    android.database.Cursor getContactsCursor(android.content.ContentResolver,java.lang.String) -> a
    android.database.Cursor getSIPContactsCursor(android.content.ContentResolver,java.lang.String) -> b
com.inhuasoft.smart.server.compatibility.ApiSixteenPlus -> com.inhuasoft.smart.server.a.f:
    android.app.Notification createMessageNotification(android.content.Context,int,java.lang.String,java.lang.String,android.graphics.Bitmap,android.app.PendingIntent) -> a
    android.app.Notification createInCallNotification(android.content.Context,java.lang.String,java.lang.String,int,android.graphics.Bitmap,java.lang.String,android.app.PendingIntent) -> a
    android.app.Notification createNotification(android.content.Context,java.lang.String,java.lang.String,int,int,android.graphics.Bitmap,android.app.PendingIntent) -> a
    void removeGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> a
com.inhuasoft.smart.server.compatibility.Compatibility -> com.inhuasoft.smart.server.a.g:
    android.content.Intent prepareAddContactIntent(java.lang.String,java.lang.String) -> a
    android.content.Intent prepareEditContactIntent(int) -> a
    android.content.Intent prepareEditContactIntentWithSipAddress(int,java.lang.String) -> a
    java.util.List extractContactNumbersAndAddresses(java.lang.String,android.content.ContentResolver) -> a
    android.database.Cursor getContactsCursor(android.content.ContentResolver) -> a
    android.database.Cursor getContactsCursor(android.content.ContentResolver,java.lang.String) -> a
    android.database.Cursor getSIPContactsCursor(android.content.ContentResolver) -> b
    android.database.Cursor getSIPContactsCursor(android.content.ContentResolver,java.lang.String) -> b
    int getCursorDisplayNameColumnIndex(android.database.Cursor) -> a
    com.inhuasoft.smart.server.Contact getContact(android.content.ContentResolver,android.database.Cursor,int) -> a
    java.io.InputStream getContactPictureInputStream(android.content.ContentResolver,java.lang.String) -> c
    android.app.Notification createMessageNotification(android.content.Context,int,java.lang.String,java.lang.String,android.graphics.Bitmap,android.app.PendingIntent) -> a
    android.app.Notification createInCallNotification(android.content.Context,java.lang.String,java.lang.String,int,android.graphics.Bitmap,java.lang.String,android.app.PendingIntent) -> a
    android.app.Notification createNotification(android.content.Context,java.lang.String,java.lang.String,int,int,android.graphics.Bitmap,android.app.PendingIntent) -> a
    java.lang.String refreshContactName(android.content.ContentResolver,java.lang.String) -> d
    com.inhuasoft.smart.server.compatibility.CompatibilityScaleGestureDetector getScaleGestureDetector(android.content.Context,com.inhuasoft.smart.server.compatibility.CompatibilityScaleGestureListener) -> a
    void initPushNotificationService(android.content.Context) -> a
    void copyTextToClipboard(android.content.Context,java.lang.String) -> a
    void addSipAddressToContact(android.content.Context,java.util.ArrayList,java.lang.String) -> a
    void addSipAddressToContact(android.content.Context,java.util.ArrayList,java.lang.String,java.lang.String) -> a
    void updateSipAddressForContact(java.util.ArrayList,java.lang.String,java.lang.String,java.lang.String) -> a
    void deleteSipAddressFromContact(java.util.ArrayList,java.lang.String,java.lang.String) -> a
    void removeGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> a
    void hideNavigationBar(android.app.Activity) -> a
    void showNavigationBar(android.app.Activity) -> b
    void setAudioManagerInCallMode(android.media.AudioManager) -> a
    java.lang.String getAudioManagerEventForBluetoothConnectionStateChangedEvent() -> a
com.inhuasoft.smart.server.compatibility.CompatibilityScaleGestureDetector -> com.inhuasoft.smart.server.a.h:
    android.view.ScaleGestureDetector detector -> a
    com.inhuasoft.smart.server.compatibility.CompatibilityScaleGestureListener listener -> b
    void setOnScaleListener(com.inhuasoft.smart.server.compatibility.CompatibilityScaleGestureListener) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> a
    boolean onScale(android.view.ScaleGestureDetector) -> onScale
    float getScaleFactor() -> a
    void destroy() -> b
com.inhuasoft.smart.server.compatibility.CompatibilityScaleGestureListener -> com.inhuasoft.smart.server.a.i:
    boolean onScale(com.inhuasoft.smart.server.compatibility.CompatibilityScaleGestureDetector) -> a
com.inhuasoft.smart.server.gcm.GCMReceiver -> com.inhuasoft.smart.server.gcm.GCMReceiver:
    java.lang.String getGCMIntentServiceClassName(android.content.Context) -> a
com.inhuasoft.smart.server.gcm.GCMService -> com.inhuasoft.smart.server.gcm.GCMService:
    void onError(android.content.Context,java.lang.String) -> b
    void onMessage(android.content.Context,android.content.Intent) -> a
    void onRegistered(android.content.Context,java.lang.String) -> c
    void onUnregistered(android.content.Context,java.lang.String) -> d
    java.lang.String[] getSenderIds(android.content.Context) -> a
com.inhuasoft.smart.server.setup.EchoCancellerCalibrationFragment -> com.inhuasoft.smart.server.setup.a:
    android.os.Handler mHandler -> a
    boolean mSendEcCalibrationResult -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onEcCalibrationStatus(org.linphone.core.LinphoneCore$EcCalibratorStatus,int) -> a
    void enableEcCalibrationResultSending(boolean) -> a
    void sendEcCalibrationResult(org.linphone.core.LinphoneCore$EcCalibratorStatus,int) -> b
    android.os.Handler access$0(com.inhuasoft.smart.server.setup.EchoCancellerCalibrationFragment) -> a
com.inhuasoft.smart.server.setup.EchoCancellerCalibrationFragment$1 -> com.inhuasoft.smart.server.setup.b:
    java.lang.Runnable runFinished -> a
    com.inhuasoft.smart.server.setup.EchoCancellerCalibrationFragment this$0 -> b
    void onResponse(long,java.lang.Object) -> a
    void onError(long,de.timroes.axmlrpc.XMLRPCException) -> a
    void onServerError(long,de.timroes.axmlrpc.XMLRPCServerException) -> a
com.inhuasoft.smart.server.setup.EchoCancellerCalibrationFragment$1$1 -> com.inhuasoft.smart.server.setup.c:
    com.inhuasoft.smart.server.setup.EchoCancellerCalibrationFragment$1 this$1 -> a
    void run() -> run
com.inhuasoft.smart.server.setup.GenericLoginFragment -> com.inhuasoft.smart.server.setup.d:
    android.widget.EditText login -> a
    android.widget.EditText password -> b
    android.widget.EditText domain -> c
    android.widget.ImageView apply -> d
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.setup.LinphoneLoginFragment -> com.inhuasoft.smart.server.setup.e:
    android.widget.EditText login -> a
    android.widget.EditText password -> b
    android.widget.ImageView apply -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void linphoneLogIn() -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.setup.MenuFragment -> com.inhuasoft.smart.server.setup.f:
    android.widget.ImageView createAccount -> a
    android.widget.ImageView logLinphoneAccount -> b
    android.widget.ImageView logGenericAccount -> c
    android.widget.ImageView remoteProvisioning -> d
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.setup.RemoteProvisioningFragment -> com.inhuasoft.smart.server.setup.g:
    android.widget.EditText remoteProvisioningUrl -> a
    android.widget.ImageView apply -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.setup.RemoteProvisioningLoginActivity -> com.inhuasoft.smart.server.setup.RemoteProvisioningLoginActivity:
    android.widget.EditText login -> a
    android.widget.EditText password -> b
    android.widget.EditText domain -> c
    android.widget.RelativeLayout next -> d
    android.widget.RelativeLayout cancel -> e
    void onCreate(android.os.Bundle) -> onCreate
    void cancelWizard(boolean) -> a
    boolean storeAccount(java.lang.String,java.lang.String,java.lang.String) -> a
    void onClick(android.view.View) -> onClick
    void onBackPressed() -> onBackPressed
com.inhuasoft.smart.server.setup.SetupActivity -> com.inhuasoft.smart.server.setup.SetupActivity:
    com.inhuasoft.smart.server.setup.SetupActivity instance -> m
    android.widget.RelativeLayout back -> n
    android.widget.RelativeLayout next -> o
    android.widget.RelativeLayout cancel -> p
    com.inhuasoft.smart.server.setup.SetupFragmentsEnum currentFragment -> q
    com.inhuasoft.smart.server.setup.SetupFragmentsEnum firstFragment -> r
    android.support.v4.app.Fragment fragment -> s
    com.inhuasoft.smart.server.LinphonePreferences mPrefs -> t
    boolean accountCreated -> u
    android.os.Handler mHandler -> v
    com.inhuasoft.smart.server.LinphoneSimpleListener$LinphoneOnRegistrationStateChangedListener registrationListener -> w
    int[] $SWITCH_TABLE$com$inhuasoft$smart$server$setup$SetupFragmentsEnum -> x
    void onCreate(android.os.Bundle) -> onCreate
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    com.inhuasoft.smart.server.setup.SetupActivity instance() -> f
    void initUI() -> p
    void changeFragment(android.support.v4.app.Fragment) -> b
    void onClick(android.view.View) -> onClick
    void onBackPressed() -> onBackPressed
    void launchEchoCancellerCalibration(boolean) -> b
    void logIn(java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    void checkAccount(java.lang.String,java.lang.String,java.lang.String) -> a
    void linphoneLogIn(java.lang.String,java.lang.String,boolean) -> a
    void genericLogIn(java.lang.String,java.lang.String,java.lang.String) -> b
    void display(com.inhuasoft.smart.server.setup.SetupFragmentsEnum) -> a
    void displayWelcome() -> g
    void displayLoginGeneric() -> h
    void displayLoginLinphone() -> i
    void displayWizard() -> j
    void displayRemoteProvisioning() -> k
    void saveCreatedAccount(java.lang.String,java.lang.String,java.lang.String) -> c
    void displayWizardConfirm(java.lang.String) -> a
    void isAccountVerified() -> l
    void isEchoCalibrationFinished() -> m
    void success() -> n
    com.inhuasoft.smart.server.LinphoneSimpleListener$LinphoneOnRegistrationStateChangedListener access$0(com.inhuasoft.smart.server.setup.SetupActivity) -> a
    android.os.Handler access$1(com.inhuasoft.smart.server.setup.SetupActivity) -> b
    void access$2(com.inhuasoft.smart.server.setup.SetupActivity,boolean) -> a
    int[] $SWITCH_TABLE$com$inhuasoft$smart$server$setup$SetupFragmentsEnum() -> o
com.inhuasoft.smart.server.setup.SetupActivity$1 -> com.inhuasoft.smart.server.setup.h:
    com.inhuasoft.smart.server.setup.SetupActivity this$0 -> a
    void onRegistrationStateChanged(org.linphone.core.LinphoneCore$RegistrationState) -> a
    com.inhuasoft.smart.server.setup.SetupActivity access$0(com.inhuasoft.smart.server.setup.SetupActivity$1) -> a
com.inhuasoft.smart.server.setup.SetupActivity$1$1 -> com.inhuasoft.smart.server.setup.i:
    com.inhuasoft.smart.server.setup.SetupActivity$1 this$1 -> a
    void run() -> run
com.inhuasoft.smart.server.setup.SetupActivity$1$2 -> com.inhuasoft.smart.server.setup.j:
    com.inhuasoft.smart.server.setup.SetupActivity$1 this$1 -> a
    void run() -> run
com.inhuasoft.smart.server.setup.SetupFragmentsEnum -> com.inhuasoft.smart.server.setup.k:
    com.inhuasoft.smart.server.setup.SetupFragmentsEnum WELCOME -> a
    com.inhuasoft.smart.server.setup.SetupFragmentsEnum MENU -> b
    com.inhuasoft.smart.server.setup.SetupFragmentsEnum WIZARD -> c
    com.inhuasoft.smart.server.setup.SetupFragmentsEnum WIZARD_CONFIRM -> d
    com.inhuasoft.smart.server.setup.SetupFragmentsEnum LINPHONE_LOGIN -> e
    com.inhuasoft.smart.server.setup.SetupFragmentsEnum GENERIC_LOGIN -> f
    com.inhuasoft.smart.server.setup.SetupFragmentsEnum REMOTE_PROVISIONING -> g
    com.inhuasoft.smart.server.setup.SetupFragmentsEnum ECHO_CANCELLER_CALIBRATION -> h
    com.inhuasoft.smart.server.setup.SetupFragmentsEnum[] ENUM$VALUES -> i
    com.inhuasoft.smart.server.setup.SetupFragmentsEnum[] values() -> values
    com.inhuasoft.smart.server.setup.SetupFragmentsEnum valueOf(java.lang.String) -> valueOf
com.inhuasoft.smart.server.setup.WelcomeFragment -> com.inhuasoft.smart.server.setup.l:
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
com.inhuasoft.smart.server.setup.WizardConfirmFragment -> com.inhuasoft.smart.server.setup.m:
    java.lang.String username -> a
    android.os.Handler mHandler -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void isAccountVerified(java.lang.String) -> a
    java.lang.String access$0(com.inhuasoft.smart.server.setup.WizardConfirmFragment) -> a
    void access$1(com.inhuasoft.smart.server.setup.WizardConfirmFragment,java.lang.String) -> a
    android.os.Handler access$2(com.inhuasoft.smart.server.setup.WizardConfirmFragment) -> b
com.inhuasoft.smart.server.setup.WizardConfirmFragment$1 -> com.inhuasoft.smart.server.setup.n:
    com.inhuasoft.smart.server.setup.WizardConfirmFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.setup.WizardConfirmFragment$2 -> com.inhuasoft.smart.server.setup.o:
    com.inhuasoft.smart.server.setup.WizardConfirmFragment this$0 -> a
    void run() -> run
com.inhuasoft.smart.server.setup.WizardConfirmFragment$3 -> com.inhuasoft.smart.server.setup.p:
    java.lang.Runnable runNotOk -> a
    java.lang.Runnable runOk -> b
    com.inhuasoft.smart.server.setup.WizardConfirmFragment this$0 -> c
    java.lang.Runnable val$runNotReachable -> d
    void onResponse(long,java.lang.Object) -> a
    void onError(long,de.timroes.axmlrpc.XMLRPCException) -> a
    void onServerError(long,de.timroes.axmlrpc.XMLRPCServerException) -> a
    com.inhuasoft.smart.server.setup.WizardConfirmFragment access$0(com.inhuasoft.smart.server.setup.WizardConfirmFragment$3) -> a
com.inhuasoft.smart.server.setup.WizardConfirmFragment$3$1 -> com.inhuasoft.smart.server.setup.q:
    com.inhuasoft.smart.server.setup.WizardConfirmFragment$3 this$1 -> a
    void run() -> run
com.inhuasoft.smart.server.setup.WizardConfirmFragment$3$2 -> com.inhuasoft.smart.server.setup.r:
    com.inhuasoft.smart.server.setup.WizardConfirmFragment$3 this$1 -> a
    void run() -> run
com.inhuasoft.smart.server.setup.WizardFragment -> com.inhuasoft.smart.server.setup.s:
    android.os.Handler mHandler -> a
    android.widget.EditText username -> b
    android.widget.EditText password -> c
    android.widget.EditText passwordConfirm -> d
    android.widget.EditText email -> e
    boolean usernameOk -> f
    boolean passwordOk -> g
    boolean emailOk -> h
    boolean confirmPasswordOk -> i
    android.widget.ImageView createAccount -> W
    android.widget.TextView errorMessage -> X
    char[] acceptedChars -> Y
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    boolean isUsernameCorrect(java.lang.String) -> a
    void isUsernameRegistred(java.lang.String,android.widget.ImageView) -> a
    boolean isEmailCorrect(java.lang.String) -> b
    boolean isPasswordCorrect(java.lang.String) -> c
    void createAccount(java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    void addXMLRPCUsernameHandler(android.widget.EditText,android.widget.ImageView) -> a
    void addXMLRPCEmailHandler(android.widget.EditText,android.widget.ImageView) -> b
    void addXMLRPCPasswordHandler(android.widget.EditText,android.widget.ImageView) -> c
    void addXMLRPCConfirmPasswordHandler(android.widget.EditText,android.widget.EditText,android.widget.ImageView) -> a
    char[] access$0(com.inhuasoft.smart.server.setup.WizardFragment) -> a
    android.widget.EditText access$1(com.inhuasoft.smart.server.setup.WizardFragment) -> b
    android.widget.EditText access$2(com.inhuasoft.smart.server.setup.WizardFragment) -> c
    android.widget.EditText access$3(com.inhuasoft.smart.server.setup.WizardFragment) -> d
    void access$4(com.inhuasoft.smart.server.setup.WizardFragment,java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    android.widget.TextView access$5(com.inhuasoft.smart.server.setup.WizardFragment) -> e
    void access$6(com.inhuasoft.smart.server.setup.WizardFragment,boolean) -> a
    android.widget.ImageView access$7(com.inhuasoft.smart.server.setup.WizardFragment) -> f
    boolean access$8(com.inhuasoft.smart.server.setup.WizardFragment) -> g
    boolean access$9(com.inhuasoft.smart.server.setup.WizardFragment) -> h
    boolean access$10(com.inhuasoft.smart.server.setup.WizardFragment) -> i
    boolean access$11(com.inhuasoft.smart.server.setup.WizardFragment) -> j
    android.os.Handler access$12(com.inhuasoft.smart.server.setup.WizardFragment) -> k
    boolean access$13(com.inhuasoft.smart.server.setup.WizardFragment,java.lang.String) -> a
    void access$14(com.inhuasoft.smart.server.setup.WizardFragment,java.lang.String,android.widget.ImageView) -> a
    void access$15(com.inhuasoft.smart.server.setup.WizardFragment,boolean) -> b
    boolean access$16(com.inhuasoft.smart.server.setup.WizardFragment,java.lang.String) -> b
    void access$17(com.inhuasoft.smart.server.setup.WizardFragment,boolean) -> c
    boolean access$18(com.inhuasoft.smart.server.setup.WizardFragment,java.lang.String) -> c
    void access$19(com.inhuasoft.smart.server.setup.WizardFragment,boolean) -> d
com.inhuasoft.smart.server.setup.WizardFragment$1 -> com.inhuasoft.smart.server.setup.t:
    com.inhuasoft.smart.server.setup.WizardFragment this$0 -> a
    java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int) -> filter
com.inhuasoft.smart.server.setup.WizardFragment$10 -> com.inhuasoft.smart.server.setup.u:
    com.inhuasoft.smart.server.setup.WizardFragment this$0 -> a
    android.widget.EditText val$field1 -> b
    android.widget.EditText val$field2 -> c
    android.widget.ImageView val$icon -> d
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.inhuasoft.smart.server.setup.WizardFragment$2 -> com.inhuasoft.smart.server.setup.v:
    com.inhuasoft.smart.server.setup.WizardFragment this$0 -> a
    void onClick(android.view.View) -> onClick
    com.inhuasoft.smart.server.setup.WizardFragment access$0(com.inhuasoft.smart.server.setup.WizardFragment$2) -> a
com.inhuasoft.smart.server.setup.WizardFragment$2$1 -> com.inhuasoft.smart.server.setup.w:
    com.inhuasoft.smart.server.setup.WizardFragment$2 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.server.setup.WizardFragment$2$2 -> com.inhuasoft.smart.server.setup.x:
    com.inhuasoft.smart.server.setup.WizardFragment$2 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inhuasoft.smart.server.setup.WizardFragment$3 -> com.inhuasoft.smart.server.setup.y:
    com.inhuasoft.smart.server.setup.WizardFragment this$0 -> a
    android.widget.ImageView val$icon -> b
    void run() -> run
com.inhuasoft.smart.server.setup.WizardFragment$4 -> com.inhuasoft.smart.server.setup.z:
    java.lang.Runnable runNotOk -> a
    java.lang.Runnable runOk -> b
    com.inhuasoft.smart.server.setup.WizardFragment this$0 -> c
    java.lang.Runnable val$runNotReachable -> d
    void onResponse(long,java.lang.Object) -> a
    void onError(long,de.timroes.axmlrpc.XMLRPCException) -> a
    void onServerError(long,de.timroes.axmlrpc.XMLRPCServerException) -> a
    com.inhuasoft.smart.server.setup.WizardFragment access$0(com.inhuasoft.smart.server.setup.WizardFragment$4) -> a
com.inhuasoft.smart.server.setup.WizardFragment$4$1 -> com.inhuasoft.smart.server.setup.aa:
    com.inhuasoft.smart.server.setup.WizardFragment$4 this$1 -> a
    android.widget.ImageView val$icon -> b
    void run() -> run
com.inhuasoft.smart.server.setup.WizardFragment$4$2 -> com.inhuasoft.smart.server.setup.ab:
    com.inhuasoft.smart.server.setup.WizardFragment$4 this$1 -> a
    android.widget.ImageView val$icon -> b
    void run() -> run
com.inhuasoft.smart.server.setup.WizardFragment$5 -> com.inhuasoft.smart.server.setup.ac:
    com.inhuasoft.smart.server.setup.WizardFragment this$0 -> a
    void run() -> run
com.inhuasoft.smart.server.setup.WizardFragment$6 -> com.inhuasoft.smart.server.setup.ad:
    java.lang.Runnable runNotOk -> a
    java.lang.Runnable runOk -> b
    com.inhuasoft.smart.server.setup.WizardFragment this$0 -> c
    java.lang.Runnable val$runNotReachable -> d
    void onResponse(long,java.lang.Object) -> a
    void onError(long,de.timroes.axmlrpc.XMLRPCException) -> a
    void onServerError(long,de.timroes.axmlrpc.XMLRPCServerException) -> a
    com.inhuasoft.smart.server.setup.WizardFragment access$0(com.inhuasoft.smart.server.setup.WizardFragment$6) -> a
com.inhuasoft.smart.server.setup.WizardFragment$6$1 -> com.inhuasoft.smart.server.setup.ae:
    com.inhuasoft.smart.server.setup.WizardFragment$6 this$1 -> a
    void run() -> run
com.inhuasoft.smart.server.setup.WizardFragment$6$2 -> com.inhuasoft.smart.server.setup.af:
    com.inhuasoft.smart.server.setup.WizardFragment$6 this$1 -> a
    java.lang.String val$username -> b
    java.lang.String val$password -> c
    android.content.Context val$context -> d
    void run() -> run
com.inhuasoft.smart.server.setup.WizardFragment$7 -> com.inhuasoft.smart.server.setup.ag:
    com.inhuasoft.smart.server.setup.WizardFragment this$0 -> a
    android.widget.EditText val$field -> b
    android.widget.ImageView val$icon -> c
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.inhuasoft.smart.server.setup.WizardFragment$8 -> com.inhuasoft.smart.server.setup.ah:
    com.inhuasoft.smart.server.setup.WizardFragment this$0 -> a
    android.widget.EditText val$field -> b
    android.widget.ImageView val$icon -> c
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.inhuasoft.smart.server.setup.WizardFragment$9 -> com.inhuasoft.smart.server.setup.ai:
    com.inhuasoft.smart.server.setup.WizardFragment this$0 -> a
    android.widget.EditText val$field1 -> b
    android.widget.ImageView val$icon -> c
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.inhuasoft.smart.server.tutorials.AndroidTutorialNotifier -> com.inhuasoft.smart.server.tutorials.a:
    android.os.Handler mHandler -> a
    android.widget.TextView outputTextView -> b
    void notify(java.lang.String) -> notify
    android.widget.TextView access$0(com.inhuasoft.smart.server.tutorials.AndroidTutorialNotifier) -> a
com.inhuasoft.smart.server.tutorials.AndroidTutorialNotifier$1 -> com.inhuasoft.smart.server.tutorials.b:
    com.inhuasoft.smart.server.tutorials.AndroidTutorialNotifier this$0 -> a
    java.lang.String val$s -> b
    void run() -> run
com.inhuasoft.smart.server.tutorials.TutorialBuddyStatusActivity -> com.inhuasoft.smart.server.tutorials.TutorialBuddyStatusActivity:
    android.widget.TextView sipAddressWidget -> a
    android.widget.TextView mySipAddressWidget -> b
    android.widget.TextView mySipPasswordWidget -> c
    org.linphone.core.tutorials.TutorialBuddyStatus tutorial -> d
    android.os.Handler mHandler -> e
    android.widget.Button buttonCall -> f
    void onCreate(android.os.Bundle) -> onCreate
    android.widget.TextView access$0(com.inhuasoft.smart.server.tutorials.TutorialBuddyStatusActivity) -> a
    android.widget.TextView access$1(com.inhuasoft.smart.server.tutorials.TutorialBuddyStatusActivity) -> b
    org.linphone.core.tutorials.TutorialBuddyStatus access$2(com.inhuasoft.smart.server.tutorials.TutorialBuddyStatusActivity) -> c
    android.widget.TextView access$3(com.inhuasoft.smart.server.tutorials.TutorialBuddyStatusActivity) -> d
    android.os.Handler access$4(com.inhuasoft.smart.server.tutorials.TutorialBuddyStatusActivity) -> e
    android.widget.Button access$5(com.inhuasoft.smart.server.tutorials.TutorialBuddyStatusActivity) -> f
com.inhuasoft.smart.server.tutorials.TutorialBuddyStatusActivity$1 -> com.inhuasoft.smart.server.tutorials.c:
    com.inhuasoft.smart.server.tutorials.TutorialBuddyStatusActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.tutorials.TutorialBuddyStatusActivity$2 -> com.inhuasoft.smart.server.tutorials.d:
    com.inhuasoft.smart.server.tutorials.TutorialBuddyStatusActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.tutorials.TutorialBuddyStatusActivity$TutorialLaunchingThread -> com.inhuasoft.smart.server.tutorials.e:
    com.inhuasoft.smart.server.tutorials.TutorialBuddyStatusActivity this$0 -> a
    void run() -> run
    com.inhuasoft.smart.server.tutorials.TutorialBuddyStatusActivity access$1(com.inhuasoft.smart.server.tutorials.TutorialBuddyStatusActivity$TutorialLaunchingThread) -> a
com.inhuasoft.smart.server.tutorials.TutorialBuddyStatusActivity$TutorialLaunchingThread$1 -> com.inhuasoft.smart.server.tutorials.f:
    com.inhuasoft.smart.server.tutorials.TutorialBuddyStatusActivity$TutorialLaunchingThread this$1 -> a
    void run() -> run
com.inhuasoft.smart.server.tutorials.TutorialChatRoomActivity -> com.inhuasoft.smart.server.tutorials.TutorialChatRoomActivity:
    android.widget.TextView sipAddressWidget -> a
    org.linphone.core.tutorials.TutorialChatRoom tutorial -> b
    android.os.Handler mHandler -> c
    android.widget.Button buttonCall -> d
    void onCreate(android.os.Bundle) -> onCreate
    org.linphone.core.tutorials.TutorialChatRoom access$0(com.inhuasoft.smart.server.tutorials.TutorialChatRoomActivity) -> a
    android.widget.TextView access$1(com.inhuasoft.smart.server.tutorials.TutorialChatRoomActivity) -> b
    android.os.Handler access$2(com.inhuasoft.smart.server.tutorials.TutorialChatRoomActivity) -> c
    android.widget.Button access$3(com.inhuasoft.smart.server.tutorials.TutorialChatRoomActivity) -> d
com.inhuasoft.smart.server.tutorials.TutorialChatRoomActivity$1 -> com.inhuasoft.smart.server.tutorials.g:
    com.inhuasoft.smart.server.tutorials.TutorialChatRoomActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.tutorials.TutorialChatRoomActivity$2 -> com.inhuasoft.smart.server.tutorials.h:
    com.inhuasoft.smart.server.tutorials.TutorialChatRoomActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.tutorials.TutorialChatRoomActivity$TutorialLaunchingThread -> com.inhuasoft.smart.server.tutorials.i:
    com.inhuasoft.smart.server.tutorials.TutorialChatRoomActivity this$0 -> a
    void run() -> run
    com.inhuasoft.smart.server.tutorials.TutorialChatRoomActivity access$1(com.inhuasoft.smart.server.tutorials.TutorialChatRoomActivity$TutorialLaunchingThread) -> a
com.inhuasoft.smart.server.tutorials.TutorialChatRoomActivity$TutorialLaunchingThread$1 -> com.inhuasoft.smart.server.tutorials.j:
    com.inhuasoft.smart.server.tutorials.TutorialChatRoomActivity$TutorialLaunchingThread this$1 -> a
    void run() -> run
com.inhuasoft.smart.server.tutorials.TutorialHelloWorldActivity -> com.inhuasoft.smart.server.tutorials.TutorialHelloWorldActivity:
    android.widget.TextView sipAddressWidget -> a
    org.linphone.core.tutorials.TutorialHelloWorld tutorial -> b
    android.os.Handler mHandler -> c
    android.widget.Button buttonCall -> d
    void onCreate(android.os.Bundle) -> onCreate
    org.linphone.core.tutorials.TutorialHelloWorld access$0(com.inhuasoft.smart.server.tutorials.TutorialHelloWorldActivity) -> a
    android.widget.TextView access$1(com.inhuasoft.smart.server.tutorials.TutorialHelloWorldActivity) -> b
    android.os.Handler access$2(com.inhuasoft.smart.server.tutorials.TutorialHelloWorldActivity) -> c
    android.widget.Button access$3(com.inhuasoft.smart.server.tutorials.TutorialHelloWorldActivity) -> d
com.inhuasoft.smart.server.tutorials.TutorialHelloWorldActivity$1 -> com.inhuasoft.smart.server.tutorials.k:
    com.inhuasoft.smart.server.tutorials.TutorialHelloWorldActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.tutorials.TutorialHelloWorldActivity$2 -> com.inhuasoft.smart.server.tutorials.l:
    com.inhuasoft.smart.server.tutorials.TutorialHelloWorldActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.tutorials.TutorialHelloWorldActivity$TutorialLaunchingThread -> com.inhuasoft.smart.server.tutorials.m:
    com.inhuasoft.smart.server.tutorials.TutorialHelloWorldActivity this$0 -> a
    void run() -> run
    com.inhuasoft.smart.server.tutorials.TutorialHelloWorldActivity access$1(com.inhuasoft.smart.server.tutorials.TutorialHelloWorldActivity$TutorialLaunchingThread) -> a
com.inhuasoft.smart.server.tutorials.TutorialHelloWorldActivity$TutorialLaunchingThread$1 -> com.inhuasoft.smart.server.tutorials.n:
    com.inhuasoft.smart.server.tutorials.TutorialHelloWorldActivity$TutorialLaunchingThread this$1 -> a
    void run() -> run
com.inhuasoft.smart.server.tutorials.TutorialLauncherActivity -> com.inhuasoft.smart.server.tutorials.TutorialLauncherActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void startHelloWorldTutorial(android.view.View) -> startHelloWorldTutorial
    void startRegistrationTutorial(android.view.View) -> startRegistrationTutorial
    void startChatRoomTutorial(android.view.View) -> startChatRoomTutorial
    void startBuddyStatusTutorial(android.view.View) -> startBuddyStatusTutorial
com.inhuasoft.smart.server.tutorials.TutorialRegistrationActivity -> com.inhuasoft.smart.server.tutorials.TutorialRegistrationActivity:
    android.widget.TextView sipAddressWidget -> a
    android.widget.TextView sipPasswordWidget -> b
    org.linphone.core.tutorials.TutorialRegistration tutorial -> c
    android.widget.Button buttonCall -> d
    android.os.Handler mHandler -> e
    android.widget.TextView outputText -> f
    void onCreate(android.os.Bundle) -> onCreate
    org.linphone.core.tutorials.TutorialRegistration access$0(com.inhuasoft.smart.server.tutorials.TutorialRegistrationActivity) -> a
    android.widget.TextView access$1(com.inhuasoft.smart.server.tutorials.TutorialRegistrationActivity) -> b
    android.widget.TextView access$2(com.inhuasoft.smart.server.tutorials.TutorialRegistrationActivity) -> c
    android.widget.TextView access$3(com.inhuasoft.smart.server.tutorials.TutorialRegistrationActivity) -> d
    android.widget.Button access$4(com.inhuasoft.smart.server.tutorials.TutorialRegistrationActivity) -> e
com.inhuasoft.smart.server.tutorials.TutorialRegistrationActivity$1 -> com.inhuasoft.smart.server.tutorials.o:
    com.inhuasoft.smart.server.tutorials.TutorialRegistrationActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.tutorials.TutorialRegistrationActivity$2 -> com.inhuasoft.smart.server.tutorials.p:
    com.inhuasoft.smart.server.tutorials.TutorialRegistrationActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.tutorials.TutorialRegistrationActivity$TutorialLaunchingThread -> com.inhuasoft.smart.server.tutorials.q:
    com.inhuasoft.smart.server.tutorials.TutorialRegistrationActivity this$0 -> a
    void run() -> run
com.inhuasoft.smart.server.ui.AddressAware -> com.inhuasoft.smart.server.ui.a:
    void setAddressWidget(com.inhuasoft.smart.server.ui.AddressText) -> setAddressWidget
com.inhuasoft.smart.server.ui.AddressText -> com.inhuasoft.smart.server.ui.AddressText:
    java.lang.String displayedName -> a
    android.net.Uri pictureUri -> b
    android.graphics.Paint mTestPaint -> c
    com.inhuasoft.smart.server.DialerFragment dialer -> d
    void setPictureUri(android.net.Uri) -> setPictureUri
    android.net.Uri getPictureUri() -> getPictureUri
    void clearDisplayedName() -> a
    java.lang.String getDisplayedName() -> getDisplayedName
    void setDisplayedName(java.lang.String) -> setDisplayedName
    java.lang.String getHintText() -> getHintText
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    float getOptimizedTextSize(java.lang.String,int,int) -> a
    void refitText(int,int) -> a
    void onMeasure(int,int) -> onMeasure
    void setDialerFragment(com.inhuasoft.smart.server.DialerFragment) -> setDialerFragment
    java.lang.CharSequence getText() -> getText
com.inhuasoft.smart.server.ui.AvatarWithShadow -> com.inhuasoft.smart.server.ui.AvatarWithShadow:
    android.widget.ImageView contactPicture -> a
    android.widget.ImageView getView() -> getView
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setImageResource(int) -> setImageResource
com.inhuasoft.smart.server.ui.BubbleChat -> com.inhuasoft.smart.server.ui.b:
    java.util.HashMap emoticons -> a
    android.widget.RelativeLayout view -> b
    android.widget.ImageView statusView -> c
    android.widget.Button downloadOrShow -> d
    java.lang.String imageUrl -> e
    java.lang.String textMessage -> f
    org.linphone.core.LinphoneChatMessage$State state -> g
    org.linphone.core.LinphoneChatMessage nativeMessage -> h
    int id -> i
    void updateStatusView(org.linphone.core.LinphoneChatMessage$State) -> a
    android.view.View getView() -> a
    java.lang.String timestampToHumanDate(android.content.Context,long) -> a
    boolean isToday(java.util.Calendar) -> a
    boolean isSameDay(java.util.Calendar,java.util.Calendar) -> a
    android.text.Spannable getSmiledText(android.content.Context,android.text.Spanned) -> a
    android.text.Spanned getTextWithHttpLinks(java.lang.String) -> a
    void setShowOrDownloadImageButtonListener(android.view.View$OnClickListener) -> a
    void setShowOrDownloadText(java.lang.String) -> b
    void updateUrl(java.lang.String) -> c
    org.linphone.core.LinphoneChatMessage getNativeMessageObject() -> b
    void setNativeMessageObject(org.linphone.core.LinphoneChatMessage) -> a
    int getId() -> c
    java.lang.String access$0(com.inhuasoft.smart.server.ui.BubbleChat) -> a
com.inhuasoft.smart.server.ui.BubbleChat$1 -> com.inhuasoft.smart.server.ui.c:
    com.inhuasoft.smart.server.ui.BubbleChat this$0 -> a
    android.content.Context val$context -> b
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.ui.CallButton -> com.inhuasoft.smart.server.ui.CallButton:
    com.inhuasoft.smart.server.ui.AddressText mAddress -> a
    void setAddressWidget(com.inhuasoft.smart.server.ui.AddressText) -> setAddressWidget
    void setExternalClickListener(android.view.View$OnClickListener) -> setExternalClickListener
    void resetClickListener() -> a
    void onClick(android.view.View) -> onClick
    void onWrongDestinationAddress() -> b
com.inhuasoft.smart.server.ui.Digit -> com.inhuasoft.smart.server.ui.Digit:
    com.inhuasoft.smart.server.ui.AddressText mAddress -> a
    boolean mPlayDtmf -> b
    void setAddressWidget(com.inhuasoft.smart.server.ui.AddressText) -> setAddressWidget
    void setPlayDtmf(boolean) -> setPlayDtmf
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    boolean access$0(com.inhuasoft.smart.server.ui.Digit) -> a
    com.inhuasoft.smart.server.ui.AddressText access$1(com.inhuasoft.smart.server.ui.Digit) -> b
com.inhuasoft.smart.server.ui.Digit$DialKeyListener -> com.inhuasoft.smart.server.ui.d:
    char mKeyCode -> a
    boolean mIsDtmfStarted -> b
    com.inhuasoft.smart.server.ui.Digit this$0 -> c
    boolean linphoneServiceReady() -> a
    void onClick(android.view.View) -> onClick
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean onLongClick(android.view.View) -> onLongClick
com.inhuasoft.smart.server.ui.EraseButton -> com.inhuasoft.smart.server.ui.EraseButton:
    com.inhuasoft.smart.server.ui.AddressText address -> a
    void onClick(android.view.View) -> onClick
    boolean onLongClick(android.view.View) -> onLongClick
    void setAddressWidget(com.inhuasoft.smart.server.ui.AddressText) -> setAddressWidget
com.inhuasoft.smart.server.ui.LedPreference -> com.inhuasoft.smart.server.ui.e:
    int ledDrawable -> a
    void onBindView(android.view.View) -> onBindView
    void setLed(int) -> a
com.inhuasoft.smart.server.ui.LinphoneScrollView -> com.inhuasoft.smart.server.ui.LinphoneScrollView:
    com.inhuasoft.smart.server.ui.ScrollViewListener scrollViewListener -> a
    void setScrollViewListener(com.inhuasoft.smart.server.ui.ScrollViewListener) -> setScrollViewListener
    void onScrollChanged(int,int,int,int) -> onScrollChanged
com.inhuasoft.smart.server.ui.LinphoneSliders -> com.inhuasoft.smart.server.ui.LinphoneSliders:
    android.graphics.drawable.Drawable leftSliderImg -> a
    android.graphics.drawable.Drawable rightSliderImg -> b
    int leftSliderX -> c
    int rightSliderX -> d
    int slidersHeight -> e
    int slidersWidth -> f
    android.view.GestureDetector mGestures -> g
    com.inhuasoft.smart.server.ui.LinphoneSliders$LinphoneSliderTriggered mTriggerListener -> h
    boolean slidingLeftHandle -> i
    boolean slidingRightHandle -> j
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    void setOnTriggerListener(com.inhuasoft.smart.server.ui.LinphoneSliders$LinphoneSliderTriggered) -> setOnTriggerListener
com.inhuasoft.smart.server.ui.LinphoneSliders$LinphoneSliderTriggered -> com.inhuasoft.smart.server.ui.f:
    void onLeftHandleTriggered() -> c
    void onRightHandleTriggered() -> d
com.inhuasoft.smart.server.ui.Numpad -> com.inhuasoft.smart.server.ui.Numpad:
    boolean mPlayDtmf -> a
    void setPlayDtmf(boolean) -> setPlayDtmf
    void onFinishInflate() -> onFinishInflate
    void setAddressWidget(com.inhuasoft.smart.server.ui.AddressText) -> setAddressWidget
    java.util.Collection retrieveChildren(android.view.ViewGroup,java.lang.Class) -> a
com.inhuasoft.smart.server.ui.PreferencesListFragment -> com.inhuasoft.smart.server.ui.g:
    android.preference.PreferenceManager mPreferenceManager -> i
    android.os.Handler mHandler -> W
    android.widget.ListView preferencesList -> X
    int xmlResID -> Y
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onDestroyView() -> g
    void onCreate(android.os.Bundle) -> a
    void onStop() -> f
    void onDestroy() -> t
    void onSaveInstanceState(android.os.Bundle) -> e
    void onActivityResult(int,int,android.content.Intent) -> a
    void postBindPreferences() -> b
    void bindPreferences() -> c
    android.preference.PreferenceManager onCreatePreferenceManager() -> A
    void setPreferenceScreen(android.preference.PreferenceScreen) -> a
    android.preference.PreferenceScreen getPreferenceScreen() -> a
    void addPreferencesFromResource(int) -> c
    android.preference.Preference findPreference(java.lang.CharSequence) -> a
    void access$0(com.inhuasoft.smart.server.ui.PreferencesListFragment) -> a
com.inhuasoft.smart.server.ui.PreferencesListFragment$1 -> com.inhuasoft.smart.server.ui.h:
    com.inhuasoft.smart.server.ui.PreferencesListFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.inhuasoft.smart.server.ui.ScrollViewListener -> com.inhuasoft.smart.server.ui.i:
    void OnScrollToTop(int) -> a
com.inhuasoft.smart.server.ui.SlidingDrawer -> com.inhuasoft.smart.server.ui.SlidingDrawer:
    int mHandleId -> a
    int mContentId -> b
    android.view.View mHandle -> c
    android.view.View mContent -> d
    android.graphics.Rect mFrame -> e
    android.graphics.Rect mInvalidate -> f
    boolean mTracking -> g
    boolean mLocked -> h
    android.view.VelocityTracker mVelocityTracker -> i
    boolean mInvert -> j
    boolean mVertical -> k
    boolean mExpanded -> l
    int mBottomOffset -> m
    int mTopOffset -> n
    int mHandleHeight -> o
    int mHandleWidth -> p
    com.inhuasoft.smart.server.ui.SlidingDrawer$OnDrawerOpenListener mOnDrawerOpenListener -> q
    com.inhuasoft.smart.server.ui.SlidingDrawer$OnDrawerCloseListener mOnDrawerCloseListener -> r
    com.inhuasoft.smart.server.ui.SlidingDrawer$OnDrawerScrollListener mOnDrawerScrollListener -> s
    android.os.Handler mHandler -> t
    float mAnimatedAcceleration -> u
    float mAnimatedVelocity -> v
    float mAnimationPosition -> w
    long mAnimationLastTime -> x
    long mCurrentAnimationTime -> y
    int mTouchDelta -> z
    boolean mAnimating -> A
    boolean mAllowSingleTap -> B
    boolean mAnimateOnClick -> C
    int mTapThreshold -> D
    int mMaximumTapVelocity -> E
    int mMaximumMinorVelocity -> F
    int mMaximumMajorVelocity -> G
    int mMaximumAcceleration -> H
    int mVelocityUnits -> I
    void onFinishInflate() -> onFinishInflate
    void onMeasure(int,int) -> onMeasure
    int getCustomBottom() -> getCustomBottom
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void animateClose(int) -> a
    void animateOpen(int) -> b
    void performFling(int,float,boolean) -> a
    void prepareTracking(int) -> c
    void moveHandle(int) -> d
    void prepareContent() -> i
    void stopTracking() -> j
    void doAnimation() -> k
    void incrementAnimation() -> l
    void toggle() -> a
    void animateToggle() -> b
    void close() -> c
    void animateClose() -> d
    void animateOpen() -> e
    void closeDrawer() -> m
    void openDrawer() -> n
    void setOnDrawerOpenListener(com.inhuasoft.smart.server.ui.SlidingDrawer$OnDrawerOpenListener) -> setOnDrawerOpenListener
    void setOnDrawerCloseListener(com.inhuasoft.smart.server.ui.SlidingDrawer$OnDrawerCloseListener) -> setOnDrawerCloseListener
    void setOnDrawerScrollListener(com.inhuasoft.smart.server.ui.SlidingDrawer$OnDrawerScrollListener) -> setOnDrawerScrollListener
    android.view.View getHandle() -> getHandle
    android.view.View getContent() -> getContent
    void unlock() -> f
    void lock() -> g
    boolean isOpened() -> h
    boolean access$0(com.inhuasoft.smart.server.ui.SlidingDrawer) -> a
    boolean access$1(com.inhuasoft.smart.server.ui.SlidingDrawer) -> b
    void access$2(com.inhuasoft.smart.server.ui.SlidingDrawer) -> c
com.inhuasoft.smart.server.ui.SlidingDrawer$DrawerToggler -> com.inhuasoft.smart.server.ui.j:
    com.inhuasoft.smart.server.ui.SlidingDrawer this$0 -> a
    void onClick(android.view.View) -> onClick
com.inhuasoft.smart.server.ui.SlidingDrawer$OnDrawerCloseListener -> com.inhuasoft.smart.server.ui.k:
    void onDrawerClosed() -> a
com.inhuasoft.smart.server.ui.SlidingDrawer$OnDrawerOpenListener -> com.inhuasoft.smart.server.ui.l:
    void onDrawerOpened() -> a
com.inhuasoft.smart.server.ui.SlidingDrawer$OnDrawerScrollListener -> com.inhuasoft.smart.server.ui.m:
    void onScrollStarted() -> a
    void onScrollEnded() -> b
com.inhuasoft.smart.server.ui.SlidingDrawer$SlidingHandler -> com.inhuasoft.smart.server.ui.n:
    com.inhuasoft.smart.server.ui.SlidingDrawer this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
de.timroes.axmlrpc.AuthenticationManager -> a.a.a.a:
    java.lang.String user -> a
    java.lang.String pass -> b
    void setAuthentication(java.net.HttpURLConnection) -> a
de.timroes.axmlrpc.Call -> a.a.a.b:
    java.lang.String method -> a
    java.lang.Object[] params -> b
    java.lang.String getXML() -> a
    de.timroes.axmlrpc.xmlcreator.XmlElement getXMLParam(java.lang.Object) -> a
de.timroes.axmlrpc.CookieManager -> a.a.a.c:
    int flags -> a
    java.util.Map cookies -> b
    void readCookies(java.net.HttpURLConnection) -> a
    void setCookies(java.net.HttpURLConnection) -> b
de.timroes.axmlrpc.ResponseParser -> a.a.a.d:
    java.lang.Object parse(java.io.InputStream) -> a
    java.lang.Object getReturnValueFromElement(org.w3c.dom.Element) -> a
de.timroes.axmlrpc.XMLRPCCallback -> a.a.a.e:
    void onResponse(long,java.lang.Object) -> a
    void onError(long,de.timroes.axmlrpc.XMLRPCException) -> a
    void onServerError(long,de.timroes.axmlrpc.XMLRPCServerException) -> a
de.timroes.axmlrpc.XMLRPCClient -> a.a.a.f:
    int flags -> a
    java.net.URL url -> b
    java.lang.String forcedCN -> c
    java.util.Map httpParameters -> d
    java.util.Map backgroundCalls -> e
    de.timroes.axmlrpc.ResponseParser responseParser -> f
    de.timroes.axmlrpc.CookieManager cookieManager -> g
    de.timroes.axmlrpc.AuthenticationManager authManager -> h
    javax.net.ssl.TrustManager[] trustAllManagers -> i
    long callAsync(de.timroes.axmlrpc.XMLRPCCallback,java.lang.String,java.lang.Object[]) -> a
    de.timroes.axmlrpc.Call createCall(java.lang.String,java.lang.Object[]) -> a
    boolean isFlagSet(int) -> a
    java.util.Map access$0(de.timroes.axmlrpc.XMLRPCClient) -> a
    de.timroes.axmlrpc.Call access$1(de.timroes.axmlrpc.XMLRPCClient,java.lang.String,java.lang.Object[]) -> a
    java.net.URL access$2(de.timroes.axmlrpc.XMLRPCClient) -> b
    java.util.Map access$3(de.timroes.axmlrpc.XMLRPCClient) -> c
    de.timroes.axmlrpc.AuthenticationManager access$4(de.timroes.axmlrpc.XMLRPCClient) -> d
    de.timroes.axmlrpc.CookieManager access$5(de.timroes.axmlrpc.XMLRPCClient) -> e
    boolean access$6(de.timroes.axmlrpc.XMLRPCClient,int) -> a
    void access$7(de.timroes.axmlrpc.XMLRPCClient,java.net.URL) -> a
    de.timroes.axmlrpc.ResponseParser access$8(de.timroes.axmlrpc.XMLRPCClient) -> f
    java.lang.String access$9(de.timroes.axmlrpc.XMLRPCClient) -> g
    javax.net.ssl.TrustManager[] access$10(de.timroes.axmlrpc.XMLRPCClient) -> h
    void access$11(de.timroes.axmlrpc.XMLRPCClient,javax.net.ssl.TrustManager[]) -> a
de.timroes.axmlrpc.XMLRPCClient$Caller -> a.a.a.g:
    de.timroes.axmlrpc.XMLRPCCallback listener -> b
    long threadId -> c
    java.lang.String methodName -> d
    java.lang.Object[] params -> e
    boolean canceled -> f
    java.net.HttpURLConnection http -> g
    de.timroes.axmlrpc.XMLRPCClient this$0 -> a
    void run() -> run
    java.lang.Object call(java.lang.String,java.lang.Object[]) -> a
    java.lang.String extractCN(java.lang.String) -> a
    java.net.HttpURLConnection verifyConnection(java.net.URLConnection) -> a
    java.lang.String access$0(de.timroes.axmlrpc.XMLRPCClient$Caller,java.lang.String) -> a
    de.timroes.axmlrpc.XMLRPCClient access$1(de.timroes.axmlrpc.XMLRPCClient$Caller) -> a
de.timroes.axmlrpc.XMLRPCClient$Caller$1 -> a.a.a.h:
    de.timroes.axmlrpc.XMLRPCClient$Caller this$1 -> a
    boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
de.timroes.axmlrpc.XMLRPCClient$Caller$2 -> a.a.a.i:
    de.timroes.axmlrpc.XMLRPCClient$Caller this$1 -> a
    boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
de.timroes.axmlrpc.XMLRPCClient$Caller$3 -> a.a.a.j:
    de.timroes.axmlrpc.XMLRPCClient$Caller this$1 -> a
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
de.timroes.axmlrpc.XMLRPCClient$CancelException -> a.a.a.k:
    de.timroes.axmlrpc.XMLRPCClient this$0 -> a
de.timroes.axmlrpc.XMLRPCException -> a.a.a.l:
de.timroes.axmlrpc.XMLRPCRuntimeException -> a.a.a.m:
de.timroes.axmlrpc.XMLRPCServerException -> a.a.a.n:
    int errornr -> a
    java.lang.String getMessage() -> getMessage
de.timroes.axmlrpc.XMLUtil -> a.a.a.o:
    org.w3c.dom.Element getOnlyChildElement(org.w3c.dom.NodeList) -> a
    java.lang.String getOnlyTextContent(org.w3c.dom.NodeList) -> b
    boolean hasChildElement(org.w3c.dom.NodeList) -> c
    de.timroes.axmlrpc.xmlcreator.XmlElement makeXmlTag(java.lang.String,java.lang.String) -> a
de.timroes.axmlrpc.serializer.ArraySerializer -> a.a.a.a.a:
    java.lang.Object deserialize(org.w3c.dom.Element) -> a
    de.timroes.axmlrpc.xmlcreator.XmlElement serialize(java.lang.Object) -> a
de.timroes.axmlrpc.serializer.Base64Serializer -> a.a.a.a.b:
    java.lang.Object deserialize(org.w3c.dom.Element) -> a
    de.timroes.axmlrpc.xmlcreator.XmlElement serialize(java.lang.Object) -> a
de.timroes.axmlrpc.serializer.BooleanSerializer -> a.a.a.a.c:
    java.lang.Object deserialize(org.w3c.dom.Element) -> a
    de.timroes.axmlrpc.xmlcreator.XmlElement serialize(java.lang.Object) -> a
de.timroes.axmlrpc.serializer.DateTimeSerializer -> a.a.a.a.d:
    java.text.SimpleDateFormat DATE_FORMATER -> a
    java.lang.Object deserialize(org.w3c.dom.Element) -> a
    de.timroes.axmlrpc.xmlcreator.XmlElement serialize(java.lang.Object) -> a
de.timroes.axmlrpc.serializer.DoubleSerializer -> a.a.a.a.e:
    java.lang.Object deserialize(org.w3c.dom.Element) -> a
    de.timroes.axmlrpc.xmlcreator.XmlElement serialize(java.lang.Object) -> a
de.timroes.axmlrpc.serializer.IntSerializer -> a.a.a.a.f:
    java.lang.Object deserialize(org.w3c.dom.Element) -> a
    de.timroes.axmlrpc.xmlcreator.XmlElement serialize(java.lang.Object) -> a
de.timroes.axmlrpc.serializer.LongSerializer -> a.a.a.a.g:
    java.lang.Object deserialize(org.w3c.dom.Element) -> a
    de.timroes.axmlrpc.xmlcreator.XmlElement serialize(java.lang.Object) -> a
de.timroes.axmlrpc.serializer.NullSerializer -> a.a.a.a.h:
    java.lang.Object deserialize(org.w3c.dom.Element) -> a
    de.timroes.axmlrpc.xmlcreator.XmlElement serialize(java.lang.Object) -> a
de.timroes.axmlrpc.serializer.Serializer -> a.a.a.a.i:
    java.lang.Object deserialize(org.w3c.dom.Element) -> a
    de.timroes.axmlrpc.xmlcreator.XmlElement serialize(java.lang.Object) -> a
de.timroes.axmlrpc.serializer.SerializerHandler -> a.a.a.a.j:
    de.timroes.axmlrpc.serializer.SerializerHandler instance -> a
    de.timroes.axmlrpc.serializer.StringSerializer string -> b
    de.timroes.axmlrpc.serializer.BooleanSerializer bool -> c
    de.timroes.axmlrpc.serializer.IntSerializer integer -> d
    de.timroes.axmlrpc.serializer.LongSerializer long8 -> e
    de.timroes.axmlrpc.serializer.StructSerializer struct -> f
    de.timroes.axmlrpc.serializer.DoubleSerializer floating -> g
    de.timroes.axmlrpc.serializer.DateTimeSerializer datetime -> h
    de.timroes.axmlrpc.serializer.ArraySerializer array -> i
    de.timroes.axmlrpc.serializer.Base64Serializer base64 -> j
    de.timroes.axmlrpc.serializer.NullSerializer nil -> k
    int flags -> l
    void initialize(int) -> a
    de.timroes.axmlrpc.serializer.SerializerHandler getDefault() -> a
    java.lang.Object deserialize(org.w3c.dom.Element) -> a
    de.timroes.axmlrpc.xmlcreator.XmlElement serialize(java.lang.Object) -> a
de.timroes.axmlrpc.serializer.StringSerializer -> a.a.a.a.k:
    java.lang.Object deserialize(org.w3c.dom.Element) -> a
    de.timroes.axmlrpc.xmlcreator.XmlElement serialize(java.lang.Object) -> a
de.timroes.axmlrpc.serializer.StructSerializer -> a.a.a.a.l:
    java.lang.Object deserialize(org.w3c.dom.Element) -> a
    de.timroes.axmlrpc.xmlcreator.XmlElement serialize(java.lang.Object) -> a
de.timroes.axmlrpc.xmlcreator.SimpleXMLCreator -> a.a.a.b.a:
    de.timroes.axmlrpc.xmlcreator.XmlElement root -> a
    void setRootElement(de.timroes.axmlrpc.xmlcreator.XmlElement) -> a
    java.lang.String toString() -> toString
de.timroes.axmlrpc.xmlcreator.XmlElement -> a.a.a.b.b:
    java.util.List children -> a
    java.lang.String name -> b
    java.lang.String content -> c
    void addChildren(de.timroes.axmlrpc.xmlcreator.XmlElement) -> a
    void setContent(java.lang.String) -> a
    java.lang.String toString() -> toString
de.timroes.base64.Base64 -> a.a.b.a:
    char[] code -> a
    java.util.HashMap map -> b
    byte[] decode(java.lang.String) -> a
    java.lang.String encode(java.lang.String) -> b
    java.lang.String encode(java.lang.Byte[]) -> a
    java.lang.String encode(byte[]) -> a
    byte[] encodeAsBytes(byte[]) -> b
org.linphone.core.CallDirection -> org.linphone.core.CallDirection:
    org.linphone.core.CallDirection Outgoing -> Outgoing
    org.linphone.core.CallDirection Incoming -> Incoming
    java.lang.String mStringValue -> mStringValue
    java.lang.String toString() -> toString
org.linphone.core.ErrorInfo -> org.linphone.core.ErrorInfo:
    org.linphone.core.Reason getReason() -> getReason
    int getProtocolCode() -> getProtocolCode
    java.lang.String getPhrase() -> getPhrase
    java.lang.String getDetails() -> getDetails
org.linphone.core.ErrorInfoImpl -> org.linphone.core.ErrorInfoImpl:
    org.linphone.core.Reason mReason -> mReason
    int mCode -> mCode
    java.lang.String mPhrase -> mPhrase
    java.lang.String mDetails -> mDetails
    int getReason(long) -> getReason
    int getProtocolCode(long) -> getProtocolCode
    java.lang.String getPhrase(long) -> getPhrase
    java.lang.String getDetails(long) -> getDetails
    org.linphone.core.Reason getReason() -> getReason
    int getProtocolCode() -> getProtocolCode
    java.lang.String getPhrase() -> getPhrase
    java.lang.String getDetails() -> getDetails
org.linphone.core.LinphoneAddress -> org.linphone.core.LinphoneAddress:
    java.lang.String getDisplayName() -> getDisplayName
    java.lang.String getUserName() -> getUserName
    java.lang.String getDomain() -> getDomain
    java.lang.String getPort() -> getPort
    int getPortInt() -> getPortInt
    void setDisplayName(java.lang.String) -> setDisplayName
    void setUserName(java.lang.String) -> setUserName
    void setDomain(java.lang.String) -> setDomain
    void setPort(java.lang.String) -> setPort
    void setPortInt(int) -> setPortInt
    void clean() -> clean
    java.lang.String asString() -> asString
    java.lang.String asStringUriOnly() -> asStringUriOnly
    java.lang.String toString() -> toString
    org.linphone.core.LinphoneAddress$TransportType getTransport() -> getTransport
    void setTransport(org.linphone.core.LinphoneAddress$TransportType) -> setTransport
org.linphone.core.LinphoneAddress$TransportType -> org.linphone.core.LinphoneAddress$TransportType:
    java.util.Vector values -> values
    org.linphone.core.LinphoneAddress$TransportType LinphoneTransportUdp -> LinphoneTransportUdp
    org.linphone.core.LinphoneAddress$TransportType LinphoneTransportTcp -> LinphoneTransportTcp
    org.linphone.core.LinphoneAddress$TransportType LinphoneTransportTls -> LinphoneTransportTls
    int mValue -> mValue
    java.lang.String mStringValue -> mStringValue
    org.linphone.core.LinphoneAddress$TransportType fromInt(int) -> fromInt
    java.lang.String toString() -> toString
    int toInt() -> toInt
org.linphone.core.LinphoneAddressImpl -> org.linphone.core.LinphoneAddressImpl:
    long nativePtr -> nativePtr
    int[] $SWITCH_TABLE$org$linphone$core$LinphoneAddressImpl$WrapMode -> $SWITCH_TABLE$org$linphone$core$LinphoneAddressImpl$WrapMode
    long newLinphoneAddressImpl(java.lang.String,java.lang.String) -> newLinphoneAddressImpl
    long ref(long) -> ref
    void unref(long) -> unref
    long clone(long) -> clone
    java.lang.String getDisplayName(long) -> getDisplayName
    java.lang.String getUserName(long) -> getUserName
    java.lang.String getDomain(long) -> getDomain
    int getTransport(long) -> getTransport
    java.lang.String toUri(long) -> toUri
    void setDisplayName(long,java.lang.String) -> setDisplayName
    void setDomain(long,java.lang.String) -> setDomain
    void setUserName(long,java.lang.String) -> setUserName
    void setTransport(long,int) -> setTransport
    java.lang.String toString(long) -> toString
    void finalize() -> finalize
    java.lang.String getDisplayName() -> getDisplayName
    java.lang.String getDomain() -> getDomain
    java.lang.String getUserName() -> getUserName
    org.linphone.core.LinphoneAddress$TransportType getTransport() -> getTransport
    java.lang.String toString() -> toString
    java.lang.String toUri() -> toUri
    void setDisplayName(java.lang.String) -> setDisplayName
    java.lang.String asString() -> asString
    java.lang.String asStringUriOnly() -> asStringUriOnly
    void clean() -> clean
    java.lang.String getPort() -> getPort
    int getPortInt() -> getPortInt
    void setDomain(java.lang.String) -> setDomain
    void setPort(java.lang.String) -> setPort
    void setPortInt(int) -> setPortInt
    void setUserName(java.lang.String) -> setUserName
    void setTransport(org.linphone.core.LinphoneAddress$TransportType) -> setTransport
    int[] $SWITCH_TABLE$org$linphone$core$LinphoneAddressImpl$WrapMode() -> $SWITCH_TABLE$org$linphone$core$LinphoneAddressImpl$WrapMode
org.linphone.core.LinphoneAddressImpl$WrapMode -> org.linphone.core.LinphoneAddressImpl$WrapMode:
    org.linphone.core.LinphoneAddressImpl$WrapMode FromNew -> FromNew
    org.linphone.core.LinphoneAddressImpl$WrapMode FromConst -> FromConst
    org.linphone.core.LinphoneAddressImpl$WrapMode FromExisting -> FromExisting
    org.linphone.core.LinphoneAddressImpl$WrapMode[] ENUM$VALUES -> ENUM$VALUES
    org.linphone.core.LinphoneAddressImpl$WrapMode[] values() -> values
    org.linphone.core.LinphoneAddressImpl$WrapMode valueOf(java.lang.String) -> valueOf
org.linphone.core.LinphoneAuthInfo -> org.linphone.core.LinphoneAuthInfo:
    java.lang.String getUsername() -> getUsername
    void setUsername(java.lang.String) -> setUsername
    java.lang.String getPassword() -> getPassword
    void setPassword(java.lang.String) -> setPassword
    java.lang.String getRealm() -> getRealm
    void setRealm(java.lang.String) -> setRealm
    java.lang.String getUserId() -> getUserId
    void setUserId(java.lang.String) -> setUserId
    java.lang.String getHa1() -> getHa1
    void setHa1(java.lang.String) -> setHa1
    void setDomain(java.lang.String) -> setDomain
    java.lang.String getDomain() -> getDomain
    org.linphone.core.LinphoneAuthInfo clone() -> clone
org.linphone.core.LinphoneAuthInfoImpl -> org.linphone.core.LinphoneAuthInfoImpl:
    long nativePtr -> nativePtr
    boolean ownPtr -> ownPtr
    long newLinphoneAuthInfo() -> newLinphoneAuthInfo
    void delete(long) -> delete
    java.lang.String getPassword(long) -> getPassword
    java.lang.String getRealm(long) -> getRealm
    java.lang.String getUsername(long) -> getUsername
    void setPassword(long,java.lang.String) -> setPassword
    void setRealm(long,java.lang.String) -> setRealm
    void setUsername(long,java.lang.String) -> setUsername
    void setUserId(long,java.lang.String) -> setUserId
    void setHa1(long,java.lang.String) -> setHa1
    java.lang.String getUserId(long) -> getUserId
    java.lang.String getHa1(long) -> getHa1
    java.lang.String getDomain(long) -> getDomain
    void setDomain(long,java.lang.String) -> setDomain
    void finalize() -> finalize
    java.lang.String getPassword() -> getPassword
    java.lang.String getRealm() -> getRealm
    java.lang.String getUsername() -> getUsername
    void setPassword(java.lang.String) -> setPassword
    void setRealm(java.lang.String) -> setRealm
    void setUsername(java.lang.String) -> setUsername
    java.lang.String getUserId() -> getUserId
    void setUserId(java.lang.String) -> setUserId
    java.lang.String getHa1() -> getHa1
    void setHa1(java.lang.String) -> setHa1
    void setDomain(java.lang.String) -> setDomain
    java.lang.String getDomain() -> getDomain
    org.linphone.core.LinphoneAuthInfo clone() -> clone
    java.lang.Object clone() -> clone
org.linphone.core.LinphoneCall -> org.linphone.core.LinphoneCall:
    org.linphone.core.LinphoneCall$State getState() -> getState
    org.linphone.core.LinphoneAddress getRemoteAddress() -> getRemoteAddress
    org.linphone.core.CallDirection getDirection() -> getDirection
    org.linphone.core.LinphoneCallLog getCallLog() -> getCallLog
    org.linphone.core.LinphoneCallStats getAudioStats() -> getAudioStats
    org.linphone.core.LinphoneCallStats getVideoStats() -> getVideoStats
    org.linphone.core.LinphoneCallParams getRemoteParams() -> getRemoteParams
    org.linphone.core.LinphoneCallParams getCurrentParamsCopy() -> getCurrentParamsCopy
    void enableCamera(boolean) -> enableCamera
    boolean cameraEnabled() -> cameraEnabled
    void enableEchoCancellation(boolean) -> enableEchoCancellation
    boolean isEchoCancellationEnabled() -> isEchoCancellationEnabled
    void enableEchoLimiter(boolean) -> enableEchoLimiter
    boolean isEchoLimiterEnabled() -> isEchoLimiterEnabled
    org.linphone.core.LinphoneCall getReplacedCall() -> getReplacedCall
    int getDuration() -> getDuration
    float getCurrentQuality() -> getCurrentQuality
    float getAverageQuality() -> getAverageQuality
    java.lang.String getAuthenticationToken() -> getAuthenticationToken
    boolean isAuthenticationTokenVerified() -> isAuthenticationTokenVerified
    void setAuthenticationTokenVerified(boolean) -> setAuthenticationTokenVerified
    boolean isInConference() -> isInConference
    float getPlayVolume() -> getPlayVolume
    java.lang.String getRemoteUserAgent() -> getRemoteUserAgent
    java.lang.String getRemoteContact() -> getRemoteContact
    void takeSnapshot(java.lang.String) -> takeSnapshot
    void zoomVideo(float,float,float) -> zoomVideo
    void startRecording() -> startRecording
    void stopRecording() -> stopRecording
    org.linphone.core.LinphoneCall$State getTransferState() -> getTransferState
    void sendInfoMessage(org.linphone.core.LinphoneInfoMessage) -> sendInfoMessage
    org.linphone.core.LinphoneCall getTransfererCall() -> getTransfererCall
    org.linphone.core.LinphoneCall getTransferTargetCall() -> getTransferTargetCall
    org.linphone.core.Reason getReason() -> getReason
    org.linphone.core.ErrorInfo getErrorInfo() -> getErrorInfo
org.linphone.core.LinphoneCall$State -> org.linphone.core.LinphoneCall$State:
    java.util.Vector values -> values
    int mValue -> mValue
    java.lang.String mStringValue -> mStringValue
    org.linphone.core.LinphoneCall$State Idle -> Idle
    org.linphone.core.LinphoneCall$State IncomingReceived -> IncomingReceived
    org.linphone.core.LinphoneCall$State OutgoingInit -> OutgoingInit
    org.linphone.core.LinphoneCall$State OutgoingProgress -> OutgoingProgress
    org.linphone.core.LinphoneCall$State OutgoingRinging -> OutgoingRinging
    org.linphone.core.LinphoneCall$State OutgoingEarlyMedia -> OutgoingEarlyMedia
    org.linphone.core.LinphoneCall$State Connected -> Connected
    org.linphone.core.LinphoneCall$State StreamsRunning -> StreamsRunning
    org.linphone.core.LinphoneCall$State Pausing -> Pausing
    org.linphone.core.LinphoneCall$State Paused -> Paused
    org.linphone.core.LinphoneCall$State Resuming -> Resuming
    org.linphone.core.LinphoneCall$State Refered -> Refered
    org.linphone.core.LinphoneCall$State Error -> Error
    org.linphone.core.LinphoneCall$State CallEnd -> CallEnd
    org.linphone.core.LinphoneCall$State PausedByRemote -> PausedByRemote
    org.linphone.core.LinphoneCall$State CallUpdatedByRemote -> CallUpdatedByRemote
    org.linphone.core.LinphoneCall$State CallIncomingEarlyMedia -> CallIncomingEarlyMedia
    org.linphone.core.LinphoneCall$State CallUpdating -> CallUpdating
    org.linphone.core.LinphoneCall$State CallReleased -> CallReleased
    int value() -> value
    org.linphone.core.LinphoneCall$State fromInt(int) -> fromInt
    java.lang.String toString() -> toString
org.linphone.core.LinphoneCallImpl -> org.linphone.core.LinphoneCallImpl:
    long nativePtr -> nativePtr
    boolean ownPtr -> ownPtr
    org.linphone.core.LinphoneCallStats audioStats -> audioStats
    org.linphone.core.LinphoneCallStats videoStats -> videoStats
    void finalize(long) -> finalize
    long getCallLog(long) -> getCallLog
    boolean isIncoming(long) -> isIncoming
    long getRemoteAddress(long) -> getRemoteAddress
    int getState(long) -> getState
    long getCurrentParamsCopy(long) -> getCurrentParamsCopy
    long getRemoteParams(long) -> getRemoteParams
    void enableCamera(long,boolean) -> enableCamera
    boolean cameraEnabled(long) -> cameraEnabled
    void enableEchoCancellation(long,boolean) -> enableEchoCancellation
    boolean isEchoCancellationEnabled(long) -> isEchoCancellationEnabled
    void enableEchoLimiter(long,boolean) -> enableEchoLimiter
    boolean isEchoLimiterEnabled(long) -> isEchoLimiterEnabled
    java.lang.Object getReplacedCall(long) -> getReplacedCall
    int getDuration(long) -> getDuration
    float getCurrentQuality(long) -> getCurrentQuality
    float getAverageQuality(long) -> getAverageQuality
    void finalize() -> finalize
    org.linphone.core.LinphoneCallLog getCallLog() -> getCallLog
    void setAudioStats(org.linphone.core.LinphoneCallStats) -> setAudioStats
    void setVideoStats(org.linphone.core.LinphoneCallStats) -> setVideoStats
    org.linphone.core.LinphoneCallStats getAudioStats() -> getAudioStats
    org.linphone.core.LinphoneCallStats getVideoStats() -> getVideoStats
    org.linphone.core.CallDirection getDirection() -> getDirection
    org.linphone.core.LinphoneAddress getRemoteAddress() -> getRemoteAddress
    org.linphone.core.LinphoneCall$State getState() -> getState
    org.linphone.core.LinphoneCallParams getCurrentParamsCopy() -> getCurrentParamsCopy
    org.linphone.core.LinphoneCallParams getRemoteParams() -> getRemoteParams
    void enableCamera(boolean) -> enableCamera
    boolean cameraEnabled() -> cameraEnabled
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void enableEchoCancellation(boolean) -> enableEchoCancellation
    boolean isEchoCancellationEnabled() -> isEchoCancellationEnabled
    void enableEchoLimiter(boolean) -> enableEchoLimiter
    boolean isEchoLimiterEnabled() -> isEchoLimiterEnabled
    org.linphone.core.LinphoneCall getReplacedCall() -> getReplacedCall
    int getDuration() -> getDuration
    float getAverageQuality() -> getAverageQuality
    float getCurrentQuality() -> getCurrentQuality
    java.lang.String getAuthenticationToken(long) -> getAuthenticationToken
    java.lang.String getAuthenticationToken() -> getAuthenticationToken
    boolean isAuthenticationTokenVerified(long) -> isAuthenticationTokenVerified
    boolean isAuthenticationTokenVerified() -> isAuthenticationTokenVerified
    void setAuthenticationTokenVerified(long,boolean) -> setAuthenticationTokenVerified
    void setAuthenticationTokenVerified(boolean) -> setAuthenticationTokenVerified
    boolean isInConference() -> isInConference
    java.lang.String toString() -> toString
    float getPlayVolume(long) -> getPlayVolume
    float getPlayVolume() -> getPlayVolume
    java.lang.String getRemoteUserAgent(long) -> getRemoteUserAgent
    java.lang.String getRemoteUserAgent() -> getRemoteUserAgent
    java.lang.String getRemoteContact(long) -> getRemoteContact
    java.lang.String getRemoteContact() -> getRemoteContact
    void takeSnapshot(long,java.lang.String) -> takeSnapshot
    void takeSnapshot(java.lang.String) -> takeSnapshot
    void zoomVideo(long,float,float,float) -> zoomVideo
    void zoomVideo(float,float,float) -> zoomVideo
    void startRecording(long) -> startRecording
    void startRecording() -> startRecording
    void stopRecording(long) -> stopRecording
    void stopRecording() -> stopRecording
    int getTransferState(long) -> getTransferState
    org.linphone.core.LinphoneCall$State getTransferState() -> getTransferState
    int sendInfoMessage(long,long) -> sendInfoMessage
    void sendInfoMessage(org.linphone.core.LinphoneInfoMessage) -> sendInfoMessage
    java.lang.Object getTransfererCall(long) -> getTransfererCall
    org.linphone.core.LinphoneCall getTransfererCall() -> getTransfererCall
    java.lang.Object getTransferTargetCall(long) -> getTransferTargetCall
    org.linphone.core.LinphoneCall getTransferTargetCall() -> getTransferTargetCall
    org.linphone.core.Reason getReason() -> getReason
    long getErrorInfo(long) -> getErrorInfo
    org.linphone.core.ErrorInfo getErrorInfo() -> getErrorInfo
org.linphone.core.LinphoneCallLog -> org.linphone.core.LinphoneCallLog:
    org.linphone.core.LinphoneAddress getFrom() -> getFrom
    org.linphone.core.LinphoneAddress getTo() -> getTo
    org.linphone.core.CallDirection getDirection() -> getDirection
    org.linphone.core.LinphoneCallLog$CallStatus getStatus() -> getStatus
    java.lang.String getStartDate() -> getStartDate
    long getTimestamp() -> getTimestamp
    int getCallDuration() -> getCallDuration
    int getCallId() -> getCallId
org.linphone.core.LinphoneCallLog$CallStatus -> org.linphone.core.LinphoneCallLog$CallStatus:
    java.util.Vector values -> values
    int mValue -> mValue
    java.lang.String mStringValue -> mStringValue
    org.linphone.core.LinphoneCallLog$CallStatus Success -> Success
    org.linphone.core.LinphoneCallLog$CallStatus Aborted -> Aborted
    org.linphone.core.LinphoneCallLog$CallStatus Missed -> Missed
    org.linphone.core.LinphoneCallLog$CallStatus Declined -> Declined
    org.linphone.core.LinphoneCallLog$CallStatus fromInt(int) -> fromInt
    java.lang.String toString() -> toString
    int toInt() -> toInt
org.linphone.core.LinphoneCallLogImpl -> org.linphone.core.LinphoneCallLogImpl:
    long nativePtr -> nativePtr
    long getFrom(long) -> getFrom
    long getTo(long) -> getTo
    boolean isIncoming(long) -> isIncoming
    int getStatus(long) -> getStatus
    java.lang.String getStartDate(long) -> getStartDate
    int getCallDuration(long) -> getCallDuration
    int getCallId(long) -> getCallId
    long getTimestamp(long) -> getTimestamp
    org.linphone.core.CallDirection getDirection() -> getDirection
    org.linphone.core.LinphoneAddress getFrom() -> getFrom
    org.linphone.core.LinphoneAddress getTo() -> getTo
    org.linphone.core.LinphoneCallLog$CallStatus getStatus() -> getStatus
    long getNativePtr() -> getNativePtr
    java.lang.String getStartDate() -> getStartDate
    int getCallDuration() -> getCallDuration
    int getCallId() -> getCallId
    long getTimestamp() -> getTimestamp
org.linphone.core.LinphoneCallParams -> org.linphone.core.LinphoneCallParams:
    void setVideoEnabled(boolean) -> setVideoEnabled
    boolean getVideoEnabled() -> getVideoEnabled
    void setAudioBandwidth(int) -> setAudioBandwidth
    org.linphone.core.LinphoneCore$MediaEncryption getMediaEncryption() -> getMediaEncryption
    void setMediaEnctyption(org.linphone.core.LinphoneCore$MediaEncryption) -> setMediaEnctyption
    org.linphone.core.PayloadType getUsedAudioCodec() -> getUsedAudioCodec
    org.linphone.core.PayloadType getUsedVideoCodec() -> getUsedVideoCodec
    void enableLowBandwidth(boolean) -> enableLowBandwidth
    boolean isLowBandwidthEnabled() -> isLowBandwidthEnabled
    void setRecordFile(java.lang.String) -> setRecordFile
    void addCustomHeader(java.lang.String,java.lang.String) -> addCustomHeader
    java.lang.String getCustomHeader(java.lang.String) -> getCustomHeader
    void setPrivacy(int) -> setPrivacy
    int getPrivacy() -> getPrivacy
    void setSessionName(java.lang.String) -> setSessionName
    java.lang.String getSessionName() -> getSessionName
    org.linphone.core.VideoSize getSentVideoSize() -> getSentVideoSize
    org.linphone.core.VideoSize getReceivedVideoSize() -> getReceivedVideoSize
org.linphone.core.LinphoneCallParamsImpl -> org.linphone.core.LinphoneCallParamsImpl:
    long nativePtr -> nativePtr
    void enableVideo(long,boolean) -> enableVideo
    boolean getVideoEnabled(long) -> getVideoEnabled
    void audioBandwidth(long,int) -> audioBandwidth
    void setMediaEncryption(long,int) -> setMediaEncryption
    int getMediaEncryption(long) -> getMediaEncryption
    long getUsedAudioCodec(long) -> getUsedAudioCodec
    long getUsedVideoCodec(long) -> getUsedVideoCodec
    void destroy(long) -> destroy
    void enableLowBandwidth(long,boolean) -> enableLowBandwidth
    boolean isLowBandwidthEnabled(long) -> isLowBandwidthEnabled
    boolean getVideoEnabled() -> getVideoEnabled
    void setVideoEnabled(boolean) -> setVideoEnabled
    void finalize() -> finalize
    void setAudioBandwidth(int) -> setAudioBandwidth
    org.linphone.core.LinphoneCore$MediaEncryption getMediaEncryption() -> getMediaEncryption
    void setMediaEnctyption(org.linphone.core.LinphoneCore$MediaEncryption) -> setMediaEnctyption
    org.linphone.core.PayloadType getUsedAudioCodec() -> getUsedAudioCodec
    org.linphone.core.PayloadType getUsedVideoCodec() -> getUsedVideoCodec
    boolean localConferenceMode(long) -> localConferenceMode
    boolean localConferenceMode() -> localConferenceMode
    void enableLowBandwidth(boolean) -> enableLowBandwidth
    boolean isLowBandwidthEnabled() -> isLowBandwidthEnabled
    void setRecordFile(long,java.lang.String) -> setRecordFile
    void setRecordFile(java.lang.String) -> setRecordFile
    void addCustomHeader(long,java.lang.String,java.lang.String) -> addCustomHeader
    void addCustomHeader(java.lang.String,java.lang.String) -> addCustomHeader
    java.lang.String getCustomHeader(long,java.lang.String) -> getCustomHeader
    java.lang.String getCustomHeader(java.lang.String) -> getCustomHeader
    void setPrivacy(long,int) -> setPrivacy
    void setPrivacy(int) -> setPrivacy
    int getPrivacy(long) -> getPrivacy
    int getPrivacy() -> getPrivacy
    void setSessionName(long,java.lang.String) -> setSessionName
    void setSessionName(java.lang.String) -> setSessionName
    java.lang.String getSessionName(long) -> getSessionName
    java.lang.String getSessionName() -> getSessionName
    int[] getSentVideoSize(long) -> getSentVideoSize
    org.linphone.core.VideoSize getSentVideoSize() -> getSentVideoSize
    int[] getReceivedVideoSize(long) -> getReceivedVideoSize
    org.linphone.core.VideoSize getReceivedVideoSize() -> getReceivedVideoSize
org.linphone.core.LinphoneCallStats -> org.linphone.core.LinphoneCallStats:
    org.linphone.core.LinphoneCallStats$MediaType getMediaType() -> getMediaType
    org.linphone.core.LinphoneCallStats$IceState getIceState() -> getIceState
    float getDownloadBandwidth() -> getDownloadBandwidth
    float getUploadBandwidth() -> getUploadBandwidth
    float getSenderLossRate() -> getSenderLossRate
    float getReceiverLossRate() -> getReceiverLossRate
    float getSenderInterarrivalJitter() -> getSenderInterarrivalJitter
    float getReceiverInterarrivalJitter() -> getReceiverInterarrivalJitter
    float getRoundTripDelay() -> getRoundTripDelay
    long getLatePacketsCumulativeNumber() -> getLatePacketsCumulativeNumber
    float getJitterBufferSize() -> getJitterBufferSize
    float getLocalLossRate() -> getLocalLossRate
    float getLocalLateRate() -> getLocalLateRate
org.linphone.core.LinphoneCallStats$IceState -> org.linphone.core.LinphoneCallStats$IceState:
    java.util.Vector values -> values
    org.linphone.core.LinphoneCallStats$IceState NotActivated -> NotActivated
    org.linphone.core.LinphoneCallStats$IceState Failed -> Failed
    org.linphone.core.LinphoneCallStats$IceState InProgress -> InProgress
    org.linphone.core.LinphoneCallStats$IceState HostConnection -> HostConnection
    org.linphone.core.LinphoneCallStats$IceState ReflexiveConnection -> ReflexiveConnection
    org.linphone.core.LinphoneCallStats$IceState RelayConnection -> RelayConnection
    int mValue -> mValue
    java.lang.String mStringValue -> mStringValue
    org.linphone.core.LinphoneCallStats$IceState fromInt(int) -> fromInt
    java.lang.String toString() -> toString
org.linphone.core.LinphoneCallStats$MediaType -> org.linphone.core.LinphoneCallStats$MediaType:
    java.util.Vector values -> values
    org.linphone.core.LinphoneCallStats$MediaType Audio -> Audio
    org.linphone.core.LinphoneCallStats$MediaType Video -> Video
    int mValue -> mValue
    java.lang.String mStringValue -> mStringValue
    org.linphone.core.LinphoneCallStats$MediaType fromInt(int) -> fromInt
    java.lang.String toString() -> toString
org.linphone.core.LinphoneCallStatsImpl -> org.linphone.core.LinphoneCallStatsImpl:
    int mediaType -> mediaType
    int iceState -> iceState
    float downloadBandwidth -> downloadBandwidth
    float uploadBandwidth -> uploadBandwidth
    float senderLossRate -> senderLossRate
    float receiverLossRate -> receiverLossRate
    float senderInterarrivalJitter -> senderInterarrivalJitter
    float receiverInterarrivalJitter -> receiverInterarrivalJitter
    float roundTripDelay -> roundTripDelay
    long latePacketsCumulativeNumber -> latePacketsCumulativeNumber
    float jitterBufferSize -> jitterBufferSize
    float localLossRate -> localLossRate
    float localLateRate -> localLateRate
    long nativePtr -> nativePtr
    int getMediaType(long) -> getMediaType
    int getIceState(long) -> getIceState
    float getDownloadBandwidth(long) -> getDownloadBandwidth
    float getUploadBandwidth(long) -> getUploadBandwidth
    float getSenderLossRate(long) -> getSenderLossRate
    float getReceiverLossRate(long) -> getReceiverLossRate
    float getSenderInterarrivalJitter(long,long) -> getSenderInterarrivalJitter
    float getReceiverInterarrivalJitter(long,long) -> getReceiverInterarrivalJitter
    float getRoundTripDelay(long) -> getRoundTripDelay
    long getLatePacketsCumulativeNumber(long,long) -> getLatePacketsCumulativeNumber
    float getJitterBufferSize(long) -> getJitterBufferSize
    float getLocalLossRate(long) -> getLocalLossRate
    float getLocalLateRate(long) -> getLocalLateRate
    void updateStats(long,int) -> updateStats
    void updateRealTimeStats(org.linphone.core.LinphoneCall) -> updateRealTimeStats
    org.linphone.core.LinphoneCallStats$MediaType getMediaType() -> getMediaType
    org.linphone.core.LinphoneCallStats$IceState getIceState() -> getIceState
    float getDownloadBandwidth() -> getDownloadBandwidth
    float getUploadBandwidth() -> getUploadBandwidth
    float getSenderLossRate() -> getSenderLossRate
    float getReceiverLossRate() -> getReceiverLossRate
    float getSenderInterarrivalJitter() -> getSenderInterarrivalJitter
    float getReceiverInterarrivalJitter() -> getReceiverInterarrivalJitter
    float getRoundTripDelay() -> getRoundTripDelay
    long getLatePacketsCumulativeNumber() -> getLatePacketsCumulativeNumber
    float getJitterBufferSize() -> getJitterBufferSize
    float getLocalLossRate() -> getLocalLossRate
    float getLocalLateRate() -> getLocalLateRate
org.linphone.core.LinphoneChatMessage -> org.linphone.core.LinphoneChatMessage:
    java.lang.String getText() -> getText
    org.linphone.core.LinphoneAddress getPeerAddress() -> getPeerAddress
    org.linphone.core.LinphoneAddress getFrom() -> getFrom
    java.lang.String getExternalBodyUrl() -> getExternalBodyUrl
    void setExternalBodyUrl(java.lang.String) -> setExternalBodyUrl
    void addCustomHeader(java.lang.String,java.lang.String) -> addCustomHeader
    java.lang.String getCustomHeader(java.lang.String) -> getCustomHeader
    long getTime() -> getTime
    org.linphone.core.LinphoneChatMessage$State getStatus() -> getStatus
    boolean isRead() -> isRead
    boolean isOutgoing() -> isOutgoing
    void store() -> store
    int getStorageId() -> getStorageId
    org.linphone.core.Reason getReason() -> getReason
    org.linphone.core.ErrorInfo getErrorInfo() -> getErrorInfo
org.linphone.core.LinphoneChatMessage$State -> org.linphone.core.LinphoneChatMessage$State:
    java.util.Vector values -> values
    int mValue -> mValue
    java.lang.String mStringValue -> mStringValue
    org.linphone.core.LinphoneChatMessage$State Idle -> Idle
    org.linphone.core.LinphoneChatMessage$State InProgress -> InProgress
    org.linphone.core.LinphoneChatMessage$State Delivered -> Delivered
    org.linphone.core.LinphoneChatMessage$State NotDelivered -> NotDelivered
    int value() -> value
    org.linphone.core.LinphoneChatMessage$State fromInt(int) -> fromInt
    java.lang.String toString() -> toString
    int toInt() -> toInt
org.linphone.core.LinphoneChatMessage$StateListener -> org.linphone.core.LinphoneChatMessage$StateListener:
    void onLinphoneChatMessageStateChanged(org.linphone.core.LinphoneChatMessage,org.linphone.core.LinphoneChatMessage$State) -> onLinphoneChatMessageStateChanged
org.linphone.core.LinphoneChatMessageImpl -> org.linphone.core.LinphoneChatMessageImpl:
    long nativePtr -> nativePtr
    java.lang.String getText(long) -> getText
    long getPeerAddress(long) -> getPeerAddress
    java.lang.String getExternalBodyUrl(long) -> getExternalBodyUrl
    void setExternalBodyUrl(long,java.lang.String) -> setExternalBodyUrl
    long getFrom(long) -> getFrom
    long getTime(long) -> getTime
    int getStatus(long) -> getStatus
    boolean isRead(long) -> isRead
    boolean isOutgoing(long) -> isOutgoing
    void store(long) -> store
    int getStorageId(long) -> getStorageId
    void unref(long) -> unref
    long getNativePtr() -> getNativePtr
    java.lang.String getText() -> getText
    org.linphone.core.LinphoneAddress getPeerAddress() -> getPeerAddress
    java.lang.String getExternalBodyUrl() -> getExternalBodyUrl
    void setExternalBodyUrl(java.lang.String) -> setExternalBodyUrl
    org.linphone.core.LinphoneAddress getFrom() -> getFrom
    void addCustomHeader(long,java.lang.String,java.lang.String) -> addCustomHeader
    void addCustomHeader(java.lang.String,java.lang.String) -> addCustomHeader
    java.lang.String getCustomHeader(long,java.lang.String) -> getCustomHeader
    java.lang.String getCustomHeader(java.lang.String) -> getCustomHeader
    long getTime() -> getTime
    org.linphone.core.LinphoneChatMessage$State getStatus() -> getStatus
    boolean isRead() -> isRead
    boolean isOutgoing() -> isOutgoing
    void store() -> store
    int getStorageId() -> getStorageId
    int getReason(long) -> getReason
    org.linphone.core.Reason getReason() -> getReason
    long getErrorInfo(long) -> getErrorInfo
    org.linphone.core.ErrorInfo getErrorInfo() -> getErrorInfo
    void finalize() -> finalize
org.linphone.core.LinphoneChatRoom -> org.linphone.core.LinphoneChatRoom:
    org.linphone.core.LinphoneAddress getPeerAddress() -> getPeerAddress
    void sendMessage(java.lang.String) -> sendMessage
    void sendMessage(org.linphone.core.LinphoneChatMessage,org.linphone.core.LinphoneChatMessage$StateListener) -> sendMessage
    org.linphone.core.LinphoneChatMessage createLinphoneChatMessage(java.lang.String) -> createLinphoneChatMessage
    org.linphone.core.LinphoneChatMessage[] getHistory() -> getHistory
    org.linphone.core.LinphoneChatMessage[] getHistory(int) -> getHistory
    void destroy() -> destroy
    int getUnreadMessagesCount() -> getUnreadMessagesCount
    void deleteHistory() -> deleteHistory
    void compose() -> compose
    boolean isRemoteComposing() -> isRemoteComposing
    void markAsRead() -> markAsRead
    void deleteMessage(org.linphone.core.LinphoneChatMessage) -> deleteMessage
    void updateUrl(org.linphone.core.LinphoneChatMessage) -> updateUrl
    org.linphone.core.LinphoneChatMessage createLinphoneChatMessage(java.lang.String,java.lang.String,org.linphone.core.LinphoneChatMessage$State,long,boolean,boolean) -> createLinphoneChatMessage
    org.linphone.core.LinphoneCore getCore() -> getCore
org.linphone.core.LinphoneChatRoomImpl -> org.linphone.core.LinphoneChatRoomImpl:
    long nativePtr -> nativePtr
    long createLinphoneChatMessage(long,java.lang.String) -> createLinphoneChatMessage
    long getPeerAddress(long) -> getPeerAddress
    void sendMessage(long,java.lang.String) -> sendMessage
    void sendMessage2(long,java.lang.Object,long,org.linphone.core.LinphoneChatMessage$StateListener) -> sendMessage2
    long[] getHistory(long,int) -> getHistory
    void destroy(long) -> destroy
    int getUnreadMessagesCount(long) -> getUnreadMessagesCount
    void deleteHistory(long) -> deleteHistory
    void compose(long) -> compose
    boolean isRemoteComposing(long) -> isRemoteComposing
    void markAsRead(long) -> markAsRead
    void deleteMessage(long,long) -> deleteMessage
    void updateUrl(long,long) -> updateUrl
    long createLinphoneChatMessage2(long,java.lang.String,java.lang.String,int,long,boolean,boolean) -> createLinphoneChatMessage2
    org.linphone.core.LinphoneAddress getPeerAddress() -> getPeerAddress
    void sendMessage(java.lang.String) -> sendMessage
    void sendMessage(org.linphone.core.LinphoneChatMessage,org.linphone.core.LinphoneChatMessage$StateListener) -> sendMessage
    org.linphone.core.LinphoneChatMessage createLinphoneChatMessage(java.lang.String) -> createLinphoneChatMessage
    org.linphone.core.LinphoneChatMessage[] getHistory() -> getHistory
    org.linphone.core.LinphoneChatMessage[] getHistory(int) -> getHistory
    void destroy() -> destroy
    int getUnreadMessagesCount() -> getUnreadMessagesCount
    void deleteHistory() -> deleteHistory
    void compose() -> compose
    boolean isRemoteComposing() -> isRemoteComposing
    void markAsRead() -> markAsRead
    void deleteMessage(org.linphone.core.LinphoneChatMessage) -> deleteMessage
    void updateUrl(org.linphone.core.LinphoneChatMessage) -> updateUrl
    org.linphone.core.LinphoneChatMessage createLinphoneChatMessage(java.lang.String,java.lang.String,org.linphone.core.LinphoneChatMessage$State,long,boolean,boolean) -> createLinphoneChatMessage
    java.lang.Object getCore(long) -> getCore
    org.linphone.core.LinphoneCore getCore() -> getCore
org.linphone.core.LinphoneContent -> org.linphone.core.LinphoneContent:
    java.lang.String getType() -> getType
    java.lang.String getSubtype() -> getSubtype
    java.lang.String getEncoding() -> getEncoding
    java.lang.String getDataAsString() -> getDataAsString
    byte[] getData() -> getData
    int getSize() -> getSize
    void setType(java.lang.String) -> setType
    void setSubtype(java.lang.String) -> setSubtype
    void setEncoding(java.lang.String) -> setEncoding
    void setStringData(java.lang.String) -> setStringData
    void setData(byte[]) -> setData
org.linphone.core.LinphoneContentImpl -> org.linphone.core.LinphoneContentImpl:
    java.lang.String mType -> mType
    java.lang.String mSubtype -> mSubtype
    java.lang.String mEncoding -> mEncoding
    byte[] mData -> mData
    java.lang.String getType() -> getType
    java.lang.String getSubtype() -> getSubtype
    java.lang.String getDataAsString() -> getDataAsString
    int getSize() -> getSize
    void setType(java.lang.String) -> setType
    void setSubtype(java.lang.String) -> setSubtype
    void setStringData(java.lang.String) -> setStringData
    void setData(byte[]) -> setData
    java.lang.String getEncoding() -> getEncoding
    byte[] getData() -> getData
    void setEncoding(java.lang.String) -> setEncoding
org.linphone.core.LinphoneCore -> org.linphone.core.LinphoneCore:
    void setContext(java.lang.Object) -> setContext
    void clearProxyConfigs() -> clearProxyConfigs
    void addProxyConfig(org.linphone.core.LinphoneProxyConfig) -> addProxyConfig
    void removeProxyConfig(org.linphone.core.LinphoneProxyConfig) -> removeProxyConfig
    void setDefaultProxyConfig(org.linphone.core.LinphoneProxyConfig) -> setDefaultProxyConfig
    org.linphone.core.LinphoneProxyConfig getDefaultProxyConfig() -> getDefaultProxyConfig
    org.linphone.core.LinphoneAuthInfo[] getAuthInfosList() -> getAuthInfosList
    org.linphone.core.LinphoneAuthInfo findAuthInfo(java.lang.String,java.lang.String,java.lang.String) -> findAuthInfo
    void removeAuthInfo(org.linphone.core.LinphoneAuthInfo) -> removeAuthInfo
    void clearAuthInfos() -> clearAuthInfos
    void addAuthInfo(org.linphone.core.LinphoneAuthInfo) -> addAuthInfo
    org.linphone.core.LinphoneAddress interpretUrl(java.lang.String) -> interpretUrl
    org.linphone.core.LinphoneCall invite(java.lang.String) -> invite
    org.linphone.core.LinphoneCall invite(org.linphone.core.LinphoneAddress) -> invite
    void terminateCall(org.linphone.core.LinphoneCall) -> terminateCall
    void declineCall(org.linphone.core.LinphoneCall,org.linphone.core.Reason) -> declineCall
    org.linphone.core.LinphoneCall getCurrentCall() -> getCurrentCall
    org.linphone.core.LinphoneAddress getRemoteAddress() -> getRemoteAddress
    boolean isIncall() -> isIncall
    boolean isInComingInvitePending() -> isInComingInvitePending
    void iterate() -> iterate
    void acceptCall(org.linphone.core.LinphoneCall) -> acceptCall
    void acceptCallWithParams(org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCallParams) -> acceptCallWithParams
    void acceptCallUpdate(org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCallParams) -> acceptCallUpdate
    void deferCallUpdate(org.linphone.core.LinphoneCall) -> deferCallUpdate
    org.linphone.core.LinphoneCallLog[] getCallLogs() -> getCallLogs
    void setNetworkReachable(boolean) -> setNetworkReachable
    boolean isNetworkReachable() -> isNetworkReachable
    void destroy() -> destroy
    void setPlaybackGain(float) -> setPlaybackGain
    float getPlaybackGain() -> getPlaybackGain
    void setPlayLevel(int) -> setPlayLevel
    int getPlayLevel() -> getPlayLevel
    void muteMic(boolean) -> muteMic
    boolean isMicMuted() -> isMicMuted
    void sendDtmf(char) -> sendDtmf
    void playDtmf(char,int) -> playDtmf
    void stopDtmf() -> stopDtmf
    void clearCallLogs() -> clearCallLogs
    org.linphone.core.PayloadType findPayloadType(java.lang.String,int,int) -> findPayloadType
    org.linphone.core.PayloadType findPayloadType(java.lang.String,int) -> findPayloadType
    org.linphone.core.PayloadType findPayloadType(java.lang.String) -> findPayloadType
    void enablePayloadType(org.linphone.core.PayloadType,boolean) -> enablePayloadType
    boolean isPayloadTypeEnabled(org.linphone.core.PayloadType) -> isPayloadTypeEnabled
    void setPayloadTypeBitrate(org.linphone.core.PayloadType,int) -> setPayloadTypeBitrate
    int getPayloadTypeBitrate(org.linphone.core.PayloadType) -> getPayloadTypeBitrate
    void enableEchoCancellation(boolean) -> enableEchoCancellation
    boolean isEchoCancellationEnabled() -> isEchoCancellationEnabled
    boolean isEchoLimiterEnabled() -> isEchoLimiterEnabled
    void setSignalingTransportPorts(org.linphone.core.LinphoneCore$Transports) -> setSignalingTransportPorts
    org.linphone.core.LinphoneCore$Transports getSignalingTransportPorts() -> getSignalingTransportPorts
    void setSipDscp(int) -> setSipDscp
    int getSipDscp() -> getSipDscp
    void enableSpeaker(boolean) -> enableSpeaker
    boolean isSpeakerEnabled() -> isSpeakerEnabled
    void addFriend(org.linphone.core.LinphoneFriend) -> addFriend
    void setPresenceInfo(int,java.lang.String,org.linphone.core.OnlineStatus) -> setPresenceInfo
    org.linphone.core.OnlineStatus getPresenceInfo() -> getPresenceInfo
    void setPresenceModel(org.linphone.core.PresenceModel) -> setPresenceModel
    org.linphone.core.PresenceModel getPresenceModel() -> getPresenceModel
    org.linphone.core.LinphoneChatRoom getOrCreateChatRoom(java.lang.String) -> getOrCreateChatRoom
    void setVideoWindow(java.lang.Object) -> setVideoWindow
    void setPreviewWindow(java.lang.Object) -> setPreviewWindow
    void setDeviceRotation(int) -> setDeviceRotation
    void setVideoDevice(int) -> setVideoDevice
    int getVideoDevice() -> getVideoDevice
    boolean isVideoSupported() -> isVideoSupported
    void enableVideo(boolean,boolean) -> enableVideo
    boolean isVideoEnabled() -> isVideoEnabled
    void setStunServer(java.lang.String) -> setStunServer
    java.lang.String getStunServer() -> getStunServer
    void setFirewallPolicy(org.linphone.core.LinphoneCore$FirewallPolicy) -> setFirewallPolicy
    org.linphone.core.LinphoneCore$FirewallPolicy getFirewallPolicy() -> getFirewallPolicy
    org.linphone.core.LinphoneCall inviteAddressWithParams(org.linphone.core.LinphoneAddress,org.linphone.core.LinphoneCallParams) -> inviteAddressWithParams
    int updateCall(org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCallParams) -> updateCall
    org.linphone.core.LinphoneCallParams createDefaultCallParameters() -> createDefaultCallParameters
    void setRing(java.lang.String) -> setRing
    java.lang.String getRing() -> getRing
    void setRootCA(java.lang.String) -> setRootCA
    void setUploadBandwidth(int) -> setUploadBandwidth
    void setDownloadBandwidth(int) -> setDownloadBandwidth
    void setDownloadPtime(int) -> setDownloadPtime
    void setUploadPtime(int) -> setUploadPtime
    void setPreferredVideoSize(org.linphone.core.VideoSize) -> setPreferredVideoSize
    void setPreferredVideoSizeByName(java.lang.String) -> setPreferredVideoSizeByName
    org.linphone.core.VideoSize getPreferredVideoSize() -> getPreferredVideoSize
    org.linphone.core.PayloadType[] getAudioCodecs() -> getAudioCodecs
    org.linphone.core.PayloadType[] getVideoCodecs() -> getVideoCodecs
    void enableKeepAlive(boolean) -> enableKeepAlive
    boolean isKeepAliveEnabled() -> isKeepAliveEnabled
    void startEchoCalibration(java.lang.Object) -> startEchoCalibration
    boolean needsEchoCalibration() -> needsEchoCalibration
    void enableIpv6(boolean) -> enableIpv6
    boolean isIpv6Enabled() -> isIpv6Enabled
    void adjustSoftwareVolume(int) -> adjustSoftwareVolume
    boolean pauseCall(org.linphone.core.LinphoneCall) -> pauseCall
    boolean resumeCall(org.linphone.core.LinphoneCall) -> resumeCall
    boolean pauseAllCalls() -> pauseAllCalls
    void setZrtpSecretsCache(java.lang.String) -> setZrtpSecretsCache
    void enableEchoLimiter(boolean) -> enableEchoLimiter
    boolean isInConference() -> isInConference
    boolean enterConference() -> enterConference
    void leaveConference() -> leaveConference
    void addToConference(org.linphone.core.LinphoneCall) -> addToConference
    void removeFromConference(org.linphone.core.LinphoneCall) -> removeFromConference
    void addAllToConference() -> addAllToConference
    void terminateConference() -> terminateConference
    int getConferenceSize() -> getConferenceSize
    void startConferenceRecording(java.lang.String) -> startConferenceRecording
    void stopConferenceRecording() -> stopConferenceRecording
    void terminateAllCalls() -> terminateAllCalls
    org.linphone.core.LinphoneCall[] getCalls() -> getCalls
    int getCallsNb() -> getCallsNb
    void transferCall(org.linphone.core.LinphoneCall,java.lang.String) -> transferCall
    void transferCallToAnother(org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCall) -> transferCallToAnother
    org.linphone.core.LinphoneCall startReferedCall(org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCallParams) -> startReferedCall
    org.linphone.core.LinphoneCall findCallFromUri(java.lang.String) -> findCallFromUri
    int getMaxCalls() -> getMaxCalls
    void setMaxCalls(int) -> setMaxCalls
    boolean isMyself(java.lang.String) -> isMyself
    boolean soundResourcesLocked() -> soundResourcesLocked
    boolean mediaEncryptionSupported(org.linphone.core.LinphoneCore$MediaEncryption) -> mediaEncryptionSupported
    void setMediaEncryption(org.linphone.core.LinphoneCore$MediaEncryption) -> setMediaEncryption
    org.linphone.core.LinphoneCore$MediaEncryption getMediaEncryption() -> getMediaEncryption
    void setMediaEncryptionMandatory(boolean) -> setMediaEncryptionMandatory
    boolean isMediaEncryptionMandatory() -> isMediaEncryptionMandatory
    void setPlayFile(java.lang.String) -> setPlayFile
    void tunnelEnable(boolean) -> tunnelEnable
    void tunnelAutoDetect() -> tunnelAutoDetect
    void tunnelCleanServers() -> tunnelCleanServers
    void tunnelSetHttpProxy(java.lang.String,int,java.lang.String,java.lang.String) -> tunnelSetHttpProxy
    void tunnelAddServerAndMirror(java.lang.String,int,int,int) -> tunnelAddServerAndMirror
    boolean isTunnelAvailable() -> isTunnelAvailable
    org.linphone.core.LinphoneProxyConfig[] getProxyConfigList() -> getProxyConfigList
    void setVideoPolicy(boolean,boolean) -> setVideoPolicy
    boolean getVideoAutoInitiatePolicy() -> getVideoAutoInitiatePolicy
    boolean getVideoAutoAcceptPolicy() -> getVideoAutoAcceptPolicy
    void setStaticPicture(java.lang.String) -> setStaticPicture
    void setUserAgent(java.lang.String,java.lang.String) -> setUserAgent
    void setCpuCount(int) -> setCpuCount
    void removeCallLog(org.linphone.core.LinphoneCallLog) -> removeCallLog
    int getMissedCallsCount() -> getMissedCallsCount
    void resetMissedCallsCount() -> resetMissedCallsCount
    void refreshRegisters() -> refreshRegisters
    java.lang.String getVersion() -> getVersion
    void removeFriend(org.linphone.core.LinphoneFriend) -> removeFriend
    org.linphone.core.LinphoneFriend findFriendByAddress(java.lang.String) -> findFriendByAddress
    void setAudioPort(int) -> setAudioPort
    void setAudioPortRange(int,int) -> setAudioPortRange
    void setAudioDscp(int) -> setAudioDscp
    int getAudioDscp() -> getAudioDscp
    void setVideoPort(int) -> setVideoPort
    void setVideoPortRange(int,int) -> setVideoPortRange
    void setVideoDscp(int) -> setVideoDscp
    int getVideoDscp() -> getVideoDscp
    void setIncomingTimeout(int) -> setIncomingTimeout
    void setInCallTimeout(int) -> setInCallTimeout
    void setMicrophoneGain(float) -> setMicrophoneGain
    void setPrimaryContact(java.lang.String,java.lang.String) -> setPrimaryContact
    java.lang.String getPrimaryContactUsername() -> getPrimaryContactUsername
    java.lang.String getPrimaryContactDisplayName() -> getPrimaryContactDisplayName
    void setUseSipInfoForDtmfs(boolean) -> setUseSipInfoForDtmfs
    boolean getUseSipInfoForDtmfs() -> getUseSipInfoForDtmfs
    void setUseRfc2833ForDtmfs(boolean) -> setUseRfc2833ForDtmfs
    boolean getUseRfc2833ForDtmfs() -> getUseRfc2833ForDtmfs
    org.linphone.core.LpConfig getConfig() -> getConfig
    boolean upnpAvailable() -> upnpAvailable
    org.linphone.core.LinphoneCore$UpnpState getUpnpState() -> getUpnpState
    java.lang.String getUpnpExternalIpaddress() -> getUpnpExternalIpaddress
    org.linphone.core.LinphoneInfoMessage createInfoMessage() -> createInfoMessage
    org.linphone.core.LinphoneEvent subscribe(org.linphone.core.LinphoneAddress,java.lang.String,int,org.linphone.core.LinphoneContent) -> subscribe
    org.linphone.core.LinphoneEvent createSubscribe(org.linphone.core.LinphoneAddress,java.lang.String,int) -> createSubscribe
    org.linphone.core.LinphoneEvent createPublish(org.linphone.core.LinphoneAddress,java.lang.String,int) -> createPublish
    org.linphone.core.LinphoneEvent publish(org.linphone.core.LinphoneAddress,java.lang.String,int,org.linphone.core.LinphoneContent) -> publish
    void setChatDatabasePath(java.lang.String) -> setChatDatabasePath
    org.linphone.core.LinphoneChatRoom[] getChatRooms() -> getChatRooms
    java.lang.String[] getSupportedVideoSizes() -> getSupportedVideoSizes
    int migrateToMultiTransport() -> migrateToMultiTransport
    boolean acceptEarlyMedia(org.linphone.core.LinphoneCall) -> acceptEarlyMedia
    boolean acceptEarlyMediaWithParams(org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCallParams) -> acceptEarlyMediaWithParams
    org.linphone.core.LinphoneProxyConfig createProxyConfig() -> createProxyConfig
    void setCallErrorTone(org.linphone.core.Reason,java.lang.String) -> setCallErrorTone
    void setTone(org.linphone.core.ToneID,java.lang.String) -> setTone
    void setMtu(int) -> setMtu
    int getMtu() -> getMtu
    void enableSdp200Ack(boolean) -> enableSdp200Ack
    boolean isSdp200AckEnabled() -> isSdp200AckEnabled
    void disableChat(org.linphone.core.Reason) -> disableChat
    void enableChat() -> enableChat
    boolean chatEnabled() -> chatEnabled
    void stopRinging() -> stopRinging
org.linphone.core.LinphoneCore$EcCalibratorStatus -> org.linphone.core.LinphoneCore$EcCalibratorStatus:
    java.util.Vector values -> values
    int IN_PROGRESS_STATUS -> IN_PROGRESS_STATUS
    int DONE_STATUS -> DONE_STATUS
    int FAILED_STATUS -> FAILED_STATUS
    int DONE_NO_ECHO_STATUS -> DONE_NO_ECHO_STATUS
    org.linphone.core.LinphoneCore$EcCalibratorStatus InProgress -> InProgress
    org.linphone.core.LinphoneCore$EcCalibratorStatus Done -> Done
    org.linphone.core.LinphoneCore$EcCalibratorStatus Failed -> Failed
    org.linphone.core.LinphoneCore$EcCalibratorStatus DoneNoEcho -> DoneNoEcho
    int mValue -> mValue
    java.lang.String mStringValue -> mStringValue
    org.linphone.core.LinphoneCore$EcCalibratorStatus fromInt(int) -> fromInt
    java.lang.String toString() -> toString
    int value() -> value
org.linphone.core.LinphoneCore$FirewallPolicy -> org.linphone.core.LinphoneCore$FirewallPolicy:
    java.util.Vector values -> values
    org.linphone.core.LinphoneCore$FirewallPolicy NoFirewall -> NoFirewall
    org.linphone.core.LinphoneCore$FirewallPolicy UseNatAddress -> UseNatAddress
    org.linphone.core.LinphoneCore$FirewallPolicy UseStun -> UseStun
    org.linphone.core.LinphoneCore$FirewallPolicy UseIce -> UseIce
    org.linphone.core.LinphoneCore$FirewallPolicy UseUpnp -> UseUpnp
    int mValue -> mValue
    java.lang.String mStringValue -> mStringValue
    org.linphone.core.LinphoneCore$FirewallPolicy fromInt(int) -> fromInt
    java.lang.String toString() -> toString
    int value() -> value
org.linphone.core.LinphoneCore$GlobalState -> org.linphone.core.LinphoneCore$GlobalState:
    java.util.Vector values -> values
    org.linphone.core.LinphoneCore$GlobalState GlobalOff -> GlobalOff
    org.linphone.core.LinphoneCore$GlobalState GlobalStartup -> GlobalStartup
    org.linphone.core.LinphoneCore$GlobalState GlobalOn -> GlobalOn
    org.linphone.core.LinphoneCore$GlobalState GlobalShutdown -> GlobalShutdown
    org.linphone.core.LinphoneCore$GlobalState GlobalConfiguring -> GlobalConfiguring
    int mValue -> mValue
    java.lang.String mStringValue -> mStringValue
    org.linphone.core.LinphoneCore$GlobalState fromInt(int) -> fromInt
    java.lang.String toString() -> toString
org.linphone.core.LinphoneCore$MediaEncryption -> org.linphone.core.LinphoneCore$MediaEncryption:
    java.util.Vector values -> values
    org.linphone.core.LinphoneCore$MediaEncryption None -> None
    org.linphone.core.LinphoneCore$MediaEncryption SRTP -> SRTP
    org.linphone.core.LinphoneCore$MediaEncryption ZRTP -> ZRTP
    int mValue -> mValue
    java.lang.String mStringValue -> mStringValue
    org.linphone.core.LinphoneCore$MediaEncryption fromInt(int) -> fromInt
    java.lang.String toString() -> toString
org.linphone.core.LinphoneCore$RegistrationState -> org.linphone.core.LinphoneCore$RegistrationState:
    java.util.Vector values -> values
    org.linphone.core.LinphoneCore$RegistrationState RegistrationNone -> RegistrationNone
    org.linphone.core.LinphoneCore$RegistrationState RegistrationProgress -> RegistrationProgress
    org.linphone.core.LinphoneCore$RegistrationState RegistrationOk -> RegistrationOk
    org.linphone.core.LinphoneCore$RegistrationState RegistrationCleared -> RegistrationCleared
    org.linphone.core.LinphoneCore$RegistrationState RegistrationFailed -> RegistrationFailed
    int mValue -> mValue
    java.lang.String mStringValue -> mStringValue
    org.linphone.core.LinphoneCore$RegistrationState fromInt(int) -> fromInt
    java.lang.String toString() -> toString
org.linphone.core.LinphoneCore$RemoteProvisioningState -> org.linphone.core.LinphoneCore$RemoteProvisioningState:
    java.util.Vector values -> values
    org.linphone.core.LinphoneCore$RemoteProvisioningState ConfiguringSuccessful -> ConfiguringSuccessful
    org.linphone.core.LinphoneCore$RemoteProvisioningState ConfiguringFailed -> ConfiguringFailed
    org.linphone.core.LinphoneCore$RemoteProvisioningState ConfiguringSkipped -> ConfiguringSkipped
    int mValue -> mValue
    java.lang.String mStringValue -> mStringValue
    org.linphone.core.LinphoneCore$RemoteProvisioningState fromInt(int) -> fromInt
    java.lang.String toString() -> toString
org.linphone.core.LinphoneCore$Transports -> org.linphone.core.LinphoneCore$Transports:
    int udp -> udp
    int tcp -> tcp
    int tls -> tls
    java.lang.String toString() -> toString
org.linphone.core.LinphoneCore$UpnpState -> org.linphone.core.LinphoneCore$UpnpState:
    java.util.Vector values -> values
    org.linphone.core.LinphoneCore$UpnpState Idle -> Idle
    org.linphone.core.LinphoneCore$UpnpState Pending -> Pending
    org.linphone.core.LinphoneCore$UpnpState Adding -> Adding
    org.linphone.core.LinphoneCore$UpnpState Removing -> Removing
    org.linphone.core.LinphoneCore$UpnpState NotAvailable -> NotAvailable
    org.linphone.core.LinphoneCore$UpnpState Ok -> Ok
    org.linphone.core.LinphoneCore$UpnpState Ko -> Ko
    org.linphone.core.LinphoneCore$UpnpState Blacklisted -> Blacklisted
    int mValue -> mValue
    java.lang.String mStringValue -> mStringValue
    org.linphone.core.LinphoneCore$UpnpState fromInt(int) -> fromInt
    java.lang.String toString() -> toString
org.linphone.core.LinphoneCoreException -> org.linphone.core.LinphoneCoreException:
org.linphone.core.LinphoneCoreFactory -> org.linphone.core.LinphoneCoreFactory:
    java.lang.String factoryName -> factoryName
    org.linphone.core.LinphoneCoreFactory theLinphoneCoreFactory -> theLinphoneCoreFactory
    void setFactoryClassName(java.lang.String) -> setFactoryClassName
    org.linphone.core.LinphoneCoreFactory instance() -> instance
    org.linphone.core.LinphoneAuthInfo createAuthInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> createAuthInfo
    org.linphone.core.LinphoneAuthInfo createAuthInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> createAuthInfo
    org.linphone.core.LinphoneCore createLinphoneCore(org.linphone.core.LinphoneCoreListener,java.lang.String,java.lang.String,java.lang.Object,java.lang.Object) -> createLinphoneCore
    org.linphone.core.LinphoneCore createLinphoneCore(org.linphone.core.LinphoneCoreListener,java.lang.Object) -> createLinphoneCore
    org.linphone.core.LinphoneAddress createLinphoneAddress(java.lang.String,java.lang.String,java.lang.String) -> createLinphoneAddress
    org.linphone.core.LinphoneAddress createLinphoneAddress(java.lang.String) -> createLinphoneAddress
    org.linphone.core.LpConfig createLpConfig(java.lang.String) -> createLpConfig
    org.linphone.core.LinphoneProxyConfig createProxyConfig(java.lang.String,java.lang.String,java.lang.String,boolean) -> createProxyConfig
    void setDebugMode(boolean,java.lang.String) -> setDebugMode
    void setLogHandler(org.linphone.core.LinphoneLogHandler) -> setLogHandler
    org.linphone.core.LinphoneFriend createLinphoneFriend(java.lang.String) -> createLinphoneFriend
    org.linphone.core.LinphoneFriend createLinphoneFriend() -> createLinphoneFriend
    org.linphone.core.LinphoneContent createLinphoneContent(java.lang.String,java.lang.String,java.lang.String) -> createLinphoneContent
    org.linphone.core.LinphoneContent createLinphoneContent(java.lang.String,java.lang.String,byte[],java.lang.String) -> createLinphoneContent
    org.linphone.core.PresenceActivity createPresenceActivity(org.linphone.core.PresenceActivityType,java.lang.String) -> createPresenceActivity
    org.linphone.core.PresenceService createPresenceService(java.lang.String,org.linphone.core.PresenceBasicStatus,java.lang.String) -> createPresenceService
    org.linphone.core.PresenceModel createPresenceModel() -> createPresenceModel
    org.linphone.core.PresenceModel createPresenceModel(org.linphone.core.PresenceActivityType,java.lang.String) -> createPresenceModel
    org.linphone.core.PresenceModel createPresenceModel(org.linphone.core.PresenceActivityType,java.lang.String,java.lang.String,java.lang.String) -> createPresenceModel
org.linphone.core.LinphoneCoreFactoryImpl -> org.linphone.core.LinphoneCoreFactoryImpl:
    boolean loadOptionalLibrary(java.lang.String) -> loadOptionalLibrary
    org.linphone.core.LinphoneAuthInfo createAuthInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> createAuthInfo
    org.linphone.core.LinphoneAddress createLinphoneAddress(java.lang.String,java.lang.String,java.lang.String) -> createLinphoneAddress
    org.linphone.core.LinphoneAddress createLinphoneAddress(java.lang.String) -> createLinphoneAddress
    org.linphone.core.LpConfig createLpConfig(java.lang.String) -> createLpConfig
    org.linphone.core.LinphoneCore createLinphoneCore(org.linphone.core.LinphoneCoreListener,java.lang.String,java.lang.String,java.lang.Object,java.lang.Object) -> createLinphoneCore
    org.linphone.core.LinphoneCore createLinphoneCore(org.linphone.core.LinphoneCoreListener,java.lang.Object) -> createLinphoneCore
    org.linphone.core.LinphoneProxyConfig createProxyConfig(java.lang.String,java.lang.String,java.lang.String,boolean) -> createProxyConfig
    void setDebugMode(boolean,java.lang.String) -> setDebugMode
    void _setLogHandler(java.lang.Object) -> _setLogHandler
    void setLogHandler(org.linphone.core.LinphoneLogHandler) -> setLogHandler
    org.linphone.core.LinphoneFriend createLinphoneFriend(java.lang.String) -> createLinphoneFriend
    org.linphone.core.LinphoneFriend createLinphoneFriend() -> createLinphoneFriend
    boolean isArmv7() -> isArmv7
    org.linphone.core.LinphoneAuthInfo createAuthInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> createAuthInfo
    org.linphone.core.LinphoneContent createLinphoneContent(java.lang.String,java.lang.String,byte[],java.lang.String) -> createLinphoneContent
    org.linphone.core.LinphoneContent createLinphoneContent(java.lang.String,java.lang.String,java.lang.String) -> createLinphoneContent
    org.linphone.core.PresenceActivity createPresenceActivity(org.linphone.core.PresenceActivityType,java.lang.String) -> createPresenceActivity
    org.linphone.core.PresenceService createPresenceService(java.lang.String,org.linphone.core.PresenceBasicStatus,java.lang.String) -> createPresenceService
    org.linphone.core.PresenceModel createPresenceModel() -> createPresenceModel
    org.linphone.core.PresenceModel createPresenceModel(org.linphone.core.PresenceActivityType,java.lang.String) -> createPresenceModel
    org.linphone.core.PresenceModel createPresenceModel(org.linphone.core.PresenceActivityType,java.lang.String,java.lang.String,java.lang.String) -> createPresenceModel
org.linphone.core.LinphoneCoreImpl -> org.linphone.core.LinphoneCoreImpl:
    org.linphone.core.LinphoneCoreListener mListener -> mListener
    long nativePtr -> nativePtr
    android.content.Context mContext -> mContext
    android.media.AudioManager mAudioManager -> mAudioManager
    boolean mSpeakerEnabled -> mSpeakerEnabled
    int FIND_PAYLOAD_IGNORE_RATE -> FIND_PAYLOAD_IGNORE_RATE
    int FIND_PAYLOAD_IGNORE_CHANNELS -> FIND_PAYLOAD_IGNORE_CHANNELS
    long newLinphoneCore(org.linphone.core.LinphoneCoreListener,java.lang.String,java.lang.String,java.lang.Object) -> newLinphoneCore
    void iterate(long) -> iterate
    long getDefaultProxyConfig(long) -> getDefaultProxyConfig
    void setDefaultProxyConfig(long,long) -> setDefaultProxyConfig
    int addProxyConfig(org.linphone.core.LinphoneProxyConfig,long,long) -> addProxyConfig
    void removeProxyConfig(long,long) -> removeProxyConfig
    void clearAuthInfos(long) -> clearAuthInfos
    void clearProxyConfigs(long) -> clearProxyConfigs
    void addAuthInfo(long,long) -> addAuthInfo
    void removeAuthInfo(long,long) -> removeAuthInfo
    java.lang.Object invite(long,java.lang.String) -> invite
    void terminateCall(long,long) -> terminateCall
    long getRemoteAddress(long) -> getRemoteAddress
    boolean isInCall(long) -> isInCall
    boolean isInComingInvitePending(long) -> isInComingInvitePending
    void acceptCall(long,long) -> acceptCall
    long getCallLog(long,int) -> getCallLog
    int getNumberOfCallLogs(long) -> getNumberOfCallLogs
    void delete(long) -> delete
    void setNetworkStateReachable(long,boolean) -> setNetworkStateReachable
    boolean isNetworkStateReachable(long) -> isNetworkStateReachable
    void setPlaybackGain(long,float) -> setPlaybackGain
    float getPlaybackGain(long) -> getPlaybackGain
    void muteMic(long,boolean) -> muteMic
    long interpretUrl(long,java.lang.String) -> interpretUrl
    java.lang.Object inviteAddress(long,long) -> inviteAddress
    java.lang.Object inviteAddressWithParams(long,long,long) -> inviteAddressWithParams
    void sendDtmf(long,char) -> sendDtmf
    void clearCallLogs(long) -> clearCallLogs
    boolean isMicMuted(long) -> isMicMuted
    long findPayloadType(long,java.lang.String,int,int) -> findPayloadType
    int enablePayloadType(long,long,boolean) -> enablePayloadType
    boolean isPayloadTypeEnabled(long,long) -> isPayloadTypeEnabled
    void enableEchoCancellation(long,boolean) -> enableEchoCancellation
    boolean isEchoCancellationEnabled(long) -> isEchoCancellationEnabled
    java.lang.Object getCurrentCall(long) -> getCurrentCall
    void playDtmf(long,char,int) -> playDtmf
    void stopDtmf(long) -> stopDtmf
    void setVideoWindowId(long,java.lang.Object) -> setVideoWindowId
    void setPreviewWindowId(long,java.lang.Object) -> setPreviewWindowId
    void setDeviceRotation(long,int) -> setDeviceRotation
    void addFriend(long,long) -> addFriend
    void setPresenceInfo(long,int,java.lang.String,int) -> setPresenceInfo
    int getPresenceInfo(long) -> getPresenceInfo
    void setPresenceModel(long,long) -> setPresenceModel
    java.lang.Object getPresenceModel(long) -> getPresenceModel
    long getOrCreateChatRoom(long,java.lang.String) -> getOrCreateChatRoom
    void enableVideo(long,boolean,boolean) -> enableVideo
    boolean isVideoEnabled(long) -> isVideoEnabled
    boolean isVideoSupported(long) -> isVideoSupported
    void setFirewallPolicy(long,int) -> setFirewallPolicy
    int getFirewallPolicy(long) -> getFirewallPolicy
    void setStunServer(long,java.lang.String) -> setStunServer
    java.lang.String getStunServer(long) -> getStunServer
    long createDefaultCallParams(long) -> createDefaultCallParams
    int updateCall(long,long,long) -> updateCall
    void setUploadBandwidth(long,int) -> setUploadBandwidth
    void setDownloadBandwidth(long,int) -> setDownloadBandwidth
    void setPreferredVideoSize(long,int,int) -> setPreferredVideoSize
    void setPreferredVideoSizeByName(long,java.lang.String) -> setPreferredVideoSizeByName
    int[] getPreferredVideoSize(long) -> getPreferredVideoSize
    void setRing(long,java.lang.String) -> setRing
    java.lang.String getRing(long) -> getRing
    void setRootCA(long,java.lang.String) -> setRootCA
    long[] listVideoPayloadTypes(long) -> listVideoPayloadTypes
    long[] getProxyConfigList(long) -> getProxyConfigList
    long[] getAuthInfosList(long) -> getAuthInfosList
    long findAuthInfos(long,java.lang.String,java.lang.String,java.lang.String) -> findAuthInfos
    long[] listAudioPayloadTypes(long) -> listAudioPayloadTypes
    void enableKeepAlive(long,boolean) -> enableKeepAlive
    boolean isKeepAliveEnabled(long) -> isKeepAliveEnabled
    int startEchoCalibration(long,java.lang.Object) -> startEchoCalibration
    int getSignalingTransportPort(long,int) -> getSignalingTransportPort
    void setSignalingTransportPorts(long,int,int,int) -> setSignalingTransportPorts
    void enableIpv6(long,boolean) -> enableIpv6
    boolean isIpv6Enabled(long) -> isIpv6Enabled
    int pauseCall(long,long) -> pauseCall
    int pauseAllCalls(long) -> pauseAllCalls
    int resumeCall(long,long) -> resumeCall
    void setUploadPtime(long,int) -> setUploadPtime
    void setDownloadPtime(long,int) -> setDownloadPtime
    void setZrtpSecretsCache(long,java.lang.String) -> setZrtpSecretsCache
    void enableEchoLimiter(long,boolean) -> enableEchoLimiter
    int setVideoDevice(long,int) -> setVideoDevice
    int getVideoDevice(long) -> getVideoDevice
    int getMediaEncryption(long) -> getMediaEncryption
    void setMediaEncryption(long,int) -> setMediaEncryption
    boolean isMediaEncryptionMandatory(long) -> isMediaEncryptionMandatory
    void setMediaEncryptionMandatory(long,boolean) -> setMediaEncryptionMandatory
    void removeCallLog(long,long) -> removeCallLog
    int getMissedCallsCount(long) -> getMissedCallsCount
    void resetMissedCallsCount(long) -> resetMissedCallsCount
    java.lang.String getVersion(long) -> getVersion
    void setAudioPort(long,int) -> setAudioPort
    void setVideoPort(long,int) -> setVideoPort
    void setAudioPortRange(long,int,int) -> setAudioPortRange
    void setVideoPortRange(long,int,int) -> setVideoPortRange
    void setIncomingTimeout(long,int) -> setIncomingTimeout
    void setInCallTimeout(long,int) -> setInCallTimeout
    void setPrimaryContact(long,java.lang.String,java.lang.String) -> setPrimaryContact
    java.lang.String getPrimaryContactUsername(long) -> getPrimaryContactUsername
    java.lang.String getPrimaryContactDisplayName(long) -> getPrimaryContactDisplayName
    void setChatDatabasePath(long,java.lang.String) -> setChatDatabasePath
    long[] getChatRooms(long) -> getChatRooms
    int migrateToMultiTransport(long) -> migrateToMultiTransport
    long createProxyConfig(long) -> createProxyConfig
    void setCallErrorTone(long,int,java.lang.String) -> setCallErrorTone
    void enableSdp200Ack(long,boolean) -> enableSdp200Ack
    boolean isSdp200AckEnabled(long) -> isSdp200AckEnabled
    void stopRinging(long) -> stopRinging
    void finalize() -> finalize
    boolean contextInitialized() -> contextInitialized
    void setContext(java.lang.Object) -> setContext
    void addAuthInfo(org.linphone.core.LinphoneAuthInfo) -> addAuthInfo
    void removeAuthInfo(org.linphone.core.LinphoneAuthInfo) -> removeAuthInfo
    org.linphone.core.LinphoneProxyConfig getDefaultProxyConfig() -> getDefaultProxyConfig
    org.linphone.core.LinphoneCall invite(java.lang.String) -> invite
    void iterate() -> iterate
    void setDefaultProxyConfig(org.linphone.core.LinphoneProxyConfig) -> setDefaultProxyConfig
    void addProxyConfig(org.linphone.core.LinphoneProxyConfig) -> addProxyConfig
    void removeProxyConfig(org.linphone.core.LinphoneProxyConfig) -> removeProxyConfig
    void clearAuthInfos() -> clearAuthInfos
    void clearProxyConfigs() -> clearProxyConfigs
    void terminateCall(org.linphone.core.LinphoneCall) -> terminateCall
    org.linphone.core.LinphoneAddress getRemoteAddress() -> getRemoteAddress
    boolean isIncall() -> isIncall
    boolean isInComingInvitePending() -> isInComingInvitePending
    void acceptCall(org.linphone.core.LinphoneCall) -> acceptCall
    org.linphone.core.LinphoneCallLog[] getCallLogs() -> getCallLogs
    void destroy() -> destroy
    void isValid() -> isValid
    void setNetworkReachable(boolean) -> setNetworkReachable
    void setPlaybackGain(float) -> setPlaybackGain
    float getPlaybackGain() -> getPlaybackGain
    void muteMic(boolean) -> muteMic
    org.linphone.core.LinphoneAddress interpretUrl(java.lang.String) -> interpretUrl
    org.linphone.core.LinphoneCall invite(org.linphone.core.LinphoneAddress) -> invite
    void sendDtmf(char) -> sendDtmf
    void clearCallLogs() -> clearCallLogs
    boolean isMicMuted() -> isMicMuted
    org.linphone.core.PayloadType findPayloadType(java.lang.String,int,int) -> findPayloadType
    void enablePayloadType(org.linphone.core.PayloadType,boolean) -> enablePayloadType
    boolean isPayloadTypeEnabled(org.linphone.core.PayloadType) -> isPayloadTypeEnabled
    void enableEchoCancellation(boolean) -> enableEchoCancellation
    boolean isEchoCancellationEnabled() -> isEchoCancellationEnabled
    org.linphone.core.LinphoneCall getCurrentCall() -> getCurrentCall
    int getPlayLevel() -> getPlayLevel
    void setPlayLevel(int) -> setPlayLevel
    void applyAudioHacks() -> applyAudioHacks
    void setAudioModeIncallForGalaxyS() -> setAudioModeIncallForGalaxyS
    void routeAudioToSpeakerHelper(boolean) -> routeAudioToSpeakerHelper
    void forceSpeakerState(long,boolean) -> forceSpeakerState
    void enableSpeaker(boolean) -> enableSpeaker
    boolean isSpeakerEnabled() -> isSpeakerEnabled
    void playDtmf(char,int) -> playDtmf
    void stopDtmf() -> stopDtmf
    void addFriend(org.linphone.core.LinphoneFriend) -> addFriend
    void setPresenceInfo(int,java.lang.String,org.linphone.core.OnlineStatus) -> setPresenceInfo
    org.linphone.core.OnlineStatus getPresenceInfo() -> getPresenceInfo
    void setPresenceModel(org.linphone.core.PresenceModel) -> setPresenceModel
    org.linphone.core.PresenceModel getPresenceModel() -> getPresenceModel
    org.linphone.core.LinphoneChatRoom getOrCreateChatRoom(java.lang.String) -> getOrCreateChatRoom
    void setPreviewWindow(java.lang.Object) -> setPreviewWindow
    void setVideoWindow(java.lang.Object) -> setVideoWindow
    void setDeviceRotation(int) -> setDeviceRotation
    void enableVideo(boolean,boolean) -> enableVideo
    boolean isVideoEnabled() -> isVideoEnabled
    boolean isVideoSupported() -> isVideoSupported
    org.linphone.core.LinphoneCore$FirewallPolicy getFirewallPolicy() -> getFirewallPolicy
    java.lang.String getStunServer() -> getStunServer
    void setFirewallPolicy(org.linphone.core.LinphoneCore$FirewallPolicy) -> setFirewallPolicy
    void setStunServer(java.lang.String) -> setStunServer
    org.linphone.core.LinphoneCallParams createDefaultCallParameters() -> createDefaultCallParameters
    org.linphone.core.LinphoneCall inviteAddressWithParams(org.linphone.core.LinphoneAddress,org.linphone.core.LinphoneCallParams) -> inviteAddressWithParams
    int updateCall(org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCallParams) -> updateCall
    void setUploadBandwidth(int) -> setUploadBandwidth
    void setDownloadBandwidth(int) -> setDownloadBandwidth
    void setPreferredVideoSize(org.linphone.core.VideoSize) -> setPreferredVideoSize
    void setPreferredVideoSizeByName(java.lang.String) -> setPreferredVideoSizeByName
    org.linphone.core.VideoSize getPreferredVideoSize() -> getPreferredVideoSize
    void setRing(java.lang.String) -> setRing
    java.lang.String getRing() -> getRing
    void setRootCA(java.lang.String) -> setRootCA
    org.linphone.core.LinphoneProxyConfig[] getProxyConfigList() -> getProxyConfigList
    org.linphone.core.PayloadType[] getVideoCodecs() -> getVideoCodecs
    org.linphone.core.PayloadType[] getAudioCodecs() -> getAudioCodecs
    boolean isNetworkReachable() -> isNetworkReachable
    void enableKeepAlive(boolean) -> enableKeepAlive
    boolean isKeepAliveEnabled() -> isKeepAliveEnabled
    void startEchoCalibration(java.lang.Object) -> startEchoCalibration
    org.linphone.core.LinphoneCore$Transports getSignalingTransportPorts() -> getSignalingTransportPorts
    void setSignalingTransportPorts(org.linphone.core.LinphoneCore$Transports) -> setSignalingTransportPorts
    void enableIpv6(boolean) -> enableIpv6
    boolean isIpv6Enabled() -> isIpv6Enabled
    void adjustSoftwareVolume(int) -> adjustSoftwareVolume
    boolean pauseCall(org.linphone.core.LinphoneCall) -> pauseCall
    boolean resumeCall(org.linphone.core.LinphoneCall) -> resumeCall
    boolean pauseAllCalls() -> pauseAllCalls
    void setDownloadPtime(int) -> setDownloadPtime
    void setUploadPtime(int) -> setUploadPtime
    void setZrtpSecretsCache(java.lang.String) -> setZrtpSecretsCache
    void enableEchoLimiter(boolean) -> enableEchoLimiter
    void setVideoDevice(int) -> setVideoDevice
    int getVideoDevice() -> getVideoDevice
    void leaveConference(long) -> leaveConference
    void leaveConference() -> leaveConference
    boolean enterConference(long) -> enterConference
    boolean enterConference() -> enterConference
    boolean isInConference(long) -> isInConference
    boolean isInConference() -> isInConference
    void terminateConference(long) -> terminateConference
    void terminateConference() -> terminateConference
    int getConferenceSize(long) -> getConferenceSize
    int getConferenceSize() -> getConferenceSize
    int getCallsNb(long) -> getCallsNb
    int getCallsNb() -> getCallsNb
    void terminateAllCalls(long) -> terminateAllCalls
    void terminateAllCalls() -> terminateAllCalls
    java.lang.Object getCall(long,int) -> getCall
    org.linphone.core.LinphoneCall[] getCalls() -> getCalls
    void addAllToConference(long) -> addAllToConference
    void addAllToConference() -> addAllToConference
    void addToConference(long,long) -> addToConference
    void addToConference(org.linphone.core.LinphoneCall) -> addToConference
    void removeFromConference(long,long) -> removeFromConference
    void removeFromConference(org.linphone.core.LinphoneCall) -> removeFromConference
    long getCallPtr(org.linphone.core.LinphoneCall) -> getCallPtr
    long getCallParamsPtr(org.linphone.core.LinphoneCallParams) -> getCallParamsPtr
    int transferCall(long,long,java.lang.String) -> transferCall
    void transferCall(org.linphone.core.LinphoneCall,java.lang.String) -> transferCall
    int transferCallToAnother(long,long,long) -> transferCallToAnother
    void transferCallToAnother(org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCall) -> transferCallToAnother
    java.lang.Object findCallFromUri(long,java.lang.String) -> findCallFromUri
    org.linphone.core.LinphoneCall findCallFromUri(java.lang.String) -> findCallFromUri
    org.linphone.core.LinphoneCore$MediaEncryption getMediaEncryption() -> getMediaEncryption
    boolean isMediaEncryptionMandatory() -> isMediaEncryptionMandatory
    void setMediaEncryption(org.linphone.core.LinphoneCore$MediaEncryption) -> setMediaEncryption
    void setMediaEncryptionMandatory(boolean) -> setMediaEncryptionMandatory
    int getMaxCalls(long) -> getMaxCalls
    int getMaxCalls() -> getMaxCalls
    boolean isMyself(java.lang.String) -> isMyself
    boolean soundResourcesLocked(long) -> soundResourcesLocked
    boolean soundResourcesLocked() -> soundResourcesLocked
    void setMaxCalls(long,int) -> setMaxCalls
    void setMaxCalls(int) -> setMaxCalls
    boolean isEchoLimiterEnabled(long) -> isEchoLimiterEnabled
    boolean isEchoLimiterEnabled() -> isEchoLimiterEnabled
    boolean mediaEncryptionSupported(long,int) -> mediaEncryptionSupported
    boolean mediaEncryptionSupported(org.linphone.core.LinphoneCore$MediaEncryption) -> mediaEncryptionSupported
    void setPlayFile(long,java.lang.String) -> setPlayFile
    void setPlayFile(java.lang.String) -> setPlayFile
    void tunnelAddServerAndMirror(long,java.lang.String,int,int,int) -> tunnelAddServerAndMirror
    void tunnelAddServerAndMirror(java.lang.String,int,int,int) -> tunnelAddServerAndMirror
    void tunnelAutoDetect(long) -> tunnelAutoDetect
    void tunnelAutoDetect() -> tunnelAutoDetect
    void tunnelCleanServers(long) -> tunnelCleanServers
    void tunnelCleanServers() -> tunnelCleanServers
    void tunnelEnable(long,boolean) -> tunnelEnable
    void tunnelEnable(boolean) -> tunnelEnable
    boolean isTunnelAvailable() -> isTunnelAvailable
    void acceptCallWithParams(long,long,long) -> acceptCallWithParams
    void acceptCallWithParams(org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCallParams) -> acceptCallWithParams
    void acceptCallUpdate(long,long,long) -> acceptCallUpdate
    void acceptCallUpdate(org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCallParams) -> acceptCallUpdate
    void deferCallUpdate(long,long) -> deferCallUpdate
    void deferCallUpdate(org.linphone.core.LinphoneCall) -> deferCallUpdate
    void setVideoPolicy(long,boolean,boolean) -> setVideoPolicy
    void setVideoPolicy(boolean,boolean) -> setVideoPolicy
    boolean getVideoAutoInitiatePolicy(long) -> getVideoAutoInitiatePolicy
    boolean getVideoAutoInitiatePolicy() -> getVideoAutoInitiatePolicy
    boolean getVideoAutoAcceptPolicy(long) -> getVideoAutoAcceptPolicy
    boolean getVideoAutoAcceptPolicy() -> getVideoAutoAcceptPolicy
    void setStaticPicture(long,java.lang.String) -> setStaticPicture
    void setStaticPicture(java.lang.String) -> setStaticPicture
    void setUserAgent(long,java.lang.String,java.lang.String) -> setUserAgent
    void setUserAgent(java.lang.String,java.lang.String) -> setUserAgent
    void setCpuCountNative(int) -> setCpuCountNative
    void setCpuCount(int) -> setCpuCount
    int getMissedCallsCount() -> getMissedCallsCount
    void removeCallLog(org.linphone.core.LinphoneCallLog) -> removeCallLog
    void resetMissedCallsCount() -> resetMissedCallsCount
    void tunnelSetHttpProxy(long,java.lang.String,int,java.lang.String,java.lang.String) -> tunnelSetHttpProxy
    void tunnelSetHttpProxy(java.lang.String,int,java.lang.String,java.lang.String) -> tunnelSetHttpProxy
    void refreshRegisters(long) -> refreshRegisters
    void refreshRegisters() -> refreshRegisters
    java.lang.String getVersion() -> getVersion
    org.linphone.core.PayloadType findPayloadType(java.lang.String,int) -> findPayloadType
    void removeFriend(long,long) -> removeFriend
    void removeFriend(org.linphone.core.LinphoneFriend) -> removeFriend
    long getFriendByAddress(long,java.lang.String) -> getFriendByAddress
    org.linphone.core.LinphoneFriend findFriendByAddress(java.lang.String) -> findFriendByAddress
    void setAudioPort(int) -> setAudioPort
    void setVideoPort(int) -> setVideoPort
    void setAudioPortRange(int,int) -> setAudioPortRange
    void setVideoPortRange(int,int) -> setVideoPortRange
    void setIncomingTimeout(int) -> setIncomingTimeout
    void setInCallTimeout(int) -> setInCallTimeout
    void setMicrophoneGain(long,float) -> setMicrophoneGain
    void setMicrophoneGain(float) -> setMicrophoneGain
    void setPrimaryContact(java.lang.String,java.lang.String) -> setPrimaryContact
    java.lang.String getPrimaryContactUsername() -> getPrimaryContactUsername
    java.lang.String getPrimaryContactDisplayName() -> getPrimaryContactDisplayName
    void setUseSipInfoForDtmfs(long,boolean) -> setUseSipInfoForDtmfs
    void setUseSipInfoForDtmfs(boolean) -> setUseSipInfoForDtmfs
    boolean getUseSipInfoForDtmfs(long) -> getUseSipInfoForDtmfs
    boolean getUseSipInfoForDtmfs() -> getUseSipInfoForDtmfs
    void setUseRfc2833ForDtmfs(long,boolean) -> setUseRfc2833ForDtmfs
    void setUseRfc2833ForDtmfs(boolean) -> setUseRfc2833ForDtmfs
    boolean getUseRfc2833ForDtmfs(long) -> getUseRfc2833ForDtmfs
    boolean getUseRfc2833ForDtmfs() -> getUseRfc2833ForDtmfs
    long getConfig(long) -> getConfig
    org.linphone.core.LpConfig getConfig() -> getConfig
    boolean needsEchoCalibration(long) -> needsEchoCalibration
    boolean needsEchoCalibration() -> needsEchoCalibration
    void declineCall(long,long,int) -> declineCall
    void declineCall(org.linphone.core.LinphoneCall,org.linphone.core.Reason) -> declineCall
    boolean upnpAvailable(long) -> upnpAvailable
    boolean upnpAvailable() -> upnpAvailable
    int getUpnpState(long) -> getUpnpState
    org.linphone.core.LinphoneCore$UpnpState getUpnpState() -> getUpnpState
    java.lang.String getUpnpExternalIpaddress(long) -> getUpnpExternalIpaddress
    java.lang.String getUpnpExternalIpaddress() -> getUpnpExternalIpaddress
    int startConferenceRecording(long,java.lang.String) -> startConferenceRecording
    void startConferenceRecording(java.lang.String) -> startConferenceRecording
    int stopConferenceRecording(long) -> stopConferenceRecording
    void stopConferenceRecording() -> stopConferenceRecording
    org.linphone.core.PayloadType findPayloadType(java.lang.String) -> findPayloadType
    void setSipDscp(long,int) -> setSipDscp
    void setSipDscp(int) -> setSipDscp
    int getSipDscp(long) -> getSipDscp
    int getSipDscp() -> getSipDscp
    void setAudioDscp(long,int) -> setAudioDscp
    void setAudioDscp(int) -> setAudioDscp
    int getAudioDscp(long) -> getAudioDscp
    int getAudioDscp() -> getAudioDscp
    void setVideoDscp(long,int) -> setVideoDscp
    void setVideoDscp(int) -> setVideoDscp
    int getVideoDscp(long) -> getVideoDscp
    int getVideoDscp() -> getVideoDscp
    long createInfoMessage(long) -> createInfoMessage
    org.linphone.core.LinphoneInfoMessage createInfoMessage() -> createInfoMessage
    java.lang.Object subscribe(long,long,java.lang.String,int,java.lang.String,java.lang.String,byte[],java.lang.String) -> subscribe
    org.linphone.core.LinphoneEvent subscribe(org.linphone.core.LinphoneAddress,java.lang.String,int,org.linphone.core.LinphoneContent) -> subscribe
    java.lang.Object publish(long,long,java.lang.String,int,java.lang.String,java.lang.String,byte[],java.lang.String) -> publish
    org.linphone.core.LinphoneEvent publish(org.linphone.core.LinphoneAddress,java.lang.String,int,org.linphone.core.LinphoneContent) -> publish
    java.lang.Object createSubscribe(long,long,java.lang.String,int) -> createSubscribe
    org.linphone.core.LinphoneEvent createSubscribe(org.linphone.core.LinphoneAddress,java.lang.String,int) -> createSubscribe
    java.lang.Object createPublish(long,long,java.lang.String,int) -> createPublish
    org.linphone.core.LinphoneEvent createPublish(org.linphone.core.LinphoneAddress,java.lang.String,int) -> createPublish
    void setChatDatabasePath(java.lang.String) -> setChatDatabasePath
    org.linphone.core.LinphoneChatRoom[] getChatRooms() -> getChatRooms
    org.linphone.core.LinphoneAuthInfo[] getAuthInfosList() -> getAuthInfosList
    org.linphone.core.LinphoneAuthInfo findAuthInfo(java.lang.String,java.lang.String,java.lang.String) -> findAuthInfo
    org.linphone.core.LinphoneCall startReferedCall(long,long,long) -> startReferedCall
    org.linphone.core.LinphoneCall startReferedCall(org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCallParams) -> startReferedCall
    java.lang.String[] listSupportedVideoResolutions(long) -> listSupportedVideoResolutions
    java.lang.String[] getSupportedVideoSizes() -> getSupportedVideoSizes
    int migrateToMultiTransport() -> migrateToMultiTransport
    boolean acceptEarlyMedia(long,long) -> acceptEarlyMedia
    boolean acceptEarlyMedia(org.linphone.core.LinphoneCall) -> acceptEarlyMedia
    boolean acceptEarlyMediaWithParams(long,long,long) -> acceptEarlyMediaWithParams
    boolean acceptEarlyMediaWithParams(org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCallParams) -> acceptEarlyMediaWithParams
    org.linphone.core.LinphoneProxyConfig createProxyConfig() -> createProxyConfig
    void setCallErrorTone(org.linphone.core.Reason,java.lang.String) -> setCallErrorTone
    void setMtu(long,int) -> setMtu
    void setMtu(int) -> setMtu
    int getMtu(long) -> getMtu
    int getMtu() -> getMtu
    void enableSdp200Ack(boolean) -> enableSdp200Ack
    boolean isSdp200AckEnabled() -> isSdp200AckEnabled
    void setTone(long,int,java.lang.String) -> setTone
    void setTone(org.linphone.core.ToneID,java.lang.String) -> setTone
    void disableChat(long,int) -> disableChat
    void disableChat(org.linphone.core.Reason) -> disableChat
    void enableChat(long) -> enableChat
    void enableChat() -> enableChat
    boolean chatEnabled(long) -> chatEnabled
    boolean chatEnabled() -> chatEnabled
    void stopRinging() -> stopRinging
    void setPayloadTypeBitrate(long,long,int) -> setPayloadTypeBitrate
    void setPayloadTypeBitrate(org.linphone.core.PayloadType,int) -> setPayloadTypeBitrate
    int getPayloadTypeBitrate(long,long) -> getPayloadTypeBitrate
    int getPayloadTypeBitrate(org.linphone.core.PayloadType) -> getPayloadTypeBitrate
org.linphone.core.LinphoneCoreListener -> org.linphone.core.LinphoneCoreListener:
    void authInfoRequested(org.linphone.core.LinphoneCore,java.lang.String,java.lang.String,java.lang.String) -> authInfoRequested
    void globalState(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCore$GlobalState,java.lang.String) -> globalState
    void callState(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCall$State,java.lang.String) -> callState
    void callStatsUpdated(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCallStats) -> callStatsUpdated
    void callEncryptionChanged(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,boolean,java.lang.String) -> callEncryptionChanged
    void registrationState(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneProxyConfig,org.linphone.core.LinphoneCore$RegistrationState,java.lang.String) -> registrationState
    void newSubscriptionRequest(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneFriend,java.lang.String) -> newSubscriptionRequest
    void notifyPresenceReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneFriend) -> notifyPresenceReceived
    void textReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneChatRoom,org.linphone.core.LinphoneAddress,java.lang.String) -> textReceived
    void messageReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneChatRoom,org.linphone.core.LinphoneChatMessage) -> messageReceived
    void isComposingReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneChatRoom) -> isComposingReceived
    void dtmfReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,int) -> dtmfReceived
    void ecCalibrationStatus(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCore$EcCalibratorStatus,int,java.lang.Object) -> ecCalibrationStatus
    void notifyReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,org.linphone.core.LinphoneAddress,byte[]) -> notifyReceived
    void transferState(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCall$State) -> transferState
    void infoReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,org.linphone.core.LinphoneInfoMessage) -> infoReceived
    void subscriptionStateChanged(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneEvent,org.linphone.core.SubscriptionState) -> subscriptionStateChanged
    void notifyReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneEvent,java.lang.String,org.linphone.core.LinphoneContent) -> notifyReceived
    void publishStateChanged(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneEvent,org.linphone.core.PublishState) -> publishStateChanged
    void configuringStatus(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCore$RemoteProvisioningState,java.lang.String) -> configuringStatus
    void show(org.linphone.core.LinphoneCore) -> show
    void displayStatus(org.linphone.core.LinphoneCore,java.lang.String) -> displayStatus
    void displayMessage(org.linphone.core.LinphoneCore,java.lang.String) -> displayMessage
    void displayWarning(org.linphone.core.LinphoneCore,java.lang.String) -> displayWarning
org.linphone.core.LinphoneEvent -> org.linphone.core.LinphoneEvent:
    java.lang.String getEventName() -> getEventName
    org.linphone.core.SubscriptionDir getSubscriptionDir() -> getSubscriptionDir
    org.linphone.core.SubscriptionState getSubscriptionState() -> getSubscriptionState
    void acceptSubscription() -> acceptSubscription
    void denySubscription(org.linphone.core.Reason) -> denySubscription
    void notify(org.linphone.core.LinphoneContent) -> notify
    void updateSubscribe(org.linphone.core.LinphoneContent) -> updateSubscribe
    void updatePublish(org.linphone.core.LinphoneContent) -> updatePublish
    void terminate() -> terminate
    org.linphone.core.Reason getReason() -> getReason
    org.linphone.core.ErrorInfo getErrorInfo() -> getErrorInfo
    void setUserContext(java.lang.Object) -> setUserContext
    java.lang.Object getUserContext() -> getUserContext
    void addCustomHeader(java.lang.String,java.lang.String) -> addCustomHeader
    java.lang.String getCustomHeader(java.lang.String) -> getCustomHeader
    void sendSubscribe(org.linphone.core.LinphoneContent) -> sendSubscribe
    void sendPublish(org.linphone.core.LinphoneContent) -> sendPublish
    org.linphone.core.LinphoneCore getCore() -> getCore
org.linphone.core.LinphoneEventImpl -> org.linphone.core.LinphoneEventImpl:
    java.lang.Object mUserContext -> mUserContext
    long mNativePtr -> mNativePtr
    java.lang.String getEventName(long) -> getEventName
    java.lang.String getEventName() -> getEventName
    int acceptSubscription(long) -> acceptSubscription
    void acceptSubscription() -> acceptSubscription
    int denySubscription(long,int) -> denySubscription
    void denySubscription(org.linphone.core.Reason) -> denySubscription
    int notify(long,java.lang.String,java.lang.String,byte[],java.lang.String) -> notify
    void notify(org.linphone.core.LinphoneContent) -> notify
    int updateSubscribe(long,java.lang.String,java.lang.String,byte[],java.lang.String) -> updateSubscribe
    void updateSubscribe(org.linphone.core.LinphoneContent) -> updateSubscribe
    int updatePublish(long,java.lang.String,java.lang.String,byte[],java.lang.String) -> updatePublish
    void updatePublish(org.linphone.core.LinphoneContent) -> updatePublish
    int terminate(long) -> terminate
    void terminate() -> terminate
    int getReason(long) -> getReason
    org.linphone.core.Reason getReason() -> getReason
    void setUserContext(java.lang.Object) -> setUserContext
    java.lang.Object getUserContext() -> getUserContext
    int getSubscriptionDir(long) -> getSubscriptionDir
    org.linphone.core.SubscriptionDir getSubscriptionDir() -> getSubscriptionDir
    int getSubscriptionState(long) -> getSubscriptionState
    org.linphone.core.SubscriptionState getSubscriptionState() -> getSubscriptionState
    void unref(long) -> unref
    void finalize() -> finalize
    void addCustomHeader(long,java.lang.String,java.lang.String) -> addCustomHeader
    void addCustomHeader(java.lang.String,java.lang.String) -> addCustomHeader
    java.lang.String getCustomHeader(long,java.lang.String) -> getCustomHeader
    java.lang.String getCustomHeader(java.lang.String) -> getCustomHeader
    void sendSubscribe(long,java.lang.String,java.lang.String,byte[],java.lang.String) -> sendSubscribe
    void sendSubscribe(org.linphone.core.LinphoneContent) -> sendSubscribe
    void sendPublish(long,java.lang.String,java.lang.String,byte[],java.lang.String) -> sendPublish
    void sendPublish(org.linphone.core.LinphoneContent) -> sendPublish
    long getErrorInfo(long) -> getErrorInfo
    org.linphone.core.ErrorInfo getErrorInfo() -> getErrorInfo
    java.lang.Object getCore(long) -> getCore
    org.linphone.core.LinphoneCore getCore() -> getCore
org.linphone.core.LinphoneFriend -> org.linphone.core.LinphoneFriend:
    void setAddress(org.linphone.core.LinphoneAddress) -> setAddress
    org.linphone.core.LinphoneAddress getAddress() -> getAddress
    void setIncSubscribePolicy(org.linphone.core.LinphoneFriend$SubscribePolicy) -> setIncSubscribePolicy
    org.linphone.core.LinphoneFriend$SubscribePolicy getIncSubscribePolicy() -> getIncSubscribePolicy
    void enableSubscribes(boolean) -> enableSubscribes
    boolean isSubscribesEnabled() -> isSubscribesEnabled
    org.linphone.core.OnlineStatus getStatus() -> getStatus
    org.linphone.core.PresenceModel getPresenceModel() -> getPresenceModel
    void edit() -> edit
    void done() -> done
    java.lang.String toString() -> toString
    long getNativePtr() -> getNativePtr
org.linphone.core.LinphoneFriend$SubscribePolicy -> org.linphone.core.LinphoneFriend$SubscribePolicy:
    java.util.Vector values -> values
    int mValue -> mValue
    java.lang.String mStringValue -> mStringValue
    org.linphone.core.LinphoneFriend$SubscribePolicy SPWait -> SPWait
    org.linphone.core.LinphoneFriend$SubscribePolicy SPDeny -> SPDeny
    org.linphone.core.LinphoneFriend$SubscribePolicy SPAccept -> SPAccept
    org.linphone.core.LinphoneFriend$SubscribePolicy fromInt(int) -> fromInt
    java.lang.String toString() -> toString
org.linphone.core.LinphoneFriendImpl -> org.linphone.core.LinphoneFriendImpl:
    long nativePtr -> nativePtr
    boolean ownPtr -> ownPtr
    long newLinphoneFriend(java.lang.String) -> newLinphoneFriend
    void setAddress(long,long) -> setAddress
    long getAddress(long) -> getAddress
    void setIncSubscribePolicy(long,int) -> setIncSubscribePolicy
    int getIncSubscribePolicy(long) -> getIncSubscribePolicy
    void enableSubscribes(long,boolean) -> enableSubscribes
    boolean isSubscribesEnabled(long) -> isSubscribesEnabled
    int getStatus(long) -> getStatus
    java.lang.Object getPresenceModel(long) -> getPresenceModel
    void setPresenceModel(long,long) -> setPresenceModel
    void edit(long) -> edit
    void done(long) -> done
    void delete(long) -> delete
    java.lang.Object getCore(long) -> getCore
    void finalize() -> finalize
    void setAddress(org.linphone.core.LinphoneAddress) -> setAddress
    org.linphone.core.LinphoneAddress getAddress() -> getAddress
    void setIncSubscribePolicy(org.linphone.core.LinphoneFriend$SubscribePolicy) -> setIncSubscribePolicy
    org.linphone.core.LinphoneFriend$SubscribePolicy getIncSubscribePolicy() -> getIncSubscribePolicy
    void enableSubscribes(boolean) -> enableSubscribes
    boolean isSubscribesEnabled() -> isSubscribesEnabled
    org.linphone.core.OnlineStatus getStatus() -> getStatus
    org.linphone.core.PresenceModel getPresenceModel() -> getPresenceModel
    void edit() -> edit
    void done() -> done
    long getNativePtr() -> getNativePtr
    java.lang.Object getSyncObject() -> getSyncObject
org.linphone.core.LinphoneInfoMessage -> org.linphone.core.LinphoneInfoMessage:
    void setContent(org.linphone.core.LinphoneContent) -> setContent
    org.linphone.core.LinphoneContent getContent() -> getContent
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    java.lang.String getHeader(java.lang.String) -> getHeader
org.linphone.core.LinphoneInfoMessageImpl -> org.linphone.core.LinphoneInfoMessageImpl:
    long nativePtr -> nativePtr
    org.linphone.core.LinphoneContent mContent -> mContent
    java.lang.Object getContent(long) -> getContent
    void setContent(long,java.lang.String,java.lang.String,java.lang.String) -> setContent
    void setContent(org.linphone.core.LinphoneContent) -> setContent
    org.linphone.core.LinphoneContent getContent() -> getContent
    void addHeader(long,java.lang.String,java.lang.String) -> addHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    java.lang.String getHeader(long,java.lang.String) -> getHeader
    java.lang.String getHeader(java.lang.String) -> getHeader
    void delete(long) -> delete
    void finalize() -> finalize
org.linphone.core.LinphoneLogHandler -> org.linphone.core.LinphoneLogHandler:
    int Fatal -> Fatal
    int Error -> Error
    int Warn -> Warn
    int Info -> Info
    int Debug -> Debug
    void log(java.lang.String,int,java.lang.String,java.lang.String,java.lang.Throwable) -> log
org.linphone.core.LinphoneProxyConfig -> org.linphone.core.LinphoneProxyConfig:
    org.linphone.core.LinphoneProxyConfig edit() -> edit
    void done() -> done
    void setIdentity(java.lang.String) -> setIdentity
    java.lang.String getIdentity() -> getIdentity
    void setProxy(java.lang.String) -> setProxy
    java.lang.String getProxy() -> getProxy
    org.linphone.core.LinphoneProxyConfig enableRegister(boolean) -> enableRegister
    boolean registerEnabled() -> registerEnabled
    java.lang.String normalizePhoneNumber(java.lang.String) -> normalizePhoneNumber
    void setDialPrefix(java.lang.String) -> setDialPrefix
    java.lang.String getDialPrefix() -> getDialPrefix
    void setDialEscapePlus(boolean) -> setDialEscapePlus
    boolean getDialEscapePlus() -> getDialEscapePlus
    java.lang.String getDomain() -> getDomain
    boolean isRegistered() -> isRegistered
    void setRoute(java.lang.String) -> setRoute
    java.lang.String getRoute() -> getRoute
    void enablePublish(boolean) -> enablePublish
    boolean publishEnabled() -> publishEnabled
    org.linphone.core.LinphoneCore$RegistrationState getState() -> getState
    void setExpires(int) -> setExpires
    int getExpires() -> getExpires
    void setPrivacy(int) -> setPrivacy
    int getPrivacy() -> getPrivacy
    void enableAvpf(boolean) -> enableAvpf
    void setAvpfRRInterval(int) -> setAvpfRRInterval
    int getAvpfRRInterval() -> getAvpfRRInterval
    boolean avpfEnabled() -> avpfEnabled
    void setContactParameters(java.lang.String) -> setContactParameters
    java.lang.String getContactParameters() -> getContactParameters
    void setContactUriParameters(java.lang.String) -> setContactUriParameters
    java.lang.String getContactUriParameters() -> getContactUriParameters
    int lookupCCCFromIso(java.lang.String) -> lookupCCCFromIso
    int lookupCCCFromE164(java.lang.String) -> lookupCCCFromE164
    org.linphone.core.Reason getError() -> getError
    org.linphone.core.ErrorInfo getErrorInfo() -> getErrorInfo
org.linphone.core.LinphoneProxyConfigImpl -> org.linphone.core.LinphoneProxyConfigImpl:
    long nativePtr -> nativePtr
    org.linphone.core.LinphoneCoreImpl mCore -> mCore
    boolean ownPtr -> ownPtr
    int getState(long) -> getState
    void setExpires(long,int) -> setExpires
    int getExpires(long) -> getExpires
    void finalize() -> finalize
    long newLinphoneProxyConfig() -> newLinphoneProxyConfig
    void delete(long) -> delete
    void edit(long) -> edit
    void done(long) -> done
    void setIdentity(long,java.lang.String) -> setIdentity
    java.lang.String getIdentity(long) -> getIdentity
    int setProxy(long,java.lang.String) -> setProxy
    java.lang.String getProxy(long) -> getProxy
    void enableRegister(long,boolean) -> enableRegister
    boolean isRegisterEnabled(long) -> isRegisterEnabled
    boolean isRegistered(long) -> isRegistered
    void setDialPrefix(long,java.lang.String) -> setDialPrefix
    java.lang.String getDialPrefix(long) -> getDialPrefix
    java.lang.String normalizePhoneNumber(long,java.lang.String) -> normalizePhoneNumber
    java.lang.String getDomain(long) -> getDomain
    void setDialEscapePlus(long,boolean) -> setDialEscapePlus
    boolean getDialEscapePlus(long) -> getDialEscapePlus
    java.lang.String getRoute(long) -> getRoute
    int setRoute(long,java.lang.String) -> setRoute
    void enablePublish(long,boolean) -> enablePublish
    boolean publishEnabled(long) -> publishEnabled
    void setContactParameters(long,java.lang.String) -> setContactParameters
    int lookupCCCFromIso(long,java.lang.String) -> lookupCCCFromIso
    int lookupCCCFromE164(long,java.lang.String) -> lookupCCCFromE164
    org.linphone.core.LinphoneProxyConfig enableRegister(boolean) -> enableRegister
    void done() -> done
    org.linphone.core.LinphoneProxyConfig edit() -> edit
    void setIdentity(java.lang.String) -> setIdentity
    void setProxy(java.lang.String) -> setProxy
    java.lang.String normalizePhoneNumber(java.lang.String) -> normalizePhoneNumber
    void setDialPrefix(java.lang.String) -> setDialPrefix
    java.lang.String getDialPrefix() -> getDialPrefix
    java.lang.String getDomain() -> getDomain
    void setDialEscapePlus(boolean) -> setDialEscapePlus
    boolean getDialEscapePlus() -> getDialEscapePlus
    java.lang.String getIdentity() -> getIdentity
    java.lang.String getProxy() -> getProxy
    boolean isRegistered() -> isRegistered
    boolean registerEnabled() -> registerEnabled
    java.lang.String getRoute() -> getRoute
    void setRoute(java.lang.String) -> setRoute
    void enablePublish(boolean) -> enablePublish
    org.linphone.core.LinphoneCore$RegistrationState getState() -> getState
    void setExpires(int) -> setExpires
    int getExpires() -> getExpires
    boolean publishEnabled() -> publishEnabled
    void setContactParameters(java.lang.String) -> setContactParameters
    int lookupCCCFromIso(java.lang.String) -> lookupCCCFromIso
    int lookupCCCFromE164(java.lang.String) -> lookupCCCFromE164
    int getError(long) -> getError
    org.linphone.core.Reason getError() -> getError
    void setPrivacy(long,int) -> setPrivacy
    void setPrivacy(int) -> setPrivacy
    int getPrivacy(long) -> getPrivacy
    int getPrivacy() -> getPrivacy
    void enableAvpf(long,boolean) -> enableAvpf
    void enableAvpf(boolean) -> enableAvpf
    boolean avpfEnabled(long) -> avpfEnabled
    boolean avpfEnabled() -> avpfEnabled
    void setAvpfRRInterval(long,int) -> setAvpfRRInterval
    void setAvpfRRInterval(int) -> setAvpfRRInterval
    int getAvpfRRInterval(long) -> getAvpfRRInterval
    int getAvpfRRInterval() -> getAvpfRRInterval
    java.lang.String getContactParameters(long) -> getContactParameters
    java.lang.String getContactParameters() -> getContactParameters
    void setContactUriParameters(long,java.lang.String) -> setContactUriParameters
    void setContactUriParameters(java.lang.String) -> setContactUriParameters
    java.lang.String getContactUriParameters(long) -> getContactUriParameters
    java.lang.String getContactUriParameters() -> getContactUriParameters
    long getErrorInfo(long) -> getErrorInfo
    org.linphone.core.ErrorInfo getErrorInfo() -> getErrorInfo
org.linphone.core.LpConfig -> org.linphone.core.LpConfig:
    void setInt(java.lang.String,java.lang.String,int) -> setInt
    void setFloat(java.lang.String,java.lang.String,float) -> setFloat
    void setBool(java.lang.String,java.lang.String,boolean) -> setBool
    void setString(java.lang.String,java.lang.String,java.lang.String) -> setString
    void setIntRange(java.lang.String,java.lang.String,int,int) -> setIntRange
    int getInt(java.lang.String,java.lang.String,int) -> getInt
    float getFloat(java.lang.String,java.lang.String,float) -> getFloat
    boolean getBool(java.lang.String,java.lang.String,boolean) -> getBool
    java.lang.String getString(java.lang.String,java.lang.String,java.lang.String) -> getString
    int[] getIntRange(java.lang.String,java.lang.String,int,int) -> getIntRange
    void sync() -> sync
org.linphone.core.LpConfigImpl -> org.linphone.core.LpConfigImpl:
    long nativePtr -> nativePtr
    boolean ownPtr -> ownPtr
    long newLpConfigImpl(java.lang.String) -> newLpConfigImpl
    void delete(long) -> delete
    void finalize() -> finalize
    void sync(long) -> sync
    void sync() -> sync
    void setInt(long,java.lang.String,java.lang.String,int) -> setInt
    void setInt(java.lang.String,java.lang.String,int) -> setInt
    void setFloat(long,java.lang.String,java.lang.String,float) -> setFloat
    void setFloat(java.lang.String,java.lang.String,float) -> setFloat
    void setBool(long,java.lang.String,java.lang.String,boolean) -> setBool
    void setBool(java.lang.String,java.lang.String,boolean) -> setBool
    void setString(long,java.lang.String,java.lang.String,java.lang.String) -> setString
    void setString(java.lang.String,java.lang.String,java.lang.String) -> setString
    void setIntRange(long,java.lang.String,java.lang.String,int,int) -> setIntRange
    void setIntRange(java.lang.String,java.lang.String,int,int) -> setIntRange
    int getInt(long,java.lang.String,java.lang.String,int) -> getInt
    int getInt(java.lang.String,java.lang.String,int) -> getInt
    float getFloat(long,java.lang.String,java.lang.String,float) -> getFloat
    float getFloat(java.lang.String,java.lang.String,float) -> getFloat
    boolean getBool(long,java.lang.String,java.lang.String,boolean) -> getBool
    boolean getBool(java.lang.String,java.lang.String,boolean) -> getBool
    java.lang.String getString(long,java.lang.String,java.lang.String,java.lang.String) -> getString
    java.lang.String getString(java.lang.String,java.lang.String,java.lang.String) -> getString
    int[] getIntRange(long,java.lang.String,java.lang.String,int,int) -> getIntRange
    int[] getIntRange(java.lang.String,java.lang.String,int,int) -> getIntRange
org.linphone.core.OnlineStatus -> org.linphone.core.OnlineStatus:
    java.util.Vector values -> values
    org.linphone.core.OnlineStatus Offline -> Offline
    org.linphone.core.OnlineStatus Online -> Online
    org.linphone.core.OnlineStatus Busy -> Busy
    org.linphone.core.OnlineStatus BeRightBack -> BeRightBack
    org.linphone.core.OnlineStatus Away -> Away
    org.linphone.core.OnlineStatus OnThePhone -> OnThePhone
    org.linphone.core.OnlineStatus OutToLunch -> OutToLunch
    org.linphone.core.OnlineStatus DoNotDisturb -> DoNotDisturb
    org.linphone.core.OnlineStatus StatusMoved -> StatusMoved
    org.linphone.core.OnlineStatus StatusAltService -> StatusAltService
    org.linphone.core.OnlineStatus Pending -> Pending
    int mValue -> mValue
    java.lang.String mStringValue -> mStringValue
    org.linphone.core.OnlineStatus fromInt(int) -> fromInt
    java.lang.String toString() -> toString
org.linphone.core.PayloadType -> org.linphone.core.PayloadType:
    java.lang.String getMime() -> getMime
    int getRate() -> getRate
    void setRecvFmtp(java.lang.String) -> setRecvFmtp
    java.lang.String getRecvFmtp() -> getRecvFmtp
    void setSendFmtp(java.lang.String) -> setSendFmtp
    java.lang.String getSendFmtp() -> getSendFmtp
org.linphone.core.PayloadTypeImpl -> org.linphone.core.PayloadTypeImpl:
    long nativePtr -> nativePtr
    java.lang.String toString(long) -> toString
    java.lang.String getMime(long) -> getMime
    int getRate(long) -> getRate
    int getRate() -> getRate
    java.lang.String getMime() -> getMime
    java.lang.String toString() -> toString
    void setRecvFmtp(long,java.lang.String) -> setRecvFmtp
    void setRecvFmtp(java.lang.String) -> setRecvFmtp
    java.lang.String getRecvFmtp(long) -> getRecvFmtp
    java.lang.String getRecvFmtp() -> getRecvFmtp
    void setSendFmtp(long,java.lang.String) -> setSendFmtp
    void setSendFmtp(java.lang.String) -> setSendFmtp
    java.lang.String getSendFmtp(long) -> getSendFmtp
    java.lang.String getSendFmtp() -> getSendFmtp
org.linphone.core.PresenceActivity -> org.linphone.core.PresenceActivity:
    java.lang.String toString() -> toString
    org.linphone.core.PresenceActivityType getType() -> getType
    int setType(org.linphone.core.PresenceActivityType) -> setType
    java.lang.String getDescription() -> getDescription
    int setDescription(java.lang.String) -> setDescription
    long getNativePtr() -> getNativePtr
org.linphone.core.PresenceActivityImpl -> org.linphone.core.PresenceActivityImpl:
    long mNativePtr -> mNativePtr
    long newPresenceActivityImpl(int,java.lang.String) -> newPresenceActivityImpl
    void unref(long) -> unref
    void finalize() -> finalize
    java.lang.String toString(long) -> toString
    java.lang.String toString() -> toString
    int getType(long) -> getType
    org.linphone.core.PresenceActivityType getType() -> getType
    int setType(long,int) -> setType
    int setType(org.linphone.core.PresenceActivityType) -> setType
    java.lang.String getDescription(long) -> getDescription
    java.lang.String getDescription() -> getDescription
    int setDescription(long,java.lang.String) -> setDescription
    int setDescription(java.lang.String) -> setDescription
    long getNativePtr() -> getNativePtr
org.linphone.core.PresenceActivityType -> org.linphone.core.PresenceActivityType:
    org.linphone.core.PresenceActivityType Offline -> Offline
    org.linphone.core.PresenceActivityType Online -> Online
    org.linphone.core.PresenceActivityType Appointment -> Appointment
    org.linphone.core.PresenceActivityType Away -> Away
    org.linphone.core.PresenceActivityType Breakfast -> Breakfast
    org.linphone.core.PresenceActivityType Busy -> Busy
    org.linphone.core.PresenceActivityType Dinner -> Dinner
    org.linphone.core.PresenceActivityType Holiday -> Holiday
    org.linphone.core.PresenceActivityType InTransit -> InTransit
    org.linphone.core.PresenceActivityType LookingForWork -> LookingForWork
    org.linphone.core.PresenceActivityType Lunch -> Lunch
    org.linphone.core.PresenceActivityType Meal -> Meal
    org.linphone.core.PresenceActivityType Meeting -> Meeting
    org.linphone.core.PresenceActivityType OnThePhone -> OnThePhone
    org.linphone.core.PresenceActivityType Other -> Other
    org.linphone.core.PresenceActivityType Performance -> Performance
    org.linphone.core.PresenceActivityType PermanentAbsence -> PermanentAbsence
    org.linphone.core.PresenceActivityType Playing -> Playing
    org.linphone.core.PresenceActivityType Presentation -> Presentation
    org.linphone.core.PresenceActivityType Shopping -> Shopping
    org.linphone.core.PresenceActivityType Sleeping -> Sleeping
    org.linphone.core.PresenceActivityType Spectator -> Spectator
    org.linphone.core.PresenceActivityType Steering -> Steering
    org.linphone.core.PresenceActivityType Travel -> Travel
    org.linphone.core.PresenceActivityType TV -> TV
    org.linphone.core.PresenceActivityType Unknown -> Unknown
    org.linphone.core.PresenceActivityType Vacation -> Vacation
    org.linphone.core.PresenceActivityType Working -> Working
    org.linphone.core.PresenceActivityType Worship -> Worship
    org.linphone.core.PresenceActivityType Invalid -> Invalid
    int mValue -> mValue
    org.linphone.core.PresenceActivityType[] ENUM$VALUES -> ENUM$VALUES
    int toInt() -> toInt
    org.linphone.core.PresenceActivityType fromInt(int) -> fromInt
    org.linphone.core.PresenceActivityType[] values() -> values
    org.linphone.core.PresenceActivityType valueOf(java.lang.String) -> valueOf
org.linphone.core.PresenceBasicStatus -> org.linphone.core.PresenceBasicStatus:
    org.linphone.core.PresenceBasicStatus Open -> Open
    org.linphone.core.PresenceBasicStatus Closed -> Closed
    org.linphone.core.PresenceBasicStatus Invalid -> Invalid
    int mValue -> mValue
    org.linphone.core.PresenceBasicStatus[] ENUM$VALUES -> ENUM$VALUES
    int toInt() -> toInt
    org.linphone.core.PresenceBasicStatus fromInt(int) -> fromInt
    org.linphone.core.PresenceBasicStatus[] values() -> values
    org.linphone.core.PresenceBasicStatus valueOf(java.lang.String) -> valueOf
org.linphone.core.PresenceModel -> org.linphone.core.PresenceModel:
    org.linphone.core.PresenceBasicStatus getBasicStatus() -> getBasicStatus
    int setBasicStatus(org.linphone.core.PresenceBasicStatus) -> setBasicStatus
    long getTimestamp() -> getTimestamp
    java.lang.String getContact() -> getContact
    void setContact(java.lang.String) -> setContact
    org.linphone.core.PresenceActivity getActivity() -> getActivity
    int setActivity(org.linphone.core.PresenceActivityType,java.lang.String) -> setActivity
    long getNbActivities() -> getNbActivities
    org.linphone.core.PresenceActivity getNthActivity(long) -> getNthActivity
    int addActivity(org.linphone.core.PresenceActivity) -> addActivity
    int clearActivities() -> clearActivities
    org.linphone.core.PresenceNote getNote(java.lang.String) -> getNote
    int addNote(java.lang.String,java.lang.String) -> addNote
    int clearNotes() -> clearNotes
    long getNbServices() -> getNbServices
    org.linphone.core.PresenceService getNthService(long) -> getNthService
    int addService(org.linphone.core.PresenceService) -> addService
    int clearServices() -> clearServices
    long getNbPersons() -> getNbPersons
    org.linphone.core.PresencePerson getNthPerson(long) -> getNthPerson
    int addPerson(org.linphone.core.PresencePerson) -> addPerson
    int clearPersons() -> clearPersons
org.linphone.core.PresenceModelImpl -> org.linphone.core.PresenceModelImpl:
    long mNativePtr -> mNativePtr
    long newPresenceModelImpl() -> newPresenceModelImpl
    long newPresenceModelImpl(int,java.lang.String) -> newPresenceModelImpl
    long newPresenceModelImpl(int,java.lang.String,java.lang.String,java.lang.String) -> newPresenceModelImpl
    void unref(long) -> unref
    void finalize() -> finalize
    int getBasicStatus(long) -> getBasicStatus
    org.linphone.core.PresenceBasicStatus getBasicStatus() -> getBasicStatus
    int setBasicStatus(long,int) -> setBasicStatus
    int setBasicStatus(org.linphone.core.PresenceBasicStatus) -> setBasicStatus
    long getTimestamp(long) -> getTimestamp
    long getTimestamp() -> getTimestamp
    java.lang.String getContact(long) -> getContact
    java.lang.String getContact() -> getContact
    void setContact(long,java.lang.String) -> setContact
    void setContact(java.lang.String) -> setContact
    java.lang.Object getActivity(long) -> getActivity
    org.linphone.core.PresenceActivity getActivity() -> getActivity
    int setActivity(long,int,java.lang.String) -> setActivity
    int setActivity(org.linphone.core.PresenceActivityType,java.lang.String) -> setActivity
    long getNbActivities(long) -> getNbActivities
    long getNbActivities() -> getNbActivities
    java.lang.Object getNthActivity(long,long) -> getNthActivity
    org.linphone.core.PresenceActivity getNthActivity(long) -> getNthActivity
    int addActivity(long,long) -> addActivity
    int addActivity(org.linphone.core.PresenceActivity) -> addActivity
    int clearActivities(long) -> clearActivities
    int clearActivities() -> clearActivities
    java.lang.Object getNote(long,java.lang.String) -> getNote
    org.linphone.core.PresenceNote getNote(java.lang.String) -> getNote
    int addNote(long,java.lang.String,java.lang.String) -> addNote
    int addNote(java.lang.String,java.lang.String) -> addNote
    int clearNotes(long) -> clearNotes
    int clearNotes() -> clearNotes
    long getNbServices(long) -> getNbServices
    long getNbServices() -> getNbServices
    java.lang.Object getNthService(long,long) -> getNthService
    org.linphone.core.PresenceService getNthService(long) -> getNthService
    int addService(long,long) -> addService
    int addService(org.linphone.core.PresenceService) -> addService
    int clearServices(long) -> clearServices
    int clearServices() -> clearServices
    long getNbPersons(long) -> getNbPersons
    long getNbPersons() -> getNbPersons
    java.lang.Object getNthPerson(long,long) -> getNthPerson
    org.linphone.core.PresencePerson getNthPerson(long) -> getNthPerson
    int addPerson(long,long) -> addPerson
    int addPerson(org.linphone.core.PresencePerson) -> addPerson
    int clearPersons(long) -> clearPersons
    int clearPersons() -> clearPersons
    long getNativePtr() -> getNativePtr
org.linphone.core.PresenceNote -> org.linphone.core.PresenceNote:
    java.lang.String getContent() -> getContent
    int setContent(java.lang.String) -> setContent
    java.lang.String getLang() -> getLang
    int setLang(java.lang.String) -> setLang
    long getNativePtr() -> getNativePtr
org.linphone.core.PresenceNoteImpl -> org.linphone.core.PresenceNoteImpl:
    long mNativePtr -> mNativePtr
    long newPresenceNoteImpl(java.lang.String,java.lang.String) -> newPresenceNoteImpl
    void unref(long) -> unref
    void finalize() -> finalize
    java.lang.String getContent(long) -> getContent
    java.lang.String getContent() -> getContent
    int setContent(long,java.lang.String) -> setContent
    int setContent(java.lang.String) -> setContent
    java.lang.String getLang(long) -> getLang
    java.lang.String getLang() -> getLang
    int setLang(long,java.lang.String) -> setLang
    int setLang(java.lang.String) -> setLang
    long getNativePtr() -> getNativePtr
org.linphone.core.PresencePerson -> org.linphone.core.PresencePerson:
    java.lang.String getId() -> getId
    int setId(java.lang.String) -> setId
    long getNbActivities() -> getNbActivities
    org.linphone.core.PresenceActivity getNthActivity(long) -> getNthActivity
    int addActivity(org.linphone.core.PresenceActivity) -> addActivity
    int clearActivities() -> clearActivities
    long getNbNotes() -> getNbNotes
    org.linphone.core.PresenceNote getNthNote(long) -> getNthNote
    int addNote(org.linphone.core.PresenceNote) -> addNote
    int clearNotes() -> clearNotes
    long getNbActivitiesNotes() -> getNbActivitiesNotes
    org.linphone.core.PresenceNote getNthActivitiesNote(long) -> getNthActivitiesNote
    int addActivitiesNote(org.linphone.core.PresenceNote) -> addActivitiesNote
    int clearActivitesNotes() -> clearActivitesNotes
    long getNativePtr() -> getNativePtr
org.linphone.core.PresencePersonImpl -> org.linphone.core.PresencePersonImpl:
    long mNativePtr -> mNativePtr
    long newPresencePersonImpl(java.lang.String) -> newPresencePersonImpl
    void unref(long) -> unref
    void finalize() -> finalize
    java.lang.String getId(long) -> getId
    java.lang.String getId() -> getId
    int setId(long,java.lang.String) -> setId
    int setId(java.lang.String) -> setId
    long getNbActivities(long) -> getNbActivities
    long getNbActivities() -> getNbActivities
    java.lang.Object getNthActivity(long,long) -> getNthActivity
    org.linphone.core.PresenceActivity getNthActivity(long) -> getNthActivity
    int addActivity(long,long) -> addActivity
    int addActivity(org.linphone.core.PresenceActivity) -> addActivity
    int clearActivities(long) -> clearActivities
    int clearActivities() -> clearActivities
    long getNbNotes(long) -> getNbNotes
    long getNbNotes() -> getNbNotes
    java.lang.Object getNthNote(long,long) -> getNthNote
    org.linphone.core.PresenceNote getNthNote(long) -> getNthNote
    int addNote(long,long) -> addNote
    int addNote(org.linphone.core.PresenceNote) -> addNote
    int clearNotes(long) -> clearNotes
    int clearNotes() -> clearNotes
    long getNbActivitiesNotes(long) -> getNbActivitiesNotes
    long getNbActivitiesNotes() -> getNbActivitiesNotes
    java.lang.Object getNthActivitiesNote(long,long) -> getNthActivitiesNote
    org.linphone.core.PresenceNote getNthActivitiesNote(long) -> getNthActivitiesNote
    int addActivitiesNote(long,long) -> addActivitiesNote
    int addActivitiesNote(org.linphone.core.PresenceNote) -> addActivitiesNote
    int clearActivitesNotes(long) -> clearActivitesNotes
    int clearActivitesNotes() -> clearActivitesNotes
    long getNativePtr() -> getNativePtr
org.linphone.core.PresenceService -> org.linphone.core.PresenceService:
    java.lang.String getId() -> getId
    int setId(java.lang.String) -> setId
    org.linphone.core.PresenceBasicStatus getBasicStatus() -> getBasicStatus
    int setBasicStatus(org.linphone.core.PresenceBasicStatus) -> setBasicStatus
    java.lang.String getContact() -> getContact
    int setContact(java.lang.String) -> setContact
    long getNbNotes() -> getNbNotes
    org.linphone.core.PresenceNote getNthNote(long) -> getNthNote
    int addNote(org.linphone.core.PresenceNote) -> addNote
    int clearNotes() -> clearNotes
    long getNativePtr() -> getNativePtr
org.linphone.core.PresenceServiceImpl -> org.linphone.core.PresenceServiceImpl:
    long mNativePtr -> mNativePtr
    long newPresenceServiceImpl(java.lang.String,int,java.lang.String) -> newPresenceServiceImpl
    void unref(long) -> unref
    void finalize() -> finalize
    java.lang.String getId(long) -> getId
    java.lang.String getId() -> getId
    int setId(long,java.lang.String) -> setId
    int setId(java.lang.String) -> setId
    int getBasicStatus(long) -> getBasicStatus
    org.linphone.core.PresenceBasicStatus getBasicStatus() -> getBasicStatus
    int setBasicStatus(long,int) -> setBasicStatus
    int setBasicStatus(org.linphone.core.PresenceBasicStatus) -> setBasicStatus
    java.lang.String getContact(long) -> getContact
    java.lang.String getContact() -> getContact
    int setContact(long,java.lang.String) -> setContact
    int setContact(java.lang.String) -> setContact
    long getNbNotes(long) -> getNbNotes
    long getNbNotes() -> getNbNotes
    java.lang.Object getNthNote(long,long) -> getNthNote
    org.linphone.core.PresenceNote getNthNote(long) -> getNthNote
    int addNote(long,long) -> addNote
    int addNote(org.linphone.core.PresenceNote) -> addNote
    int clearNotes(long) -> clearNotes
    int clearNotes() -> clearNotes
    long getNativePtr() -> getNativePtr
org.linphone.core.Privacy -> org.linphone.core.Privacy:
    int NONE -> NONE
    int USER -> USER
    int HEADER -> HEADER
    int SESSION -> SESSION
    int ID -> ID
    int CRITICAL -> CRITICAL
    int DEFAULT -> DEFAULT
org.linphone.core.PublishState -> org.linphone.core.PublishState:
    org.linphone.core.PublishState None -> None
    org.linphone.core.PublishState Progress -> Progress
    org.linphone.core.PublishState Ok -> Ok
    org.linphone.core.PublishState Error -> Error
    org.linphone.core.PublishState Expiring -> Expiring
    org.linphone.core.PublishState Cleared -> Cleared
    int mValue -> mValue
    org.linphone.core.PublishState[] ENUM$VALUES -> ENUM$VALUES
    org.linphone.core.PublishState fromInt(int) -> fromInt
    org.linphone.core.PublishState[] values() -> values
    org.linphone.core.PublishState valueOf(java.lang.String) -> valueOf
org.linphone.core.Reason -> org.linphone.core.Reason:
    java.util.Vector values -> values
    org.linphone.core.Reason None -> None
    org.linphone.core.Reason NoResponse -> NoResponse
    org.linphone.core.Reason BadCredentials -> BadCredentials
    org.linphone.core.Reason Declined -> Declined
    org.linphone.core.Reason NotFound -> NotFound
    org.linphone.core.Reason NotAnswered -> NotAnswered
    org.linphone.core.Reason Busy -> Busy
    org.linphone.core.Reason Media -> Media
    org.linphone.core.Reason IOError -> IOError
    org.linphone.core.Reason DoNotDisturb -> DoNotDisturb
    org.linphone.core.Reason Unauthorized -> Unauthorized
    org.linphone.core.Reason NotAcceptable -> NotAcceptable
    org.linphone.core.Reason NoMatch -> NoMatch
    org.linphone.core.Reason MovedPermanently -> MovedPermanently
    org.linphone.core.Reason Gone -> Gone
    org.linphone.core.Reason TemporarilyUnavailable -> TemporarilyUnavailable
    org.linphone.core.Reason AddressIncomplete -> AddressIncomplete
    org.linphone.core.Reason NotImplemented -> NotImplemented
    org.linphone.core.Reason BadGateway -> BadGateway
    org.linphone.core.Reason ServerTimeout -> ServerTimeout
    org.linphone.core.Reason Unknown -> Unknown
    int mValue -> mValue
    java.lang.String mStringValue -> mStringValue
    org.linphone.core.Reason fromInt(int) -> fromInt
    java.lang.String toString() -> toString
org.linphone.core.SubscriptionDir -> org.linphone.core.SubscriptionDir:
    org.linphone.core.SubscriptionDir Incoming -> Incoming
    org.linphone.core.SubscriptionDir Outgoing -> Outgoing
    org.linphone.core.SubscriptionDir Invalid -> Invalid
    int mValue -> mValue
    org.linphone.core.SubscriptionDir[] ENUM$VALUES -> ENUM$VALUES
    org.linphone.core.SubscriptionDir fromInt(int) -> fromInt
    org.linphone.core.SubscriptionDir[] values() -> values
    org.linphone.core.SubscriptionDir valueOf(java.lang.String) -> valueOf
org.linphone.core.SubscriptionState -> org.linphone.core.SubscriptionState:
    org.linphone.core.SubscriptionState None -> None
    org.linphone.core.SubscriptionState OutoingProgress -> OutoingProgress
    org.linphone.core.SubscriptionState IncomingReceived -> IncomingReceived
    org.linphone.core.SubscriptionState Pending -> Pending
    org.linphone.core.SubscriptionState Active -> Active
    org.linphone.core.SubscriptionState Terminated -> Terminated
    org.linphone.core.SubscriptionState Error -> Error
    org.linphone.core.SubscriptionState Expiring -> Expiring
    int mValue -> mValue
    org.linphone.core.SubscriptionState[] ENUM$VALUES -> ENUM$VALUES
    org.linphone.core.SubscriptionState fromInt(int) -> fromInt
    org.linphone.core.SubscriptionState[] values() -> values
    org.linphone.core.SubscriptionState valueOf(java.lang.String) -> valueOf
org.linphone.core.ToneID -> org.linphone.core.ToneID:
    org.linphone.core.ToneID Undefined -> Undefined
    org.linphone.core.ToneID Busy -> Busy
    org.linphone.core.ToneID CallWaiting -> CallWaiting
    org.linphone.core.ToneID CallOnHold -> CallOnHold
    org.linphone.core.ToneID CallLost -> CallLost
    int mValue -> mValue
    org.linphone.core.ToneID[] ENUM$VALUES -> ENUM$VALUES
    org.linphone.core.ToneID fromInt(int) -> fromInt
    org.linphone.core.ToneID[] values() -> values
    org.linphone.core.ToneID valueOf(java.lang.String) -> valueOf
org.linphone.core.VideoSize -> org.linphone.core.VideoSize:
    int QCIF -> QCIF
    int CIF -> CIF
    int HVGA -> HVGA
    int QVGA -> QVGA
    int width -> width
    int height -> height
    org.linphone.core.VideoSize createStandard(int,boolean) -> createStandard
    boolean isValid() -> isValid
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toDisplayableString() -> toDisplayableString
    java.lang.String toString() -> toString
    boolean isPortrait() -> isPortrait
    org.linphone.core.VideoSize createInverted() -> createInverted
org.linphone.core.tutorials.TutorialBuddyStatus -> org.linphone.core.tutorials.TutorialBuddyStatus:
    boolean running -> running
    org.linphone.core.tutorials.TutorialNotifier TutorialNotifier -> TutorialNotifier
    void newSubscriptionRequest(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneFriend,java.lang.String) -> newSubscriptionRequest
    void notifyPresenceReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneFriend) -> notifyPresenceReceived
    void registrationState(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneProxyConfig,org.linphone.core.LinphoneCore$RegistrationState,java.lang.String) -> registrationState
    void show(org.linphone.core.LinphoneCore) -> show
    void byeReceived(org.linphone.core.LinphoneCore,java.lang.String) -> byeReceived
    void displayStatus(org.linphone.core.LinphoneCore,java.lang.String) -> displayStatus
    void displayMessage(org.linphone.core.LinphoneCore,java.lang.String) -> displayMessage
    void displayWarning(org.linphone.core.LinphoneCore,java.lang.String) -> displayWarning
    void globalState(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCore$GlobalState,java.lang.String) -> globalState
    void textReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneChatRoom,org.linphone.core.LinphoneAddress,java.lang.String) -> textReceived
    void callState(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCall$State,java.lang.String) -> callState
    void callStatsUpdated(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCallStats) -> callStatsUpdated
    void ecCalibrationStatus(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCore$EcCalibratorStatus,int,java.lang.Object) -> ecCalibrationStatus
    void callEncryptionChanged(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,boolean,java.lang.String) -> callEncryptionChanged
    void notifyReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,org.linphone.core.LinphoneAddress,byte[]) -> notifyReceived
    void dtmfReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,int) -> dtmfReceived
    void main(java.lang.String[]) -> main
    void launchTutorial(java.lang.String,java.lang.String,java.lang.String) -> launchTutorial
    void stopMainLoop() -> stopMainLoop
    void write(java.lang.String) -> write
    void messageReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneChatRoom,org.linphone.core.LinphoneChatMessage) -> messageReceived
    void transferState(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCall$State) -> transferState
    void infoReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,org.linphone.core.LinphoneInfoMessage) -> infoReceived
    void subscriptionStateChanged(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneEvent,org.linphone.core.SubscriptionState) -> subscriptionStateChanged
    void notifyReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneEvent,java.lang.String,org.linphone.core.LinphoneContent) -> notifyReceived
    void publishStateChanged(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneEvent,org.linphone.core.PublishState) -> publishStateChanged
    void isComposingReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneChatRoom) -> isComposingReceived
    void configuringStatus(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCore$RemoteProvisioningState,java.lang.String) -> configuringStatus
    void authInfoRequested(org.linphone.core.LinphoneCore,java.lang.String,java.lang.String,java.lang.String) -> authInfoRequested
org.linphone.core.tutorials.TutorialChatRoom -> org.linphone.core.tutorials.TutorialChatRoom:
    boolean running -> running
    org.linphone.core.tutorials.TutorialNotifier TutorialNotifier -> TutorialNotifier
    void show(org.linphone.core.LinphoneCore) -> show
    void byeReceived(org.linphone.core.LinphoneCore,java.lang.String) -> byeReceived
    void authInfoRequested(org.linphone.core.LinphoneCore,java.lang.String,java.lang.String,java.lang.String) -> authInfoRequested
    void displayStatus(org.linphone.core.LinphoneCore,java.lang.String) -> displayStatus
    void displayMessage(org.linphone.core.LinphoneCore,java.lang.String) -> displayMessage
    void displayWarning(org.linphone.core.LinphoneCore,java.lang.String) -> displayWarning
    void globalState(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCore$GlobalState,java.lang.String) -> globalState
    void registrationState(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneProxyConfig,org.linphone.core.LinphoneCore$RegistrationState,java.lang.String) -> registrationState
    void newSubscriptionRequest(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneFriend,java.lang.String) -> newSubscriptionRequest
    void notifyPresenceReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneFriend) -> notifyPresenceReceived
    void callState(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCall$State,java.lang.String) -> callState
    void callStatsUpdated(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCallStats) -> callStatsUpdated
    void ecCalibrationStatus(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCore$EcCalibratorStatus,int,java.lang.Object) -> ecCalibrationStatus
    void callEncryptionChanged(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,boolean,java.lang.String) -> callEncryptionChanged
    void notifyReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,org.linphone.core.LinphoneAddress,byte[]) -> notifyReceived
    void dtmfReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,int) -> dtmfReceived
    void textReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneChatRoom,org.linphone.core.LinphoneAddress,java.lang.String) -> textReceived
    void main(java.lang.String[]) -> main
    void launchTutorial(java.lang.String) -> launchTutorial
    void stopMainLoop() -> stopMainLoop
    void write(java.lang.String) -> write
    void messageReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneChatRoom,org.linphone.core.LinphoneChatMessage) -> messageReceived
    void onLinphoneChatMessageStateChanged(org.linphone.core.LinphoneChatMessage,org.linphone.core.LinphoneChatMessage$State) -> onLinphoneChatMessageStateChanged
    void transferState(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCall$State) -> transferState
    void infoReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,org.linphone.core.LinphoneInfoMessage) -> infoReceived
    void subscriptionStateChanged(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneEvent,org.linphone.core.SubscriptionState) -> subscriptionStateChanged
    void notifyReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneEvent,java.lang.String,org.linphone.core.LinphoneContent) -> notifyReceived
    void publishStateChanged(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneEvent,org.linphone.core.PublishState) -> publishStateChanged
    void isComposingReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneChatRoom) -> isComposingReceived
    void configuringStatus(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCore$RemoteProvisioningState,java.lang.String) -> configuringStatus
org.linphone.core.tutorials.TutorialHelloWorld -> org.linphone.core.tutorials.TutorialHelloWorld:
    boolean running -> running
    org.linphone.core.tutorials.TutorialNotifier TutorialNotifier -> TutorialNotifier
    void show(org.linphone.core.LinphoneCore) -> show
    void byeReceived(org.linphone.core.LinphoneCore,java.lang.String) -> byeReceived
    void authInfoRequested(org.linphone.core.LinphoneCore,java.lang.String,java.lang.String,java.lang.String) -> authInfoRequested
    void displayStatus(org.linphone.core.LinphoneCore,java.lang.String) -> displayStatus
    void displayMessage(org.linphone.core.LinphoneCore,java.lang.String) -> displayMessage
    void displayWarning(org.linphone.core.LinphoneCore,java.lang.String) -> displayWarning
    void globalState(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCore$GlobalState,java.lang.String) -> globalState
    void registrationState(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneProxyConfig,org.linphone.core.LinphoneCore$RegistrationState,java.lang.String) -> registrationState
    void newSubscriptionRequest(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneFriend,java.lang.String) -> newSubscriptionRequest
    void notifyPresenceReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneFriend) -> notifyPresenceReceived
    void textReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneChatRoom,org.linphone.core.LinphoneAddress,java.lang.String) -> textReceived
    void callStatsUpdated(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCallStats) -> callStatsUpdated
    void ecCalibrationStatus(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCore$EcCalibratorStatus,int,java.lang.Object) -> ecCalibrationStatus
    void callEncryptionChanged(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,boolean,java.lang.String) -> callEncryptionChanged
    void notifyReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,org.linphone.core.LinphoneAddress,byte[]) -> notifyReceived
    void dtmfReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,int) -> dtmfReceived
    void callState(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCall$State,java.lang.String) -> callState
    void main(java.lang.String[]) -> main
    void launchTutorial(java.lang.String) -> launchTutorial
    void stopMainLoop() -> stopMainLoop
    void write(java.lang.String) -> write
    void messageReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneChatRoom,org.linphone.core.LinphoneChatMessage) -> messageReceived
    void transferState(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCall$State) -> transferState
    void infoReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,org.linphone.core.LinphoneInfoMessage) -> infoReceived
    void subscriptionStateChanged(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneEvent,org.linphone.core.SubscriptionState) -> subscriptionStateChanged
    void notifyReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneEvent,java.lang.String,org.linphone.core.LinphoneContent) -> notifyReceived
    void publishStateChanged(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneEvent,org.linphone.core.PublishState) -> publishStateChanged
    void isComposingReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneChatRoom) -> isComposingReceived
    void configuringStatus(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCore$RemoteProvisioningState,java.lang.String) -> configuringStatus
org.linphone.core.tutorials.TutorialNotifier -> org.linphone.core.tutorials.TutorialNotifier:
    void notify(java.lang.String) -> notify
org.linphone.core.tutorials.TutorialRegistration -> org.linphone.core.tutorials.TutorialRegistration:
    boolean running -> running
    org.linphone.core.tutorials.TutorialNotifier TutorialNotifier -> TutorialNotifier
    void registrationState(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneProxyConfig,org.linphone.core.LinphoneCore$RegistrationState,java.lang.String) -> registrationState
    void show(org.linphone.core.LinphoneCore) -> show
    void byeReceived(org.linphone.core.LinphoneCore,java.lang.String) -> byeReceived
    void authInfoRequested(org.linphone.core.LinphoneCore,java.lang.String,java.lang.String,java.lang.String) -> authInfoRequested
    void displayStatus(org.linphone.core.LinphoneCore,java.lang.String) -> displayStatus
    void displayMessage(org.linphone.core.LinphoneCore,java.lang.String) -> displayMessage
    void displayWarning(org.linphone.core.LinphoneCore,java.lang.String) -> displayWarning
    void globalState(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCore$GlobalState,java.lang.String) -> globalState
    void newSubscriptionRequest(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneFriend,java.lang.String) -> newSubscriptionRequest
    void notifyPresenceReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneFriend) -> notifyPresenceReceived
    void textReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneChatRoom,org.linphone.core.LinphoneAddress,java.lang.String) -> textReceived
    void callState(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCall$State,java.lang.String) -> callState
    void callStatsUpdated(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCallStats) -> callStatsUpdated
    void ecCalibrationStatus(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCore$EcCalibratorStatus,int,java.lang.Object) -> ecCalibrationStatus
    void callEncryptionChanged(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,boolean,java.lang.String) -> callEncryptionChanged
    void notifyReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,org.linphone.core.LinphoneAddress,byte[]) -> notifyReceived
    void dtmfReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,int) -> dtmfReceived
    void main(java.lang.String[]) -> main
    void launchTutorial(java.lang.String,java.lang.String) -> launchTutorial
    void sleep(int) -> sleep
    void stopMainLoop() -> stopMainLoop
    void write(java.lang.String) -> write
    void messageReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneChatRoom,org.linphone.core.LinphoneChatMessage) -> messageReceived
    void transferState(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,org.linphone.core.LinphoneCall$State) -> transferState
    void infoReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCall,org.linphone.core.LinphoneInfoMessage) -> infoReceived
    void subscriptionStateChanged(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneEvent,org.linphone.core.SubscriptionState) -> subscriptionStateChanged
    void notifyReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneEvent,java.lang.String,org.linphone.core.LinphoneContent) -> notifyReceived
    void publishStateChanged(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneEvent,org.linphone.core.PublishState) -> publishStateChanged
    void isComposingReceived(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneChatRoom) -> isComposingReceived
    void configuringStatus(org.linphone.core.LinphoneCore,org.linphone.core.LinphoneCore$RemoteProvisioningState,java.lang.String) -> configuringStatus
org.linphone.core.video.VideoUtil -> org.linphone.core.video.VideoUtil:
    java.util.List createList(java.util.List) -> createList
org.linphone.mediastream.Log -> org.linphone.mediastream.Log:
    java.lang.String TAG -> TAG
    boolean useIsLoggable -> useIsLoggable
    boolean isLogEnabled -> isLogEnabled
    boolean isLoggable(int) -> isLoggable
    void i(java.lang.Object[]) -> i
    void i(java.lang.Throwable,java.lang.Object[]) -> i
    void d(java.lang.Object[]) -> d
    void d(java.lang.Throwable,java.lang.Object[]) -> d
    void w(java.lang.Object[]) -> w
    void w(java.lang.Throwable,java.lang.Object[]) -> w
    void e(java.lang.Object[]) -> e
    void e(java.lang.Throwable,java.lang.Object[]) -> e
    void f(java.lang.Object[]) -> f
    void f(java.lang.Throwable,java.lang.Object[]) -> f
    java.lang.String toString(java.lang.Object[]) -> toString
org.linphone.mediastream.MediastreamerAndroidContext -> org.linphone.mediastream.MediastreamerAndroidContext:
    int DEVICE_CHOICE -> DEVICE_CHOICE
    int DEVICE_HAS_BUILTIN_AEC -> DEVICE_HAS_BUILTIN_AEC
    int DEVICE_HAS_BUILTIN_AEC_CRAPPY -> DEVICE_HAS_BUILTIN_AEC_CRAPPY
    int DEVICE_USE_ANDROID_MIC -> DEVICE_USE_ANDROID_MIC
    int DEVICE_HAS_BUILTIN_OPENSLES_AEC -> DEVICE_HAS_BUILTIN_OPENSLES_AEC
    org.linphone.mediastream.MediastreamerAndroidContext instance -> instance
    void setDeviceFavoriteSampleRate(int) -> setDeviceFavoriteSampleRate
    void setDeviceFavoriteBufferSize(int) -> setDeviceFavoriteBufferSize
    void addSoundDeviceDescription(java.lang.String,java.lang.String,java.lang.String,int,int,int) -> addSoundDeviceDescription
    org.linphone.mediastream.MediastreamerAndroidContext getInstance() -> getInstance
    void addSoundDeviceDesc(java.lang.String,java.lang.String,java.lang.String,int,int,int) -> addSoundDeviceDesc
    void setContext(java.lang.Object) -> setContext
    int parseInt(java.lang.String,int) -> parseInt
org.linphone.mediastream.Version -> org.linphone.mediastream.Version:
    int API03_CUPCAKE_15 -> API03_CUPCAKE_15
    int API04_DONUT_16 -> API04_DONUT_16
    int API05_ECLAIR_20 -> API05_ECLAIR_20
    int API06_ECLAIR_201 -> API06_ECLAIR_201
    int API07_ECLAIR_21 -> API07_ECLAIR_21
    int API08_FROYO_22 -> API08_FROYO_22
    int API09_GINGERBREAD_23 -> API09_GINGERBREAD_23
    int API10_GINGERBREAD_MR1_233 -> API10_GINGERBREAD_MR1_233
    int API11_HONEYCOMB_30 -> API11_HONEYCOMB_30
    int API12_HONEYCOMB_MR1_31X -> API12_HONEYCOMB_MR1_31X
    int API13_HONEYCOMB_MR2_32 -> API13_HONEYCOMB_MR2_32
    int API14_ICE_CREAM_SANDWICH_40 -> API14_ICE_CREAM_SANDWICH_40
    int API15_ICE_CREAM_SANDWICH_403 -> API15_ICE_CREAM_SANDWICH_403
    int API16_JELLY_BEAN_41 -> API16_JELLY_BEAN_41
    int API17_JELLY_BEAN_42 -> API17_JELLY_BEAN_42
    int API18_JELLY_BEAN_43 -> API18_JELLY_BEAN_43
    int API19_KITKAT_44 -> API19_KITKAT_44
    java.lang.Boolean hasNeon -> hasNeon
    int buildVersion -> buildVersion
    java.lang.Boolean sCacheHasZrtp -> sCacheHasZrtp
    boolean nativeHasZrtp() -> nativeHasZrtp
    boolean nativeHasNeon() -> nativeHasNeon
    boolean isXLargeScreen(android.content.Context) -> isXLargeScreen
    boolean sdkAboveOrEqual(int) -> sdkAboveOrEqual
    boolean sdkStrictlyBelow(int) -> sdkStrictlyBelow
    int sdk() -> sdk
    boolean isArmv7() -> isArmv7
    boolean isX86() -> isX86
    boolean hasNeon() -> hasNeon
    boolean hasFastCpu() -> hasFastCpu
    boolean hasFastCpuWithAsmOptim() -> hasFastCpuWithAsmOptim
    boolean isVideoCapable() -> isVideoCapable
    boolean isHDVideoCapable() -> isHDVideoCapable
    boolean hasZrtp() -> hasZrtp
    void dumpCapabilities() -> dumpCapabilities
org.linphone.mediastream.video.AndroidVideoWindowImpl -> org.linphone.mediastream.video.AndroidVideoWindowImpl:
    android.view.SurfaceView mVideoRenderingView -> mVideoRenderingView
    android.view.SurfaceView mVideoPreviewView -> mVideoPreviewView
    boolean useGLrendering -> useGLrendering
    android.graphics.Bitmap mBitmap -> mBitmap
    android.view.Surface mSurface -> mSurface
    org.linphone.mediastream.video.AndroidVideoWindowImpl$VideoWindowListener mListener -> mListener
    org.linphone.mediastream.video.AndroidVideoWindowImpl$Renderer renderer -> renderer
    void init() -> init
    void release() -> release
    void setListener(org.linphone.mediastream.video.AndroidVideoWindowImpl$VideoWindowListener) -> setListener
    android.view.Surface getSurface() -> getSurface
    android.graphics.Bitmap getBitmap() -> getBitmap
    void setOpenGLESDisplay(int) -> setOpenGLESDisplay
    void requestRender() -> requestRender
    void update() -> update
    int rotationToAngle(int) -> rotationToAngle
    boolean access$0(org.linphone.mediastream.video.AndroidVideoWindowImpl) -> access$0
    void access$1(org.linphone.mediastream.video.AndroidVideoWindowImpl,android.graphics.Bitmap) -> access$1
    void access$2(org.linphone.mediastream.video.AndroidVideoWindowImpl,android.view.Surface) -> access$2
    org.linphone.mediastream.video.AndroidVideoWindowImpl$VideoWindowListener access$3(org.linphone.mediastream.video.AndroidVideoWindowImpl) -> access$3
    android.view.SurfaceView access$4(org.linphone.mediastream.video.AndroidVideoWindowImpl) -> access$4
    android.view.SurfaceView access$5(org.linphone.mediastream.video.AndroidVideoWindowImpl) -> access$5
org.linphone.mediastream.video.AndroidVideoWindowImpl$1 -> org.linphone.mediastream.video.AndroidVideoWindowImpl$1:
    org.linphone.mediastream.video.AndroidVideoWindowImpl this$0 -> this$0
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
org.linphone.mediastream.video.AndroidVideoWindowImpl$2 -> org.linphone.mediastream.video.AndroidVideoWindowImpl$2:
    org.linphone.mediastream.video.AndroidVideoWindowImpl this$0 -> this$0
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
org.linphone.mediastream.video.AndroidVideoWindowImpl$Renderer -> org.linphone.mediastream.video.AndroidVideoWindowImpl$Renderer:
    int ptr -> ptr
    boolean initPending -> initPending
    int width -> width
    int height -> height
    void setOpenGLESDisplay(int) -> setOpenGLESDisplay
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
org.linphone.mediastream.video.AndroidVideoWindowImpl$VideoWindowListener -> org.linphone.mediastream.video.AndroidVideoWindowImpl$VideoWindowListener:
    void onVideoRenderingSurfaceReady(org.linphone.mediastream.video.AndroidVideoWindowImpl,android.view.SurfaceView) -> onVideoRenderingSurfaceReady
    void onVideoRenderingSurfaceDestroyed(org.linphone.mediastream.video.AndroidVideoWindowImpl) -> onVideoRenderingSurfaceDestroyed
    void onVideoPreviewSurfaceReady(org.linphone.mediastream.video.AndroidVideoWindowImpl,android.view.SurfaceView) -> onVideoPreviewSurfaceReady
    void onVideoPreviewSurfaceDestroyed(org.linphone.mediastream.video.AndroidVideoWindowImpl) -> onVideoPreviewSurfaceDestroyed
org.linphone.mediastream.video.capture.AndroidVideoApi5JniWrapper -> org.linphone.mediastream.video.capture.AndroidVideoApi5JniWrapper:
    boolean isRecording -> isRecording
    void putImage(long,byte[]) -> putImage
    int detectCameras(int[],int[],int[]) -> detectCameras
    int[] selectNearestResolutionAvailable(int,int,int) -> selectNearestResolutionAvailable
    void activateAutoFocus(java.lang.Object) -> activateAutoFocus
    java.lang.Object startRecording(int,int,int,int,int,long) -> startRecording
    void stopRecording(java.lang.Object) -> stopRecording
    void setPreviewDisplaySurface(java.lang.Object,java.lang.Object) -> setPreviewDisplaySurface
    int[] selectNearestResolutionAvailableForCamera(int,int,int) -> selectNearestResolutionAvailableForCamera
    void applyCameraParameters(android.hardware.Camera,int,int,int) -> applyCameraParameters
org.linphone.mediastream.video.capture.AndroidVideoApi5JniWrapper$1 -> org.linphone.mediastream.video.capture.AndroidVideoApi5JniWrapper$1:
    long val$nativePtr -> val$nativePtr
    void onPreviewFrame(byte[],android.hardware.Camera) -> onPreviewFrame
org.linphone.mediastream.video.capture.AndroidVideoApi8JniWrapper -> org.linphone.mediastream.video.capture.AndroidVideoApi8JniWrapper:
    int detectCameras(int[],int[],int[]) -> detectCameras
    int[] selectNearestResolutionAvailable(int,int,int) -> selectNearestResolutionAvailable
    java.lang.Object startRecording(int,int,int,int,int,long) -> startRecording
    void stopRecording(java.lang.Object) -> stopRecording
    void setPreviewDisplaySurface(java.lang.Object,java.lang.Object) -> setPreviewDisplaySurface
org.linphone.mediastream.video.capture.AndroidVideoApi8JniWrapper$1 -> org.linphone.mediastream.video.capture.AndroidVideoApi8JniWrapper$1:
    long val$nativePtr -> val$nativePtr
    void onPreviewFrame(byte[],android.hardware.Camera) -> onPreviewFrame
org.linphone.mediastream.video.capture.AndroidVideoApi9JniWrapper -> org.linphone.mediastream.video.capture.AndroidVideoApi9JniWrapper:
    int detectCameras(int[],int[],int[]) -> detectCameras
    int[] selectNearestResolutionAvailable(int,int,int) -> selectNearestResolutionAvailable
    java.lang.Object startRecording(int,int,int,int,int,long) -> startRecording
    void stopRecording(java.lang.Object) -> stopRecording
    void setPreviewDisplaySurface(java.lang.Object,java.lang.Object) -> setPreviewDisplaySurface
    void setCameraDisplayOrientation(int,int,android.hardware.Camera) -> setCameraDisplayOrientation
    int[] findClosestEnclosingFpsRange(int,java.util.List) -> findClosestEnclosingFpsRange
org.linphone.mediastream.video.capture.AndroidVideoApi9JniWrapper$1 -> org.linphone.mediastream.video.capture.AndroidVideoApi9JniWrapper$1:
    long val$nativePtr -> val$nativePtr
    void onPreviewFrame(byte[],android.hardware.Camera) -> onPreviewFrame
org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration -> org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration:
    org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration$AndroidCamera[] camerasCache -> camerasCache
    org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration$AndroidCamera[] retrieveCameras() -> retrieveCameras
    boolean hasSeveralCameras() -> hasSeveralCameras
    boolean hasFrontCamera() -> hasFrontCamera
    void initCamerasCache() -> initCamerasCache
    org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration$AndroidCamera[] probeCamerasSDK5() -> probeCamerasSDK5
    org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration$AndroidCamera[] probeCamerasSDK9() -> probeCamerasSDK9
org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration$AndroidCamera -> org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration$AndroidCamera:
    int id -> id
    boolean frontFacing -> frontFacing
    int orientation -> orientation
    java.util.List resolutions -> resolutions
org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfigurationReader5 -> org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfigurationReader5:
    org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration$AndroidCamera[] probeCameras() -> probeCameras
org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfigurationReader9 -> org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfigurationReader9:
    org.linphone.mediastream.video.capture.hwconf.AndroidCameraConfiguration$AndroidCamera[] probeCameras() -> probeCameras
org.linphone.mediastream.video.capture.hwconf.Hacks -> org.linphone.mediastream.video.capture.hwconf.Hacks:
    org.linphone.mediastream.video.capture.hwconf.Hacks$BuiltInEchoCancellerModel[] mBuiltInEchoCancellerModels -> mBuiltInEchoCancellerModels
    boolean isGalaxySOrTabWithFrontCamera() -> isGalaxySOrTabWithFrontCamera
    boolean isGalaxySOrTabWithoutFrontCamera() -> isGalaxySOrTabWithoutFrontCamera
    boolean isGalaxySOrTab() -> isGalaxySOrTab
    boolean isGalaxyTab() -> isGalaxyTab
    boolean isGalaxyS() -> isGalaxyS
    boolean hasTwoCamerasRear0Front1() -> hasTwoCamerasRear0Front1
    boolean isADR6400() -> isADR6400
    boolean isSPHD700() -> isSPHD700
    boolean isSGHI896() -> isSGHI896
    boolean isGT9000() -> isGT9000
    boolean isSC02B() -> isSC02B
    boolean isGTP1000() -> isGTP1000
    boolean isLGP970() -> isLGP970
    void sleep(int) -> sleep
    boolean needSoftvolume() -> needSoftvolume
    boolean needGalaxySAudioHack() -> needGalaxySAudioHack
    boolean needPausingCallForSpeakers() -> needPausingCallForSpeakers
    boolean hasCamera() -> hasCamera
    boolean hasBuiltInEchoCanceller() -> hasBuiltInEchoCanceller
org.linphone.mediastream.video.capture.hwconf.Hacks$BuiltInEchoCancellerModel -> org.linphone.mediastream.video.capture.hwconf.Hacks$BuiltInEchoCancellerModel:
    java.lang.String manufacturer -> manufacturer
    java.lang.String model -> model
org.linphone.mediastream.video.display.GL2JNIView -> org.linphone.mediastream.video.display.GL2JNIView:
    boolean DEBUG -> DEBUG
    void init(boolean,int,int) -> init
    void checkEglError(java.lang.String,javax.microedition.khronos.egl.EGL10) -> checkEglError
    void access$0(java.lang.String,javax.microedition.khronos.egl.EGL10) -> access$0
org.linphone.mediastream.video.display.GL2JNIView$ConfigChooser -> org.linphone.mediastream.video.display.GL2JNIView$ConfigChooser:
    int EGL_OPENGL_ES2_BIT -> EGL_OPENGL_ES2_BIT
    int[] s_configAttribs2 -> s_configAttribs2
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    int[] mValue -> mValue
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
    void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> printConfigs
    void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> printConfig
org.linphone.mediastream.video.display.GL2JNIView$ContextFactory -> org.linphone.mediastream.video.display.GL2JNIView$ContextFactory:
    int EGL_CONTEXT_CLIENT_VERSION -> EGL_CONTEXT_CLIENT_VERSION
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
org.linphone.mediastream.video.display.OpenGLESDisplay -> org.linphone.mediastream.video.display.OpenGLESDisplay:
    void init(int,int,int) -> init
    void render(int) -> render
org.linphone.tools.Lpc2Xml -> org.linphone.tools.Lpc2Xml:
    boolean mAvailable -> mAvailable
    long internalPtr -> internalPtr
    int[] $SWITCH_TABLE$org$linphone$tools$Lpc2Xml$LogLevel -> $SWITCH_TABLE$org$linphone$tools$Lpc2Xml$LogLevel
    void init() -> init
    void destroy() -> destroy
    void finalize() -> finalize
    int setLpc(org.linphone.core.LpConfig) -> setLpc
    int convertFile(java.lang.String) -> convertFile
    int convertString(java.lang.StringBuffer) -> convertString
    void printLog(int,java.lang.String) -> printLog
    boolean isAvailable() -> isAvailable
    int[] $SWITCH_TABLE$org$linphone$tools$Lpc2Xml$LogLevel() -> $SWITCH_TABLE$org$linphone$tools$Lpc2Xml$LogLevel
org.linphone.tools.Lpc2Xml$LogLevel -> org.linphone.tools.Lpc2Xml$LogLevel:
    org.linphone.tools.Lpc2Xml$LogLevel DEBUG -> DEBUG
    org.linphone.tools.Lpc2Xml$LogLevel MESSAGE -> MESSAGE
    org.linphone.tools.Lpc2Xml$LogLevel WARNING -> WARNING
    org.linphone.tools.Lpc2Xml$LogLevel ERROR -> ERROR
    org.linphone.tools.Lpc2Xml$LogLevel[] ENUM$VALUES -> ENUM$VALUES
    org.linphone.tools.Lpc2Xml$LogLevel[] values() -> values
    org.linphone.tools.Lpc2Xml$LogLevel valueOf(java.lang.String) -> valueOf
org.linphone.tools.Xml2Lpc -> org.linphone.tools.Xml2Lpc:
    boolean mAvailable -> mAvailable
    long internalPtr -> internalPtr
    int[] $SWITCH_TABLE$org$linphone$tools$Xml2Lpc$LogLevel -> $SWITCH_TABLE$org$linphone$tools$Xml2Lpc$LogLevel
    void init() -> init
    void destroy() -> destroy
    void finalize() -> finalize
    int setXmlFile(java.lang.String) -> setXmlFile
    int setXmlString(java.lang.String) -> setXmlString
    int setXsdFile(java.lang.String) -> setXsdFile
    int setXsdString(java.lang.String) -> setXsdString
    int validate() -> validate
    int convert(org.linphone.core.LpConfig) -> convert
    void printLog(int,java.lang.String) -> printLog
    boolean isAvailable() -> isAvailable
    int[] $SWITCH_TABLE$org$linphone$tools$Xml2Lpc$LogLevel() -> $SWITCH_TABLE$org$linphone$tools$Xml2Lpc$LogLevel
org.linphone.tools.Xml2Lpc$LogLevel -> org.linphone.tools.Xml2Lpc$LogLevel:
    org.linphone.tools.Xml2Lpc$LogLevel DEBUG -> DEBUG
    org.linphone.tools.Xml2Lpc$LogLevel MESSAGE -> MESSAGE
    org.linphone.tools.Xml2Lpc$LogLevel WARNING -> WARNING
    org.linphone.tools.Xml2Lpc$LogLevel ERROR -> ERROR
    org.linphone.tools.Xml2Lpc$LogLevel[] ENUM$VALUES -> ENUM$VALUES
    org.linphone.tools.Xml2Lpc$LogLevel[] values() -> values
    org.linphone.tools.Xml2Lpc$LogLevel valueOf(java.lang.String) -> valueOf
